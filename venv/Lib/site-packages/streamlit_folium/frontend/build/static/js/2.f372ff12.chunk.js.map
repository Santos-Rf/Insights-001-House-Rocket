{"version":3,"sources":["../node_modules/underscore/modules/_setup.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/streamlit-component-lib/node_modules/react/index.js","../../src/event.mjs","../../src/event-target.mjs","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/OverloadYield.js","../node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js","../node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../node_modules/flatbuffers/js/flatbuffers.mjs","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../util/utf8.ts","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../io/interfaces.ts","../util/compat.ts","../util/buffer.ts","../io/adapters.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../vector.ts","../fb/Schema.ts","../fb/Message.ts","../enum.ts","../util/bit.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../visitor.ts","../visitor/typecomparator.ts","../type.ts","../data.ts","../util/pretty.ts","../builder/valid.ts","../builder/buffer.ts","../builder.ts","../builder/bool.ts","../builder/null.ts","../builder/date.ts","../builder/decimal.ts","../builder/dictionary.ts","../builder/fixedsizebinary.ts","../util/math.ts","../builder/float.ts","../node_modules/@babel/runtime/helpers/esm/construct.js","../util/bn.ts","../builder/int.ts","../builder/time.ts","../builder/timestamp.ts","../builder/interval.ts","../builder/binary.ts","../builder/utf8.ts","../builder/run.ts","../vector/row.ts","../util/vector.ts","../vector/chunked.ts","../column.ts","../util/args.ts","../schema.ts","../builder/list.ts","../builder/fixedsizelist.ts","../builder/map.ts","../builder/struct.ts","../builder/union.ts","../visitor/set.ts","../fb/File.ts","../visitor/builderctor.ts","../builder/index.ts","../ipc/metadata/file.ts","../io/stream.ts","../io/file.ts","../util/int.ts","../visitor/vectorloader.ts","../visitor/typeassembler.ts","../ipc/metadata/json.ts","../ipc/metadata/message.ts","../ipc/message.ts","../visitor/vectorassembler.ts","../ipc/writer.ts","../util/recordbatch.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../vector/base.ts","../vector/binary.ts","../vector/bool.ts","../vector/date.ts","../vector/decimal.ts","../vector/dictionary.ts","../vector/fixedsizebinary.ts","../vector/fixedsizelist.ts","../vector/float.ts","../vector/interval.ts","../vector/int.ts","../vector/list.ts","../vector/map.ts","../vector/null.ts","../vector/struct.ts","../vector/timestamp.ts","../vector/time.ts","../vector/union.ts","../vector/utf8.ts","../util/fn.ts","../visitor/get.ts","../visitor/indexof.ts","../visitor/iterator.ts","../visitor/toarray.ts","../visitor/bytewidth.ts","../visitor/vectorctor.ts","../vector/index.ts","../table.ts","../recordbatch.ts","../ipc/reader.ts","../io/whatwg/builder.ts","../compute/predicate.ts","../compute/dataframe.ts","../Arrow.ts","../Arrow.dom.ts","../io/whatwg/iterable.ts","../io/whatwg/reader.ts","../io/whatwg/writer.ts","../node_modules/streamlit-component-lib/dist/ArrowTable.js","../node_modules/streamlit-component-lib/dist/streamlit.js","../node_modules/streamlit-component-lib/dist/StreamlitReact.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/underscore/modules/restArguments.js","../node_modules/underscore/modules/isObject.js","../node_modules/underscore/modules/isNull.js","../node_modules/underscore/modules/isUndefined.js","../node_modules/underscore/modules/isBoolean.js","../node_modules/underscore/modules/isElement.js","../node_modules/underscore/modules/_tagTester.js","../node_modules/underscore/modules/isString.js","../node_modules/underscore/modules/isNumber.js","../node_modules/underscore/modules/isDate.js","../node_modules/underscore/modules/isRegExp.js","../node_modules/underscore/modules/isError.js","../node_modules/underscore/modules/isSymbol.js","../node_modules/underscore/modules/isArrayBuffer.js","../node_modules/underscore/modules/isFunction.js","../node_modules/underscore/modules/_hasObjectTag.js","../node_modules/underscore/modules/_stringTagBug.js","../node_modules/underscore/modules/isDataView.js","../node_modules/underscore/modules/isArray.js","../node_modules/underscore/modules/_has.js","../node_modules/underscore/modules/isArguments.js","../node_modules/underscore/modules/isFinite.js","../node_modules/underscore/modules/isNaN.js","../node_modules/underscore/modules/constant.js","../node_modules/underscore/modules/_createSizePropertyCheck.js","../node_modules/underscore/modules/_shallowProperty.js","../node_modules/underscore/modules/_getByteLength.js","../node_modules/underscore/modules/_isBufferLike.js","../node_modules/underscore/modules/isTypedArray.js","../node_modules/underscore/modules/_getLength.js","../node_modules/underscore/modules/_collectNonEnumProps.js","../node_modules/underscore/modules/keys.js","../node_modules/underscore/modules/isEmpty.js","../node_modules/underscore/modules/isMatch.js","../node_modules/underscore/modules/underscore.js","../node_modules/underscore/modules/_toBufferView.js","../node_modules/underscore/modules/isEqual.js","../node_modules/underscore/modules/allKeys.js","../node_modules/underscore/modules/_methodFingerprint.js","../node_modules/underscore/modules/isMap.js","../node_modules/underscore/modules/isWeakMap.js","../node_modules/underscore/modules/isSet.js","../node_modules/underscore/modules/isWeakSet.js","../node_modules/underscore/modules/values.js","../node_modules/underscore/modules/pairs.js","../node_modules/underscore/modules/invert.js","../node_modules/underscore/modules/functions.js","../node_modules/underscore/modules/_createAssigner.js","../node_modules/underscore/modules/extend.js","../node_modules/underscore/modules/extendOwn.js","../node_modules/underscore/modules/defaults.js","../node_modules/underscore/modules/_baseCreate.js","../node_modules/underscore/modules/create.js","../node_modules/underscore/modules/clone.js","../node_modules/underscore/modules/tap.js","../node_modules/underscore/modules/toPath.js","../node_modules/underscore/modules/_toPath.js","../node_modules/underscore/modules/_deepGet.js","../node_modules/underscore/modules/get.js","../node_modules/underscore/modules/has.js","../node_modules/underscore/modules/identity.js","../node_modules/underscore/modules/matcher.js","../node_modules/underscore/modules/property.js","../node_modules/underscore/modules/_optimizeCb.js","../node_modules/underscore/modules/_baseIteratee.js","../node_modules/underscore/modules/iteratee.js","../node_modules/underscore/modules/_cb.js","../node_modules/underscore/modules/mapObject.js","../node_modules/underscore/modules/noop.js","../node_modules/underscore/modules/propertyOf.js","../node_modules/underscore/modules/times.js","../node_modules/underscore/modules/random.js","../node_modules/underscore/modules/now.js","../node_modules/underscore/modules/_createEscaper.js","../node_modules/underscore/modules/_escapeMap.js","../node_modules/underscore/modules/escape.js","../node_modules/underscore/modules/unescape.js","../node_modules/underscore/modules/_unescapeMap.js","../node_modules/underscore/modules/templateSettings.js","../node_modules/underscore/modules/template.js","../node_modules/underscore/modules/result.js","../node_modules/underscore/modules/uniqueId.js","../node_modules/underscore/modules/chain.js","../node_modules/underscore/modules/_executeBound.js","../node_modules/underscore/modules/partial.js","../node_modules/underscore/modules/bind.js","../node_modules/underscore/modules/_isArrayLike.js","../node_modules/underscore/modules/_flatten.js","../node_modules/underscore/modules/bindAll.js","../node_modules/underscore/modules/memoize.js","../node_modules/underscore/modules/delay.js","../node_modules/underscore/modules/defer.js","../node_modules/underscore/modules/throttle.js","../node_modules/underscore/modules/debounce.js","../node_modules/underscore/modules/wrap.js","../node_modules/underscore/modules/negate.js","../node_modules/underscore/modules/compose.js","../node_modules/underscore/modules/after.js","../node_modules/underscore/modules/before.js","../node_modules/underscore/modules/once.js","../node_modules/underscore/modules/findKey.js","../node_modules/underscore/modules/_createPredicateIndexFinder.js","../node_modules/underscore/modules/findIndex.js","../node_modules/underscore/modules/findLastIndex.js","../node_modules/underscore/modules/sortedIndex.js","../node_modules/underscore/modules/_createIndexFinder.js","../node_modules/underscore/modules/indexOf.js","../node_modules/underscore/modules/lastIndexOf.js","../node_modules/underscore/modules/find.js","../node_modules/underscore/modules/findWhere.js","../node_modules/underscore/modules/each.js","../node_modules/underscore/modules/map.js","../node_modules/underscore/modules/_createReduce.js","../node_modules/underscore/modules/reduce.js","../node_modules/underscore/modules/reduceRight.js","../node_modules/underscore/modules/filter.js","../node_modules/underscore/modules/reject.js","../node_modules/underscore/modules/every.js","../node_modules/underscore/modules/some.js","../node_modules/underscore/modules/contains.js","../node_modules/underscore/modules/invoke.js","../node_modules/underscore/modules/pluck.js","../node_modules/underscore/modules/where.js","../node_modules/underscore/modules/max.js","../node_modules/underscore/modules/min.js","../node_modules/underscore/modules/toArray.js","../node_modules/underscore/modules/sample.js","../node_modules/underscore/modules/shuffle.js","../node_modules/underscore/modules/sortBy.js","../node_modules/underscore/modules/_group.js","../node_modules/underscore/modules/groupBy.js","../node_modules/underscore/modules/indexBy.js","../node_modules/underscore/modules/countBy.js","../node_modules/underscore/modules/partition.js","../node_modules/underscore/modules/size.js","../node_modules/underscore/modules/_keyInObj.js","../node_modules/underscore/modules/pick.js","../node_modules/underscore/modules/omit.js","../node_modules/underscore/modules/initial.js","../node_modules/underscore/modules/first.js","../node_modules/underscore/modules/rest.js","../node_modules/underscore/modules/last.js","../node_modules/underscore/modules/compact.js","../node_modules/underscore/modules/flatten.js","../node_modules/underscore/modules/difference.js","../node_modules/underscore/modules/without.js","../node_modules/underscore/modules/uniq.js","../node_modules/underscore/modules/union.js","../node_modules/underscore/modules/intersection.js","../node_modules/underscore/modules/unzip.js","../node_modules/underscore/modules/zip.js","../node_modules/underscore/modules/object.js","../node_modules/underscore/modules/range.js","../node_modules/underscore/modules/chunk.js","../node_modules/underscore/modules/_chainResult.js","../node_modules/underscore/modules/mixin.js","../node_modules/underscore/modules/underscore-array-methods.js","../node_modules/underscore/modules/index-default.js","../node_modules/react-is/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/streamlit-component-lib/node_modules/react/cjs/react.production.min.js","../node_modules/object-assign/index.js","../node_modules/webpack/buildin/global.js"],"names":["VERSION","root","self","global","Function","ArrayProto","Array","prototype","ObjProto","Object","SymbolProto","Symbol","push","slice","toString","hasOwnProperty","supportsArrayBuffer","ArrayBuffer","supportsDataView","DataView","nativeIsArray","isArray","nativeKeys","keys","nativeCreate","create","nativeIsView","isView","_isNaN","isNaN","_isFinite","isFinite","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","MAX_ARRAY_INDEX","Math","pow","_slicedToArray","arr","i","_i","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","done","value","length","err","unsupportedIterableToArray","TypeError","module","exports","require","privateData","WeakMap","wrappers","pd","event","retv","get","console","assert","setCancelFlag","data","passiveListener","cancelable","canceled","preventDefault","error","Event","eventTarget","set","this","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","Date","now","defineProperty","enumerable","key","defineRedirectDescriptor","configurable","defineCallDescriptor","apply","arguments","getWrapper","proto","wrapper","BaseEvent","CustomEvent","constructor","writable","isFunc","getOwnPropertyDescriptor","defineWrapper","getPrototypeOf","isStopped","setPassiveListener","type","target","composedPath","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","bubbles","Boolean","defaultPrevented","composed","srcElement","cancelBubble","returnValue","initEvent","window","setPrototypeOf","listenersMap","ATTRIBUTE","isObject","x","getListeners","listeners","defineEventAttribute","eventTargetPrototype","eventName","node","listenerType","listener","prev","delete","newNode","passive","once","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","types","Map","addEventListener","options","optionsIsObj","capture","undefined","removeEventListener","dispatchEvent","wrappedEvent","wrapEvent","handleEvent","setEventPhase","setCurrentTarget","_createForOfIteratorHelper","o","allowArrayLike","it","F","s","n","e","f","normalCompletion","didErr","step","_e2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","Promise","then","_asyncToGenerator","fn","args","_classCallCheck","instance","Constructor","_typeof","obj","_toPropertyKey","input","hint","prim","toPrimitive","res","String","Number","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_regeneratorRuntime","Op","hasOwn","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","name","mark","__proto__","awrap","async","iter","val","object","reverse","pop","skipTempReset","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_OverloadYield","kind","v","k","_awaitAsyncGenerator","AsyncGenerator","front","back","resume","overloaded","nextKey","settle","request","_wrapAsyncGenerator","_asyncGeneratorDelegate","inner","waiting","pump","_asyncIterator","sync","retry","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","r","ret","thr","flatbuffers","inRange","a","min","max","ToDictionary","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","len","existing_vtable","vt1","outer_loop","vt2","readInt16","j","root_table","opt_file_identifier","file_identifier","charCodeAt","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","b","c","__indirect","__vector","__vector_len","__has_identifier","ident","end_of_stream","Stream","tokens","endOfStream","read","shift","prepend","token","unshift","finished","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","encoding","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","count","temp","decode","byteOffset","byteLength","input_stream","code_points","indexOf","cp","codePointsToString","encode","opt_string","string","u","d","stringToCodePoints","_Buffer","Buffer","useNativeEncoders","decodeUtf8","decoder","toUint8Array","from","TextDecoderPolyfill","encodeUtf8","encoder","TextEncoderPolyfill","_setPrototypeOf","p","bind","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","ITERATOR_DONE","freeze","ArrowJSON","_json","ReadableInterop","_getDOMStream","tee","_getNodeStream","pipe","pipeTo","duplex","pipeThrough","_DOMStream","toDOMStream","_nodeStream","toNodeStream","AsyncQueue","_values","resolvers","_closedPromise","_closedPromiseResolve","reason","return","_ensureOpen","_error","streamAdapters","_","abort","close","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","BigIntCtor","BigIntAvailable","BigInt64ArrayUnavailableError","BigInt64Array","BigInt64ArrayCtor","BigUint64ArrayUnavailableError","BigUint64Array","BigUint64ArrayCtor","isNumber","isBoolean","isFunction","isPromise","isIterable","isAsyncIterable","isArrowJSON","isIteratorResult","isFileHandle","isFetchResponse","isReadableDOMStream","isWritableDOMStream","isWritableNodeStream","isReadableNodeStream","toArrayBufferViewIterator","SharedArrayBuf","SharedArrayBuffer","memcpy","source","targetByteOffset","sourceByteLength","targetByteLength","dst","src","joinUint8Arrays","chunks","sliced","xOffset","yOffset","xLen","yLen","y","collapseContiguousByteRanges","reduce","index","Infinity","toArrayBufferView","ArrayBufferViewCtor","BYTES_PER_ELEMENT","toInt8Array","Int8Array","toInt16Array","Int16Array","toInt32Array","toBigInt64Array","toUint16Array","toUint32Array","Uint32Array","toBigUint64Array","toFloat32Array","toFloat64Array","toUint8ClampedArray","Uint8ClampedArray","ArrayCtor","buffers","toInt8ArrayIterator","toInt16ArrayIterator","toInt32ArrayIterator","toUint8ArrayIterator","toUint16ArrayIterator","toUint32ArrayIterator","toFloat32ArrayIterator","toFloat64ArrayIterator","toUint8ClampedArrayIterator","toArrayBufferViewAsyncIterator","emit","toInt8ArrayAsyncIterator","toInt16ArrayAsyncIterator","toInt32ArrayAsyncIterator","toUint8ArrayAsyncIterator","toUint16ArrayAsyncIterator","toUint32ArrayAsyncIterator","toFloat32ArrayAsyncIterator","toFloat64ArrayAsyncIterator","toUint8ClampedArrayAsyncIterator","rebaseValueOffsets","valueOffsets","compareArrayLike","fromIterable","fromAsyncIterable","fromDOMStream","fromNodeStream","byteRange","cmd","bufferLength","threw","throw","AdaptiveByteReader","releaseLock","byobReader","defaultReader","supportsBYOB","reader","getBYOBReader","getDefaultReader","catch","readFromBYOBReader","mode","readInto","onEvent","cleanup","events","evt","destroy","race","map","_defineProperty","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","property","receiver","base","org","flatbuf","arrow","apache","AbstractVector","MetadataVersion","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","Type","Endianness","Null","__init","builder","startNull","endNull","Struct_","startStruct_","endStruct_","List","startList","endList","LargeList","startLargeList","endLargeList","FixedSizeList","listSize","startFixedSizeList","addListSize","endFixedSizeList","keysSorted","startMap","addKeysSorted","endMap","Union","Sparse","typeIdsOffset","numElems","startUnion","addMode","addTypeIds","endUnion","Int","bitWidth","isSigned","startInt","addBitWidth","addIsSigned","endInt","FloatingPoint","HALF","precision","startFloatingPoint","addPrecision","endFloatingPoint","Utf8","startUtf8","endUtf8","Binary","startBinary","endBinary","LargeUtf8","startLargeUtf8","endLargeUtf8","LargeBinary","startLargeBinary","endLargeBinary","FixedSizeBinary","byteWidth","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","Bool","startBool","endBool","Decimal","scale","startDecimal","addScale","endDecimal","MILLISECOND","unit","startDate","addUnit","endDate","Time","startTime","endTime","Timestamp","SECOND","optionalEncoding","timezoneOffset","startTimestamp","addTimezone","endTimestamp","Interval","YEAR_MONTH","startInterval","endInterval","Duration","startDuration","endDuration","KeyValue","keyOffset","valueOffset","startKeyValue","addKey","addValue","endKeyValue","DictionaryEncoding","id","indexTypeOffset","isOrdered","startDictionaryEncoding","addId","addIndexType","addIsOrdered","endDictionaryEncoding","Field","nameOffset","nullable","typeType","typeOffset","dictionaryOffset","childrenOffset","customMetadataOffset","startField","addName","addNullable","addTypeType","addType","addDictionary","addChildren","addCustomMetadata","endField","Schema","Little","endianness","fieldsOffset","startSchema","addEndianness","addFields","endSchema","NS7624605610262437867","MessageHeader","FieldNode","null_count","RecordBatch","nodesOffset","buffersOffset","startRecordBatch","addLength","addNodes","addBuffers","endRecordBatch","DictionaryBatch","dataOffset","isDelta","startDictionaryBatch","addData","addIsDelta","endDictionaryBatch","Message","V1","version","headerType","headerOffset","bodyLength","startMessage","addVersion","addHeaderType","addHeader","addBodyLength","endMessage","Schema_","BufferType","Message_","iterateBits","getBool","_data","_index","byte","bit","getBit","setBool","truncateBitmap","bitmap","alignedSize","packBools","xs","begin","byteIndex","remaining","popcnt_bit_range","lhs","rhs","sum","rhsInside","lhsInside","popcnt_array","cnt","pos","view","popcnt_uint32","getUint32","getUint16","getUint8","uint32","_toConsumableArray","arrayLikeToArray","Visitor","nodes","visit","getVisitFn","visitor","throwIfNotFound","dtype","Data","Vector","inferDType","DataType","visitNull","visitBool","visitInt","Int8","visitInt8","Int16","visitInt16","Int32","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float","visitFloat","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","visitTimestamp","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","visitTime","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","visitDecimal","visitList","Struct","visitStruct","visitUnion","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","Dictionary","visitDictionary","visitInterval","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","visitFixedSizeList","visitMap","_node","typeId","SINGLE","DOUBLE","MICROSECOND","NANOSECOND","DAY","DAY_TIME","Dense","TypeComparator","schema","compareFields","fields","others","every","compareField","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","timezone","compareTime","compareUnion","typeIds","children","compareInterval","indices","dictionary","comparer","ArrayType","Int_","Date_","Time_","Timestamp_","Interval_","child","valueType","join","Union_","typeIdToChildIndex","idx","Map_","atomicDictionaryId","getId","strideForType","nullCount","childData","floor","_nullCount","stride","nullBitmap","childStride","_sliceBuffers","clone","_sliceChildren","newLength","fill","VALIDITY","TYPE","OFFSET","DATA","valueOffsetsOrChildren","undf","valueToString","JSON","stringify","createIsValidFunction","nullValues","fnBody","noNaNs","valueToCase","roundLengthUpToNearest64Bytes","BPE","sliceOrExtendArray","BufferBuilder","_resize","extra","reserved","array","DataBufferBuilder","reserve","BitmapBufferBuilder","numValid","cur","OffsetsBufferBuilder","WideBufferBuilder","_ArrayType64","buffer64","ArrayType64","nulls","_nulls","_isValid","new","flush","numInvalid","_offsets","_typeIds","reservedLength","reservedByteLength","setValid","isValid","setValue","_setValue","valid","numChildren","offsets","last","queueingStrategy","highWaterMark","sizeProperty","numChunks","append","toVector","throughIterable","throughAsyncIterable","FixedWidthBuilder","opts","VariableWidthBuilder","_pendingLength","pending","_pending","current","_flush","pendingLength","_flushPending","BoolBuilder","NullBuilder","DateBuilder","DateDayBuilder","DateMillisecondBuilder","DecimalBuilder","DictionaryBuilder","hashFn","_dictionaryOffset","_keysToIndices","valueToKey","keysToIndices","_dictionary","curr","concat","FixedSizeBinaryBuilder","f64","u32","uint16ToFloat64","h","expo","sigf","sign","NaN","float64ToUint16","FloatBuilder","Float16Builder","Float32Builder","Float64Builder","Parent","Class","bignumToString","bignumToBigInt","isArrowBigNumSymbol","for","BigNum","SignedBigNum","UnsignedBigNum","DecimalBigNum","bignumToNumber","bn","hi","lo","signed","words","number","decimalToString","digits","base64","base32","checks","toJSON","assign","memo","BN","num","IntBuilder","Int8Builder","Int16Builder","Int32Builder","Int64Builder","toBigInt","Uint8Builder","Uint16Builder","Uint32Builder","Uint64Builder","TimeBuilder","TimeSecondBuilder","TimeMillisecondBuilder","TimeMicrosecondBuilder","TimeNanosecondBuilder","TimestampBuilder","TimestampSecondBuilder","TimestampMillisecondBuilder","TimestampMicrosecondBuilder","TimestampNanosecondBuilder","IntervalBuilder","IntervalDayTimeBuilder","IntervalYearMonthBuilder","BinaryBuilder","Utf8Builder","Run","kParent","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","Row","parent","numKeys","ktoi","itov","getValue","getIndex","ki","vi","kr","vr","has","callbackfn","thisArg","callback","m","str","MapRow","createRowProxy","getChildAt","StructRow","defineRowProxyProperties","findIndex","tmp","row","getter","setter","getKey","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","clampIndex","adjust","clampRange","end","big0","isNaNFast","createElementComparator","search","typeofSearch","valueOfSearch","comparators","createSubElementsComparator","creatMapComparator","createArrayLikeComparator","createVectorComparator","createObjectComparator","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","Chunked","vectors","calculateOffsets","_type","_chunks","_chunkOffsets","_length","_numChildren","chunk","isDictionary","_indices","flatten","_sliceInternal","columns","_children","vector","mid","isValidInternal","getInternal","element","indexOfInternal","toArray","arraySet","typedSet","chunkIndex","fromIndex","start","found","slices","chunkOffsets","chunkLength","chunkOffset","to","selectChunkArgs","Column","_field","SingleChunkColumn","metadata","column","rest","some","_chunk","selectArgs","Ctor","vals","_selectArgs","selectColumnArgs","_selectFieldArgs","selectFieldArgs","_selectChunkArgs","selectVectorChildrenArgs","_selectVectorChildrenArgs","toKeysAndValues","entries","fieldIndex","valueIndex","dictionaries","generateDictionaryMap","compareSchemas","columnNames","names","columnIndices","curFields","mergeMaps","newFields","f2","newDictionaries","m1","m2","ListBuilder","_run","run","FixedSizeListBuilder","childIndex","MapBuilder","StructBuilder","UnionBuilder","_valueToChildTypeId","childTypeId","SparseUnionBuilder","DenseUnionBuilder","SetVisitor","setEpochMsToMillisecondsLong","epochMs","setVariableWidthBytes","setDateDay","setEpochMsToDays","setDateMillisecond","setNumeric","setFloat16","setNumericX2","values64","long","setTimestampSecond","setTimestampMillisecond","setTimestampMicrosecond","setEpochMsToMicrosecondsLong","setTimestampNanosecond","setEpochMsToNanosecondsLong","setTimeSecond","setTimeMillisecond","setTimeMicrosecond","setTimeNanosecond","setDenseUnion","setSparseUnion","setIntervalDayTime","setIntervalYearMonth","itr","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","GetBuilderCtor","newBuilder","getBuilderConstructor","defaultOptions","getChildOptions","T","setVisitor","Footer","Block","schemaOffset","dictionariesOffset","recordBatchesOffset","startFooter","addSchema","addDictionaries","addRecordBatches","endFooter","metaDataLength","_Block","File_","_Footer","Footer_","V4","recordBatches","dictionaryBatches","_recordBatches","_dictionaryBatches","numRecordBatches","block","getRecordBatch","numDictionaries","getDictionaryBatch","buf","footer","getRootAsFooter","OffHeapFooter","startRecordBatchesVector","rb","FileBlock","startDictionariesVector","db","dictionaryBatchesOffset","finishFooterBuffer","_footer","recordBatchesLength","dictionariesLength","fileBlock","createBlock","AsyncByteQueue","ByteStream","ByteStreamSource","peek","AsyncByteStream","AsyncByteStreamSource","body","closed","cancel","RandomAccessFile","readAt","getInt32","nBytes","AsyncRandomAccessFile","file","_handle","stat","bytesRead","intAsHex","kInt32DecimalDigits","kPowersOfTen","BaseInt64","L","R","product","lessThan","_times","_plus","out_buffer","fromString","out","posn","group","parseInt","substr","multiple","times","plus","left","right","this_high","other_high","negate","startsWith","Int128","L0","L1","L2","L3","R0","R1","R2","R3","multiply","sums","VectorLoader","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","visitMany","readTypeIds","readDictionary","nextBufferRange","JSONVectorLoader","sources","isTimestamp","isInt","isTime","isDate","convertArray","isDecimal","isBinary","isFixedSizeBinary","joined","binaryDataFromJSON","isBool","isUtf8","TypeAssembler","startTypeIdsVector","createTypeIdsVector","indexType","recordBatchFromJSON","fieldNodesFromJSON","buffersFromJSON","fieldChildrenFromJSON","fromJSON","fieldNodes","validity","BufferRegion","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","_Field","_Schema","_Message","_KeyValue","_FieldNode","_Endianness","_RecordBatch","_DictionaryBatch","header","_version","_headerType","_createHeader","_bodyLength","msg","message","messageHeaderFromJSON","_message","getRootAsMessage","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","finishMessageBuffer","_nodes","_buffers","_isDelta","_id","decodeFieldChildren","childrenLength","decodeCustomMetadata","customMetadataLength","customMetadata","decodeIndexType","decodeFieldType","typeIdsArray","typeAssembler","childOffsets","childrenVectorOffset","createChildrenVector","metadataOffset","createCustomMetadataVector","dictType","dictMeta","fieldOffsets","startFieldsVector","fieldsVectorOffset","createFieldsVector","platformIsLittleEndian","Big","_schema","fieldsLength","decodeSchemaFields","schemaFieldsFromJSON","recordBatch","startNodesVector","nodesVectorOffset","startBuffersVector","b_","buffersVectorOffset","batch","nodesLength","decodeFieldNodes","bufferRegions","buffersLength","decodeBuffers","dictionaryBatch","createFieldNode","createBuffer","setInt16","invalidMessageType","nullMessage","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","MessageReader","readMetadataLength","readMetadata","throwIfNull","readMessage","PADDING","metadataLength","AsyncMessageReader","JSONMessageReader","_body","_batchIndex","_dictionaryIndex","batches","flattenDataSources","MAGIC_STR","MAGIC","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","VectorAssembler","_byteLength","_bufferRegions","RangeError","isNull","addBuffer","_nullV","assembler","vectorChildren","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","RecordBatchWriter","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","autoDestroy","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","writeAll","writeAllAsync","sink","objectMode","_writeFooter","compareTo","_writeSchema","payload","_InternalEmptyPlaceholderRecordBatch","_writeRecordBatch","flatbufferSize","prefixSize","nPaddingBytes","_write","of","_writePadding","write","_writeMessage","assemble","_writeDictionaries","_writeBodyBuffers","padding","_writeDictionaryBatch","writableStrategy","readableStrategy","RecordBatchStreamWriter","writer","RecordBatchFileWriter","_writeMagic","noopBuf","nullBufs","bitmapLength","distributeVectorsIntoRecordBatches","vecs","batchArgs","numBatches","batchLength","numColumns","POSITIVE_INFINITY","distributeChildData","uniformlyDistributeChunksAcrossRecordBatches","_changeLengthAndBackfillNullBitmap","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","BaseVector","_bindDataAccessors","VectorName","isConcatSpreadable","BinaryVector","BoolVector","vectorFromValuesWithType","DateVector","DateDayVector","DateMillisecondVector","DecimalVector","DictionaryVector","FixedSizeBinaryVector","FixedSizeListVector","FloatVector","ArrowType","vectorTypeToDataType","InputType","arrayTypeToDataType","convertTo16Bit","Float16Vector","Float32Vector","Float64Vector","typeCtor","dataCtor","IntervalVector","IntervalDayTimeVector","IntervalYearMonthVector","IntVector","is64bit","convert32To64Bit","Int8Vector","Int16Vector","Int32Vector","Int64Vector","_values64","Uint8Vector","Uint16Vector","Uint32Vector","Uint64Vector","ListVector","MapVector","NullVector","StructVector","_row","bound","TimestampVector","TimestampSecondVector","TimestampMillisecondVector","TimestampMicrosecondVector","TimestampNanosecondVector","TimeVector","TimeSecondVector","TimeMillisecondVector","TimeMicrosecondVector","TimeNanosecondVector","UnionVector","DenseUnionVector","SparseUnionVector","Utf8Vector","partial0","partial2","GetVisitor","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToMs","epochDaysToDate","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getFloat16","getBigInts","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getTimeMicrosecond","getTimeNanosecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","interval","int32s","_vector","decimal","IndexOfVisitor","indexOfValue","searchElement","indexOfNull","compare","indexOfUnion","IteratorVisitor","vectorIterator","getFn","getVisitor","nullByte","nullBit","nullableIterator","ToArrayVisitor","arrayOfVector","iteratorVisitor","variableWidthColumnErrorMessage","ByteWidthVisitor","____","visitFields","GetVectorConstructor","newDataType","getVectorConstructor","transform","indexOfVisitor","toArrayVisitor","getByteWidth","byteWidthVisitor","wrapNullableSet","VectorCtor","partialType0","getColumnAt","getColumnIndex","nameToIndex","selectAt","columnName","newIdx","oldToNew","_f","_fs","empty","fromStruct","tableFromIterable","tableFromAsyncIterable","RecordBatchReader","isSync","open","opening","cols","_dictionaries","DictionaryCollector","collect","fs","vs","l","batchData","ensureSameLengthData","readAllSync","impl","_impl","isFile","isAsync","isStream","readRecordBatch","RecordBatchStreamReader","RecordBatchJSONReaderImpl","fromArrowJSON","fromFileHandle","fromAsyncByteStream","RecordBatchFileReader","RecordBatchFileReaderImpl","RecordBatchStreamReaderImpl","fromByteStream","readAllAsync","AsyncRecordBatchStreamReader","AsyncRecordBatchFileReader","RecordBatchReaderImpl","_recordBatchIndex","_loadVectors","_reader","shouldAutoDestroy","readSchema","_readNextMessageAndValidate","readMessageBody","_loadRecordBatch","_loadDictionaryBatch","AsyncRecordBatchStreamReaderImpl","_readFooter","_readDictionaryBatch","seek","AsyncRecordBatchFileReaderImpl","BuilderTransform","_numChunks","_finished","_bufferedSize","builderOptions","_controller","_builder","_getSize","chunkByteLength","readableHighWaterMark","writableHighWaterMark","ReadableStream","_maybeFlush","WritableStream","_writeValueAndReturnChunkSize","bufferedSize","controller","desiredSize","_enqueue","enqueue","Value","Literal","Equals","LTeq","GTeq","Not","ge","le","eq","Col","colidx","Predicate","expr","And","Or","ComparisonPredicate","_bindLitLit","_bindLitCol","_bindColLit","_bindColCol","CombinationPredicate","accum","_batch","rtrn","left_func","right_func","col","lit","col_func","lastDictionary","reverseLookup","lastKey","func","countBy","DataFrame","scan","scanReverse","predicate","FilteredDataFrame","batchIndex","numRows","count_by","countByteLength","ceil","log","counts","CountByResult","_predicate","isBound","and","util_bn_","util_int_","util_bit_","util_math_","util_buffer_","util_vector_","bm","hwm","pull","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","queue","readable","ComponentMessageType","ArrowTable","indexBuffer","columnsBuffer","styler","_this","getCell","rowIndex","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","uuid","indexTable","displayValuesTable","dataTable","getColumnTypeId","nanosToDate","caption","displayValues","styles","numCols","rows","dataRows","dataColumns","serialize","nanos","__assign","Streamlit","API_VERSION","RENDER_EVENT","registeredMessageListener","setComponentReady","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","setFrameHeight","height","document","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","setComponentValue","dataType","isBigIntArray","isTypedArray","SET_COMPONENT_VALUE","onRenderMessage","dataframeArgs","argsDataframeToObject","disabled","theme","_injectTheme","eventData","detail","argsDataframe","argsDataframeArrow","_a","toArrowTable","fromEntries","df","postMessage","isStreamlitMessage","style","createElement","head","appendChild","innerHTML","primaryColor","backgroundColor","secondaryBackgroundColor","textColor","font","__extends","extendStatics","__","_super","StreamlitComponentBase","componentDidMount","componentDidUpdate","React","PureComponent","_unsupportedIterableToArray","minLen","test","_arrayLikeToArray","arr2","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertyNames","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","restArguments","startIndex","isUndefined","isElement","nodeType","tagTester","tag","nodelist","childNodes","hasStringTagBug","hasObjectTag","isIE11","isDataView","getInt8","isArrayBuffer","isArguments","isSymbol","parseFloat","constant","createSizePropertyCheck","getSizeProperty","collection","shallowProperty","getByteLength","typedArrayPattern","isBufferLike","collectNonEnumProps","hash","contains","emulatedSet","nonEnumIdx","prop","isEmpty","getLength","isString","isMatch","attrs","_keys","_wrapped","toBufferView","bufferSource","tagDataView","aStack","bStack","deepEq","className","areArrays","aCtor","bCtor","isEqual","allKeys","ie11fingerprint","methods","weakMapMethods","forEachName","commonInit","mapTail","mapMethods","setMethods","pairs","invert","functions","sort","createAssigner","keysFunc","defaults","baseCreate","extendOwn","extend","tap","interceptor","toPath","path","deepGet","_has","identity","matcher","optimizeCb","argCount","accumulator","baseIteratee","iteratee","cb","mapObject","results","currentKey","noop","propertyOf","random","getTime","createEscaper","escaper","match","testRegexp","RegExp","replaceRegexp","replace","escapeMap","templateSettings","evaluate","interpolate","escape","noMatch","escapes","escapeRegExp","escapeChar","bareIdentifier","template","text","settings","oldSettings","argument","variable","fallback","idCounter","uniqueId","prefix","chain","_chain","executeBound","sourceFunc","boundFunc","callingContext","partial","boundArgs","placeholder","callArgs","depth","strict","output","isArrayLike","memoize","hasher","cache","address","wait","setTimeout","delay","throttle","timeout","previous","later","leading","throttled","_now","clearTimeout","trailing","debounce","immediate","passed","debounced","_args","compose","after","before","findKey","createPredicateIndexFinder","dir","sortedIndex","createIndexFinder","predicateFind","item","findLastIndex","find","findWhere","each","createReduce","reducer","initial","list","guard","contextPath","pluck","where","computed","lastComputed","reStrSymbol","sample","rand","shuffle","sortBy","criteria","behavior","partition","pass","keyInObj","pick","first","compact","_flatten","otherArrays","difference","uniq","isSorted","seen","arrays","intersection","argsLength","unzip","range","chainResult","mixin","allExports","g","q","w","z","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","B","C","encodeURIComponent","D","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","refs","updater","G","H","isReactComponent","setState","forceUpdate","I","isPureReactComponent","J","K","ref","__self","__source","M","_owner","O","P","Q","keyPrefix","S","U","V","W","aa","X","N","Y","Z","ba","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","Children","only","Component","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createFactory","createRef","forwardRef","isValidElement","lazy","_ctor","_status","_result","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","propIsEnumerable","test1","test2","test3","split","letter","shouldUseNative","toObject"],"mappings":";mHAAA,orBACO,IAAIA,EAAU,SAKVC,EAAuB,iBAARC,MAAoBA,KAAKA,OAASA,MAAQA,MACxC,iBAAVC,GAAsBA,EAAOA,SAAWA,GAAUA,GAC1DC,SAAS,cAATA,IACA,CAAC,EAGAC,EAAaC,MAAMC,UAAWC,EAAWC,OAAOF,UAChDG,EAAgC,qBAAXC,OAAyBA,OAAOJ,UAAY,KAGjEK,EAAOP,EAAWO,KACzBC,EAAQR,EAAWQ,MACnBC,EAAWN,EAASM,SACpBC,EAAiBP,EAASO,eAGnBC,EAA6C,qBAAhBC,YACpCC,EAAuC,qBAAbC,SAInBC,EAAgBd,MAAMe,QAC7BC,EAAab,OAAOc,KACpBC,EAAef,OAAOgB,OACtBC,EAAeV,GAAuBC,YAAYU,OAG3CC,EAASC,MAChBC,EAAYC,SAGLC,GAAc,CAAClB,SAAU,MAAMmB,qBAAqB,YACpDC,EAAqB,CAAC,UAAW,gBAAiB,WAC3D,uBAAwB,iBAAkB,kBAGjCC,EAAkBC,KAAKC,IAAI,EAAG,IAAM,C,+FCtChC,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIjC,MAAMe,QAAQkB,GAAM,OAAOA,CACjC,CDGS,CAAeA,IELT,SAA+BA,EAAKC,GACjD,IAAIC,EAAK,MAAQF,EAAM,KAAO,oBAAsB5B,QAAU4B,EAAI5B,OAAO+B,WAAaH,EAAI,cAC1F,GAAI,MAAQE,EAAI,CACd,IAAIE,EACFC,EACAC,EACAC,EACAC,EAAO,GACPC,GAAK,EACLC,GAAK,EACP,IACE,GAAIJ,GAAMJ,EAAKA,EAAGS,KAAKX,IAAMY,KAAM,IAAMX,EAAG,CAC1C,GAAI/B,OAAOgC,KAAQA,EAAI,OACvBO,GAAK,CACP,MAAO,OAASA,GAAML,EAAKE,EAAGK,KAAKT,IAAKW,QAAUL,EAAKnC,KAAK+B,EAAGU,OAAQN,EAAKO,SAAWd,GAAIQ,GAAK,GASlG,CARE,MAAOO,GACPN,GAAK,EAAIL,EAAKW,CAChB,CAAE,QACA,IACE,IAAKP,GAAM,MAAQP,EAAW,SAAMK,EAAKL,EAAW,SAAKhC,OAAOqC,KAAQA,GAAK,MAG/E,CAFE,QACA,GAAIG,EAAI,MAAML,CAChB,CACF,CACA,OAAOG,CACT,CACF,CFrBgC,CAAqBR,EAAKC,IAAM,OAAAgB,EAAA,GAA2BjB,EAAKC,IGLjF,WACb,MAAM,IAAIiB,UAAU,4IACtB,CHGsG,EACtG,C,+BIHEC,EAAOC,QAAUC,EAAQ,G,qiGCgBrBC,EAAc,IAAIC,QAOlBC,EAAW,IAAID,QAQrB,SAASE,EAAGC,GACR,IAAMC,EAAOL,EAAYM,IAAIF,GAM7B,OALAG,QAAQC,OACI,MAARH,EACA,8CACAD,GAEGC,C,CAOX,SAASI,EAAcC,GACS,MAAxBA,EAAKC,gBAYJD,EAAKN,MAAMQ,aAIhBF,EAAKG,UAAW,EACyB,oBAA9BH,EAAKN,MAAMU,gBAClBJ,EAAKN,MAAMU,kBAhBY,qBAAZP,SACkB,oBAAlBA,QAAQQ,OAEfR,QAAQQ,MACJ,qEACAL,EAAKC,gB,CAyBrB,SAASK,EAAMC,EAAab,GACxBJ,EAAYkB,IAAIC,KAAM,CAClBF,cACAb,QACAgB,WAAY,EACZC,cAAeJ,EACfJ,UAAU,EACVS,SAAS,EACTC,kBAAkB,EAClBZ,gBAAiB,KACjBa,UAAWpB,EAAMoB,WAAaC,KAAKC,QAIvC9E,OAAO+E,eAAeR,KAAM,YAAa,CAAE3B,OAAO,EAAOoC,YAAY,IAIrE,IADA,IAAMlE,EAAOd,OAAOc,KAAK0C,GAChBzB,EAAI,EAAGA,EAAIjB,EAAK+B,SAAUd,EAAG,CAClC,IAAMkD,EAAMnE,EAAKiB,GACXkD,KAAOV,MACTvE,OAAO+E,eAAeR,KAAMU,EAAKC,EAAyBD,G,EAyOtE,SAASC,EAAyBD,GAC9B,MAAO,CACHvB,IAAG,WACC,OAAOH,EAAGgB,MAAMf,MAAMyB,E,EAE1BX,IAAG,SAAC1B,GACAW,EAAGgB,MAAMf,MAAMyB,GAAOrC,C,EAE1BuC,cAAc,EACdH,YAAY,E,CAUpB,SAASI,EAAqBH,GAC1B,MAAO,CACHrC,MAAK,WACD,IAAMY,EAAQD,EAAGgB,MAAMf,MACvB,OAAOA,EAAMyB,GAAKI,MAAM7B,EAAO8B,U,EAEnCH,cAAc,EACdH,YAAY,E,CAmDpB,SAASO,EAAWC,GAChB,GAAa,MAATA,GAAiBA,IAAUxF,OAAOF,UAClC,OAAOsE,EAGX,IAAIqB,EAAUnC,EAASI,IAAI8B,GAK3B,OAJe,MAAXC,IACAA,EA/CR,SAAuBC,EAAWF,GAC9B,IAAM1E,EAAOd,OAAOc,KAAK0E,GACzB,GAAoB,IAAhB1E,EAAK+B,OACL,OAAO6C,EAIX,SAASC,EAAYtB,EAAab,GAC9BkC,EAAUjD,KAAK8B,KAAMF,EAAab,E,CAGtCmC,EAAY7F,UAAYE,OAAOgB,OAAO0E,EAAU5F,UAAW,CACvD8F,YAAa,CAAEhD,MAAO+C,EAAaR,cAAc,EAAMU,UAAU,KAIrE,IAAK,IAAI9D,EAAI,EAAGA,EAAIjB,EAAK+B,SAAUd,EAAG,CAClC,IAAMkD,EAAMnE,EAAKiB,GACjB,KAAMkD,KAAOS,EAAU5F,WAAY,CAC/B,IACMgG,EAAqC,oBADxB9F,OAAO+F,yBAAyBP,EAAOP,GACzBrC,MACjC5C,OAAO+E,eACHY,EAAY7F,UACZmF,EACAa,EACMV,EAAqBH,GACrBC,EAAyBD,G,EAK3C,OAAOU,C,CAgBOK,CAAcT,EAAWvF,OAAOiG,eAAeT,IAASA,GAClElC,EAASgB,IAAIkB,EAAOC,IAEjBA,C,CAqBX,SAAgBS,EAAU1C,GACtB,OAAOD,EAAGC,GAAOmB,gB,CAgCrB,SAAgBwB,EAAmB3C,EAAOO,GACtCR,EAAGC,GAAOO,gBAAkBA,C,CAjXhCK,EAAMtE,UAAY,CAKVsG,WACA,OAAO7C,EAAGgB,MAAMf,MAAM4C,I,EAOtBC,aACA,OAAO9C,EAAGgB,MAAMF,W,EAOhBI,oBACA,OAAOlB,EAAGgB,MAAME,a,EAMpB6B,aAAY,WACR,IAAM7B,EAAgBlB,EAAGgB,MAAME,cAC/B,OAAqB,MAAjBA,EACO,GAEJ,CAACA,E,EAOR8B,WACA,OAAO,C,EAOPC,sBACA,OAAO,C,EAOPC,gBACA,OAAO,C,EAOPC,qBACA,OAAO,C,EAOPlC,iBACA,OAAOjB,EAAGgB,MAAMC,U,EAOpBmC,gBAAe,WACX,IAAM7C,EAAOP,EAAGgB,MAEhBT,EAAKY,SAAU,EAC2B,oBAA/BZ,EAAKN,MAAMmD,iBAClB7C,EAAKN,MAAMmD,iB,EAQnBC,yBAAwB,WACpB,IAAM9C,EAAOP,EAAGgB,MAEhBT,EAAKY,SAAU,EACfZ,EAAKa,kBAAmB,EAC2B,oBAAxCb,EAAKN,MAAMoD,0BAClB9C,EAAKN,MAAMoD,0B,EAQfC,cACA,OAAOC,QAAQvD,EAAGgB,MAAMf,MAAMqD,Q,EAO9B7C,iBACA,OAAO8C,QAAQvD,EAAGgB,MAAMf,MAAMQ,W,EAOlCE,eAAc,WACVL,EAAcN,EAAGgB,M,EAOjBwC,uBACA,OAAOxD,EAAGgB,MAAMN,Q,EAOhB+C,eACA,OAAOF,QAAQvD,EAAGgB,MAAMf,MAAMwD,S,EAO9BpC,gBACA,OAAOrB,EAAGgB,MAAMK,S,EAQhBqC,iBACA,OAAO1D,EAAGgB,MAAMF,W,EAQhB6C,mBACA,OAAO3D,EAAGgB,MAAMG,O,EAEhBwC,iBAAatE,GACb,GAAKA,EAAL,CAGA,IAAMkB,EAAOP,EAAGgB,MAEhBT,EAAKY,SAAU,EACwB,mBAA5BZ,EAAKN,MAAM0D,eAClBpD,EAAKN,MAAM0D,cAAe,E,GAS9BC,kBACA,OAAQ5D,EAAGgB,MAAMN,Q,EAEjBkD,gBAAYvE,GACPA,GACDiB,EAAcN,EAAGgB,M,EAWzB6C,UAAS,W,GAMbpH,OAAO+E,eAAeX,EAAMtE,UAAW,cAAe,CAClD8C,MAAOwB,EACPe,cAAc,EACdU,UAAU,IAIQ,qBAAXwB,QAAkD,qBAAjBA,OAAOjD,QAC/CpE,OAAOsH,eAAelD,EAAMtE,UAAWuH,OAAOjD,MAAMtE,WAGpDwD,EAASgB,IAAI+C,OAAOjD,MAAMtE,UAAWsE,IChTzC,IAAMmD,EAAe,IAAIlE,QAKnBmE,EAAY,EAOlB,SAASC,EAASC,GACd,OAAa,OAANA,GAA2B,kBAANA,C,CAShC,SAASC,EAAatD,GAClB,IAAMuD,EAAYL,EAAa7D,IAAIW,GACnC,GAAiB,MAAbuD,EACA,MAAM,IAAI5E,UACN,oEAGR,OAAO4E,C,CA4EX,SAASC,EAAqBC,EAAsBC,GAChD/H,OAAO+E,eACH+C,EAAoB,YACfC,GAtEb,SAAwCA,GACpC,MAAO,CACHrE,IAAG,WAGC,IAFA,IACIsE,EADcL,EAAapD,MACVb,IAAIqE,GACV,MAARC,GAAc,CACjB,GAAIA,EAAKC,eAAiBT,EACtB,OAAOQ,EAAKE,SAEhBF,EAAOA,EAAKtF,I,CAEhB,OAAO,I,EAGX4B,IAAG,SAAC4D,GACwB,oBAAbA,GAA4BT,EAASS,KAC5CA,EAAW,MAOf,IALA,IAAMN,EAAYD,EAAapD,MAG3B4D,EAAO,KACPH,EAAOJ,EAAUlE,IAAIqE,GACV,MAARC,GACCA,EAAKC,eAAiBT,EAET,OAATW,EACAA,EAAKzF,KAAOsF,EAAKtF,KACI,OAAdsF,EAAKtF,KACZkF,EAAUtD,IAAIyD,EAAWC,EAAKtF,MAE9BkF,EAAUQ,OAAOL,GAGrBI,EAAOH,EAGXA,EAAOA,EAAKtF,KAIhB,GAAiB,OAAbwF,EAAmB,CACnB,IAAMG,EAAU,CACZH,WACAD,aAAcT,EACdc,SAAS,EACTC,MAAM,EACN7F,KAAM,MAEG,OAATyF,EACAP,EAAUtD,IAAIyD,EAAWM,GAEzBF,EAAKzF,KAAO2F,C,GAIxBlD,cAAc,EACdH,YAAY,E,CAcZwD,CAA+BT,G,CAUvC,SAASU,EAAwBC,GAE7B,SAASC,IACLC,EAAYnG,KAAK8B,K,CAGrBoE,EAAkB7I,UAAYE,OAAOgB,OAAO4H,EAAY9I,UAAW,CAC/D8F,YAAa,CACThD,MAAO+F,EACPxD,cAAc,EACdU,UAAU,KAIlB,IAAK,IAAI9D,EAAI,EAAGA,EAAI2G,EAAW7F,SAAUd,EACrC8F,EAAqBc,EAAkB7I,UAAW4I,EAAW3G,IAGjE,OAAO4G,C,CAgBX,SAASC,IAEL,KAAIrE,gBAAgBqE,GAApB,CAIA,GAAyB,IAArBtD,UAAUzC,QAAgBhD,MAAMe,QAAQ0E,UAAU,IAClD,OAAOmD,EAAwBnD,UAAU,IAE7C,GAAIA,UAAUzC,OAAS,EAAG,CAEtB,IADA,IAAMgG,EAAQ,IAAIhJ,MAAMyF,UAAUzC,QACzBd,EAAI,EAAGA,EAAIuD,UAAUzC,SAAUd,EACpC8G,EAAM9G,GAAKuD,UAAUvD,GAEzB,OAAO0G,EAAwBI,E,CAEnC,MAAM,IAAI7F,UAAU,oC,CAbhBuE,EAAajD,IAAIC,KAAM,IAAIuE,I,CAkBnCF,EAAY9I,UAAY,CAQpBiJ,iBAAgB,SAAChB,EAAWG,EAAUc,GAClC,GAAgB,MAAZd,EAAJ,CAGA,GAAwB,oBAAbA,IAA4BT,EAASS,GAC5C,MAAM,IAAIlF,UAAU,iDAGxB,IAAM4E,EAAYD,EAAapD,MACzB0E,EAAexB,EAASuB,GAIxBf,GAHUgB,EACVnC,QAAQkC,EAAQE,SAChBpC,QAAQkC,IA/LN,EACD,EAgMDX,EAAU,CACZH,WACAD,eACAK,QAASW,GAAgBnC,QAAQkC,EAAQV,SACzCC,KAAMU,GAAgBnC,QAAQkC,EAAQT,MACtC7F,KAAM,MAINsF,EAAOJ,EAAUlE,IAAIqE,GACzB,QAAaoB,IAATnB,EAAJ,CAOA,IADA,IAAIG,EAAO,KACI,MAARH,GAAc,CACjB,GACIA,EAAKE,WAAaA,GAClBF,EAAKC,eAAiBA,EAGtB,OAEJE,EAAOH,EACPA,EAAOA,EAAKtF,I,CAIhByF,EAAKzF,KAAO2F,C,MAnBRT,EAAUtD,IAAIyD,EAAWM,E,GA6BjCe,oBAAmB,SAACrB,EAAWG,EAAUc,GACrC,GAAgB,MAAZd,EAYJ,IARA,IAAMN,EAAYD,EAAapD,MAIzB0D,GAHUR,EAASuB,GACnBlC,QAAQkC,EAAQE,SAChBpC,QAAQkC,IAjPN,EACD,EAmPHb,EAAO,KACPH,EAAOJ,EAAUlE,IAAIqE,GACV,MAARC,GAAc,CACjB,GACIA,EAAKE,WAAaA,GAClBF,EAAKC,eAAiBA,EAStB,YAPa,OAATE,EACAA,EAAKzF,KAAOsF,EAAKtF,KACI,OAAdsF,EAAKtF,KACZkF,EAAUtD,IAAIyD,EAAWC,EAAKtF,MAE9BkF,EAAUQ,OAAOL,IAKzBI,EAAOH,EACPA,EAAOA,EAAKtF,I,GASpB2G,cAAa,SAAC7F,GACV,GAAa,MAATA,GAAuC,kBAAfA,EAAM4C,KAC9B,MAAM,IAAIpD,UAAU,oCAIxB,IAAM4E,EAAYD,EAAapD,MACzBwD,EAAYvE,EAAM4C,KACpB4B,EAAOJ,EAAUlE,IAAIqE,GACzB,GAAY,MAARC,EACA,OAAO,EASX,IALA,IAAMsB,ED0Hd,SAA0BjF,EAAab,GAEnC,OAAO,IADS+B,EAAWvF,OAAOiG,eAAezC,IAC1C,CAAYa,EAAab,E,CC5HP+F,CAAUhF,KAAMf,GAIjC2E,EAAO,KACI,MAARH,GAAc,CAmBjB,GAjBIA,EAAKO,KACQ,OAATJ,EACAA,EAAKzF,KAAOsF,EAAKtF,KACI,OAAdsF,EAAKtF,KACZkF,EAAUtD,IAAIyD,EAAWC,EAAKtF,MAE9BkF,EAAUQ,OAAOL,GAGrBI,EAAOH,EAIX7B,EACImD,EACAtB,EAAKM,QAAUN,EAAKE,SAAW,MAEN,oBAAlBF,EAAKE,SACZ,IACIF,EAAKE,SAASzF,KAAK8B,KAAM+E,E,CAC3B,MAAOxG,GAEkB,qBAAZa,SACkB,oBAAlBA,QAAQQ,OAEfR,QAAQQ,MAAMrB,E,MAItBkF,EAAKC,eAAiBT,GACe,oBAA9BQ,EAAKE,SAASsB,aAErBxB,EAAKE,SAASsB,YAAYF,GAI9B,GAAIpD,EAAUoD,GACV,MAGJtB,EAAOA,EAAKtF,I,CAMhB,OAJAyD,EAAmBmD,EAAc,MD+FzC,SAA8B9F,EAAOgB,GACjCjB,EAAGC,GAAOgB,WAAaA,C,CC/FnBiF,CAAcH,EAAc,GDyGpC,SAAiC9F,EAAOiB,GACpClB,EAAGC,GAAOiB,cAAgBA,C,CCzGtBiF,CAAiBJ,EAAc,OAEvBA,EAAavC,gB,GAK7B/G,OAAO+E,eAAe6D,EAAY9I,UAAW,cAAe,CACxD8C,MAAOgG,EACPzD,cAAc,EACdU,UAAU,IAKQ,qBAAXwB,QACuB,qBAAvBA,OAAOuB,aAEd5I,OAAOsH,eAAesB,EAAY9I,UAAWuH,OAAOuB,YAAY9I,W,WC1XrD,SAAS6J,EAA2BC,EAAGC,GACpD,IAAIC,EAAuB,qBAAX5J,QAA0B0J,EAAE1J,OAAO+B,WAAa2H,EAAE,cAClE,IAAKE,EAAI,CACP,GAAIjK,MAAMe,QAAQgJ,KAAOE,EAAK,OAAA/G,EAAA,GAA2B6G,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAE/G,OAAqB,CAC/GiH,IAAIF,EAAIE,GACZ,IAAI/H,EAAI,EACJgI,EAAI,WAAc,EACtB,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIlI,GAAK6H,EAAE/G,OAAe,CACxBF,MAAM,GAED,CACLA,MAAM,EACNC,MAAOgH,EAAE7H,KAEb,EACAmI,EAAG,SAAW/H,GACZ,MAAMA,CACR,EACAgI,EAAGJ,EAEP,CACA,MAAM,IAAI/G,UAAU,wIACtB,CACA,IAEEF,EAFEsH,GAAmB,EACrBC,GAAS,EAEX,MAAO,CACLL,EAAG,WACDF,EAAKA,EAAGrH,KAAKmH,EACf,EACAK,EAAG,WACD,IAAIK,EAAOR,EAAGpH,OAEd,OADA0H,EAAmBE,EAAK3H,KACjB2H,CACT,EACAJ,EAAG,SAAWK,GACZF,GAAS,EACTvH,EAAMyH,CACR,EACAJ,EAAG,WACD,IACOC,GAAoC,MAAhBN,EAAW,QAAWA,EAAW,QAG5D,CAFE,QACA,GAAIO,EAAQ,MAAMvH,CACpB,CACF,EAEJ,CCnDA,SAAS0H,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ5F,EAAK6F,GACpE,IACE,IAAIC,EAAON,EAAIxF,GAAK6F,GAChBlI,EAAQmI,EAAKnI,KAInB,CAHE,MAAOuB,GAEP,YADAwG,EAAOxG,EAET,CACI4G,EAAKpI,KACP+H,EAAQ9H,GAERoI,QAAQN,QAAQ9H,GAAOqI,KAAKL,EAAOC,EAEvC,CACe,SAASK,EAAkBC,GACxC,OAAO,WACL,IAAI1L,EAAO8E,KACT6G,EAAO9F,UACT,OAAO,IAAI0F,SAAQ,SAAUN,EAASC,GACpC,IAAIF,EAAMU,EAAG9F,MAAM5F,EAAM2L,GACzB,SAASR,EAAMhI,GACb4H,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQjI,EAClE,CACA,SAASiI,EAAO/H,GACd0H,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAAS/H,EACnE,CACA8H,OAAMzB,EACR,GACF,CACF,CC7Be,SAASkC,EAAgBC,EAAUC,GAChD,KAAMD,aAAoBC,GACxB,MAAM,IAAIvI,UAAU,oCAExB,CCJe,SAASwI,EAAQC,GAG9B,OAAOD,EAAU,mBAAqBtL,QAAU,iBAAmBA,OAAO+B,SAAW,SAAUwJ,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAO,mBAAqBvL,QAAUuL,EAAI7F,cAAgB1F,QAAUuL,IAAQvL,OAAOJ,UAAY,gBAAkB2L,CAC1H,EAAGD,EAAQC,EACb,CCNe,SAASC,EAAeZ,GACrC,IAAI7F,ECFS,SAAsB0G,EAAOC,GAC1C,GAAuB,WAAnBJ,EAAQG,IAAiC,OAAVA,EAAgB,OAAOA,EAC1D,IAAIE,EAAOF,EAAMzL,OAAO4L,aACxB,QAAa3C,IAAT0C,EAAoB,CACtB,IAAIE,EAAMF,EAAKpJ,KAAKkJ,EAAOC,GAAQ,WACnC,GAAqB,WAAjBJ,EAAQO,GAAmB,OAAOA,EACtC,MAAM,IAAI/I,UAAU,+CACtB,CACA,OAAiB,WAAT4I,EAAoBI,OAASC,QAAQN,EAC/C,CDPY,CAAYb,EAAK,UAC3B,MAAwB,WAAjBU,EAAQvG,GAAoBA,EAAM+G,OAAO/G,EAClD,CEJA,SAASiH,EAAkB7F,EAAQ8F,GACjC,IAAK,IAAIpK,EAAI,EAAGA,EAAIoK,EAAMtJ,OAAQd,IAAK,CACrC,IAAIqK,EAAaD,EAAMpK,GACvBqK,EAAWpH,WAAaoH,EAAWpH,aAAc,EACjDoH,EAAWjH,cAAe,EACtB,UAAWiH,IAAYA,EAAWvG,UAAW,GACjD7F,OAAO+E,eAAesB,EAAQ,EAAc+F,EAAWnH,KAAMmH,EAC/D,CACF,CACe,SAASC,EAAad,EAAae,EAAYC,GAM5D,OALID,GAAYJ,EAAkBX,EAAYzL,UAAWwM,GACrDC,GAAaL,EAAkBX,EAAagB,GAChDvM,OAAO+E,eAAewG,EAAa,YAAa,CAC9C1F,UAAU,IAEL0F,CACT,CChBe,SAASiB,IAEtBA,EAAsB,WACpB,OAAOtJ,CACT,EACA,IAAIA,EAAU,CAAC,EACbuJ,EAAKzM,OAAOF,UACZ4M,EAASD,EAAGnM,eACZyE,EAAiB/E,OAAO+E,gBAAkB,SAAU0G,EAAKxG,EAAK0H,GAC5DlB,EAAIxG,GAAO0H,EAAK/J,KAClB,EACAgK,EAAU,mBAAqB1M,OAASA,OAAS,CAAC,EAClD2M,EAAiBD,EAAQ3K,UAAY,aACrC6K,EAAsBF,EAAQG,eAAiB,kBAC/CC,EAAoBJ,EAAQK,aAAe,gBAC7C,SAASC,EAAOzB,EAAKxG,EAAKrC,GACxB,OAAO5C,OAAO+E,eAAe0G,EAAKxG,EAAK,CACrCrC,MAAOA,EACPoC,YAAY,EACZG,cAAc,EACdU,UAAU,IACR4F,EAAIxG,EACV,CACA,IACEiI,EAAO,CAAC,EAAG,GAKb,CAJE,MAAOpK,GACPoK,EAAS,SAAgBzB,EAAKxG,EAAKrC,GACjC,OAAO6I,EAAIxG,GAAOrC,CACpB,CACF,CACA,SAASuK,EAAKC,EAASC,EAAS5N,EAAM6N,GACpC,IAAIC,EAAiBF,GAAWA,EAAQvN,qBAAqB0N,EAAYH,EAAUG,EACjFC,EAAYzN,OAAOgB,OAAOuM,EAAezN,WACzC4N,EAAU,IAAIC,EAAQL,GAAe,IACvC,OAAOvI,EAAe0I,EAAW,UAAW,CAC1C7K,MAAOgL,EAAiBR,EAAS3N,EAAMiO,KACrCD,CACN,CACA,SAASI,EAAS1C,EAAIM,EAAKX,GACzB,IACE,MAAO,CACL1E,KAAM,SACN0E,IAAKK,EAAG1I,KAAKgJ,EAAKX,GAOtB,CALE,MAAOhI,GACP,MAAO,CACLsD,KAAM,QACN0E,IAAKhI,EAET,CACF,CACAI,EAAQiK,KAAOA,EACf,IAAIW,EAAmB,CAAC,EACxB,SAASN,IAAa,CACtB,SAASO,IAAqB,CAC9B,SAASC,IAA8B,CACvC,IAAIC,EAAoB,CAAC,EACzBf,EAAOe,EAAmBpB,GAAgB,WACxC,OAAOtI,IACT,IACA,IAAI2J,EAAWlO,OAAOiG,eACpBkI,EAA0BD,GAAYA,EAASA,EAASE,EAAO,MACjED,GAA2BA,IAA4B1B,GAAMC,EAAOjK,KAAK0L,EAAyBtB,KAAoBoB,EAAoBE,GAC1I,IAAIE,EAAKL,EAA2BlO,UAAY0N,EAAU1N,UAAYE,OAAOgB,OAAOiN,GACpF,SAASK,EAAsBxO,GAC7B,CAAC,OAAQ,QAAS,UAAUyO,SAAQ,SAAUC,GAC5CtB,EAAOpN,EAAW0O,GAAQ,SAAU1D,GAClC,OAAOvG,KAAKkK,QAAQD,EAAQ1D,EAC9B,GACF,GACF,CACA,SAAS4D,EAAcjB,EAAWkB,GAChC,SAASC,EAAOJ,EAAQ1D,EAAKJ,EAASC,GACpC,IAAIkE,EAAShB,EAASJ,EAAUe,GAASf,EAAW3C,GACpD,GAAI,UAAY+D,EAAOzI,KAAM,CAC3B,IAAI0I,EAASD,EAAO/D,IAClBlI,EAAQkM,EAAOlM,MACjB,OAAOA,GAAS,UAAY4I,EAAQ5I,IAAU8J,EAAOjK,KAAKG,EAAO,WAAa+L,EAAYjE,QAAQ9H,EAAMmM,SAAS9D,MAAK,SAAUrI,GAC9HgM,EAAO,OAAQhM,EAAO8H,EAASC,EACjC,IAAG,SAAU7H,GACX8L,EAAO,QAAS9L,EAAK4H,EAASC,EAChC,IAAKgE,EAAYjE,QAAQ9H,GAAOqI,MAAK,SAAU+D,GAC7CF,EAAOlM,MAAQoM,EAAWtE,EAAQoE,EACpC,IAAG,SAAU3K,GACX,OAAOyK,EAAO,QAASzK,EAAOuG,EAASC,EACzC,GACF,CACAA,EAAOkE,EAAO/D,IAChB,CACA,IAAImE,EACJlK,EAAeR,KAAM,UAAW,CAC9B3B,MAAO,SAAe4L,EAAQ1D,GAC5B,SAASoE,IACP,OAAO,IAAIP,GAAY,SAAUjE,EAASC,GACxCiE,EAAOJ,EAAQ1D,EAAKJ,EAASC,EAC/B,GACF,CACA,OAAOsE,EAAkBA,EAAkBA,EAAgBhE,KAAKiE,EAA4BA,GAA8BA,GAC5H,GAEJ,CACA,SAAStB,EAAiBR,EAAS3N,EAAMiO,GACvC,IAAIyB,EAAQ,iBACZ,OAAO,SAAUX,EAAQ1D,GACvB,GAAI,cAAgBqE,EAAO,MAAM,IAAIC,MAAM,gCAC3C,GAAI,cAAgBD,EAAO,CACzB,GAAI,UAAYX,EAAQ,MAAM1D,EAC9B,OAAOuE,GACT,CACA,IAAK3B,EAAQc,OAASA,EAAQd,EAAQ5C,IAAMA,IAAO,CACjD,IAAIwE,EAAW5B,EAAQ4B,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAU5B,GACnD,GAAI6B,EAAgB,CAClB,GAAIA,IAAmBzB,EAAkB,SACzC,OAAOyB,CACT,CACF,CACA,GAAI,SAAW7B,EAAQc,OAAQd,EAAQ+B,KAAO/B,EAAQgC,MAAQhC,EAAQ5C,SAAS,GAAI,UAAY4C,EAAQc,OAAQ,CAC7G,GAAI,mBAAqBW,EAAO,MAAMA,EAAQ,YAAazB,EAAQ5C,IACnE4C,EAAQiC,kBAAkBjC,EAAQ5C,IACpC,KAAO,WAAa4C,EAAQc,QAAUd,EAAQkC,OAAO,SAAUlC,EAAQ5C,KACvEqE,EAAQ,YACR,IAAIN,EAAShB,EAAST,EAAS3N,EAAMiO,GACrC,GAAI,WAAamB,EAAOzI,KAAM,CAC5B,GAAI+I,EAAQzB,EAAQ/K,KAAO,YAAc,iBAAkBkM,EAAO/D,MAAQgD,EAAkB,SAC5F,MAAO,CACLlL,MAAOiM,EAAO/D,IACdnI,KAAM+K,EAAQ/K,KAElB,CACA,UAAYkM,EAAOzI,OAAS+I,EAAQ,YAAazB,EAAQc,OAAS,QAASd,EAAQ5C,IAAM+D,EAAO/D,IAClG,CACF,CACF,CACA,SAAS0E,EAAoBF,EAAU5B,GACrC,IAAImC,EAAanC,EAAQc,OACvBA,EAASc,EAASrN,SAAS4N,GAC7B,QAAI1G,IAAcqF,EAAQ,OAAOd,EAAQ4B,SAAW,KAAM,UAAYO,GAAcP,EAASrN,SAAiB,SAAMyL,EAAQc,OAAS,SAAUd,EAAQ5C,SAAM3B,EAAWqG,EAAoBF,EAAU5B,GAAU,UAAYA,EAAQc,SAAW,WAAaqB,IAAenC,EAAQc,OAAS,QAASd,EAAQ5C,IAAM,IAAI9H,UAAU,oCAAsC6M,EAAa,aAAc/B,EAClY,IAAIe,EAAShB,EAASW,EAAQc,EAASrN,SAAUyL,EAAQ5C,KACzD,GAAI,UAAY+D,EAAOzI,KAAM,OAAOsH,EAAQc,OAAS,QAASd,EAAQ5C,IAAM+D,EAAO/D,IAAK4C,EAAQ4B,SAAW,KAAMxB,EACjH,IAAI/C,EAAO8D,EAAO/D,IAClB,OAAOC,EAAOA,EAAKpI,MAAQ+K,EAAQ4B,EAASQ,YAAc/E,EAAKnI,MAAO8K,EAAQhL,KAAO4M,EAASS,QAAS,WAAarC,EAAQc,SAAWd,EAAQc,OAAS,OAAQd,EAAQ5C,SAAM3B,GAAYuE,EAAQ4B,SAAW,KAAMxB,GAAoB/C,GAAQ2C,EAAQc,OAAS,QAASd,EAAQ5C,IAAM,IAAI9H,UAAU,oCAAqC0K,EAAQ4B,SAAW,KAAMxB,EACrW,CACA,SAASkC,EAAaC,GACpB,IAAIC,EAAQ,CACVC,OAAQF,EAAK,IAEf,KAAKA,IAASC,EAAME,SAAWH,EAAK,IAAK,KAAKA,IAASC,EAAMG,WAAaJ,EAAK,GAAIC,EAAMI,SAAWL,EAAK,IAAK1L,KAAKgM,WAAWpQ,KAAK+P,EACrI,CACA,SAASM,EAAcN,GACrB,IAAIrB,EAASqB,EAAMO,YAAc,CAAC,EAClC5B,EAAOzI,KAAO,gBAAiByI,EAAO/D,IAAKoF,EAAMO,WAAa5B,CAChE,CACA,SAASlB,EAAQL,GACf/I,KAAKgM,WAAa,CAAC,CACjBJ,OAAQ,SACN7C,EAAYiB,QAAQyB,EAAczL,MAAOA,KAAKmM,OAAM,EAC1D,CACA,SAAStC,EAAOuC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAS9D,GAC9B,GAAI+D,EAAgB,OAAOA,EAAenO,KAAKkO,GAC/C,GAAI,mBAAqBA,EAASjO,KAAM,OAAOiO,EAC/C,IAAKvP,MAAMuP,EAAS9N,QAAS,CAC3B,IAAId,GAAK,EACPW,EAAO,SAASA,IACd,OAASX,EAAI4O,EAAS9N,QAAS,GAAI6J,EAAOjK,KAAKkO,EAAU5O,GAAI,OAAOW,EAAKE,MAAQ+N,EAAS5O,GAAIW,EAAKC,MAAO,EAAID,EAC9G,OAAOA,EAAKE,WAAQuG,EAAWzG,EAAKC,MAAO,EAAID,CACjD,EACF,OAAOA,EAAKA,KAAOA,CACrB,CACF,CACA,MAAO,CACLA,KAAM2M,EAEV,CACA,SAASA,IACP,MAAO,CACLzM,WAAOuG,EACPxG,MAAM,EAEV,CACA,OAAOoL,EAAkBjO,UAAYkO,EAA4BjJ,EAAesJ,EAAI,cAAe,CACjGzL,MAAOoL,EACP7I,cAAc,IACZJ,EAAeiJ,EAA4B,cAAe,CAC5DpL,MAAOmL,EACP5I,cAAc,IACZ4I,EAAkB8C,YAAc3D,EAAOc,EAA4BhB,EAAmB,qBAAsB9J,EAAQ4N,oBAAsB,SAAUC,GACtJ,IAAIC,EAAO,mBAAqBD,GAAUA,EAAOnL,YACjD,QAASoL,IAASA,IAASjD,GAAqB,uBAAyBiD,EAAKH,aAAeG,EAAKC,MACpG,EAAG/N,EAAQgO,KAAO,SAAUH,GAC1B,OAAO/Q,OAAOsH,eAAiBtH,OAAOsH,eAAeyJ,EAAQ/C,IAA+B+C,EAAOI,UAAYnD,EAA4Bd,EAAO6D,EAAQ/D,EAAmB,sBAAuB+D,EAAOjR,UAAYE,OAAOgB,OAAOqN,GAAK0C,CAC5O,EAAG7N,EAAQkO,MAAQ,SAAUtG,GAC3B,MAAO,CACLiE,QAASjE,EAEb,EAAGwD,EAAsBI,EAAc5O,WAAYoN,EAAOwB,EAAc5O,UAAWgN,GAAqB,WACtG,OAAOvI,IACT,IAAIrB,EAAQwL,cAAgBA,EAAexL,EAAQmO,MAAQ,SAAUjE,EAASC,EAAS5N,EAAM6N,EAAaqB,QACxG,IAAWA,IAAgBA,EAAc3D,SACzC,IAAIsG,EAAO,IAAI5C,EAAcvB,EAAKC,EAASC,EAAS5N,EAAM6N,GAAcqB,GACxE,OAAOzL,EAAQ4N,oBAAoBzD,GAAWiE,EAAOA,EAAK5O,OAAOuI,MAAK,SAAU6D,GAC9E,OAAOA,EAAOnM,KAAOmM,EAAOlM,MAAQ0O,EAAK5O,MAC3C,GACF,EAAG4L,EAAsBD,GAAKnB,EAAOmB,EAAIrB,EAAmB,aAAcE,EAAOmB,EAAIxB,GAAgB,WACnG,OAAOtI,IACT,IAAI2I,EAAOmB,EAAI,YAAY,WACzB,MAAO,oBACT,IAAInL,EAAQpC,KAAO,SAAUyQ,GAC3B,IAAIC,EAASxR,OAAOuR,GAClBzQ,EAAO,GACT,IAAK,IAAImE,KAAOuM,EAAQ1Q,EAAKX,KAAK8E,GAClC,OAAOnE,EAAK2Q,UAAW,SAAS/O,IAC9B,KAAO5B,EAAK+B,QAAS,CACnB,IAAIoC,EAAMnE,EAAK4Q,MACf,GAAIzM,KAAOuM,EAAQ,OAAO9O,EAAKE,MAAQqC,EAAKvC,EAAKC,MAAO,EAAID,CAC9D,CACA,OAAOA,EAAKC,MAAO,EAAID,CACzB,CACF,EAAGQ,EAAQkL,OAASA,EAAQT,EAAQ7N,UAAY,CAC9C8F,YAAa+H,EACb+C,MAAO,SAAeiB,GACpB,GAAIpN,KAAK4D,KAAO,EAAG5D,KAAK7B,KAAO,EAAG6B,KAAKkL,KAAOlL,KAAKmL,WAAQvG,EAAW5E,KAAK5B,MAAO,EAAI4B,KAAK+K,SAAW,KAAM/K,KAAKiK,OAAS,OAAQjK,KAAKuG,SAAM3B,EAAW5E,KAAKgM,WAAWhC,QAAQiC,IAAiBmB,EAAe,IAAK,IAAIV,KAAQ1M,KAAM,MAAQ0M,EAAKW,OAAO,IAAMlF,EAAOjK,KAAK8B,KAAM0M,KAAU7P,OAAO6P,EAAK7Q,MAAM,MAAQmE,KAAK0M,QAAQ9H,EACtU,EACA0I,KAAM,WACJtN,KAAK5B,MAAO,EACZ,IAAImP,EAAavN,KAAKgM,WAAW,GAAGE,WACpC,GAAI,UAAYqB,EAAW1L,KAAM,MAAM0L,EAAWhH,IAClD,OAAOvG,KAAKwN,IACd,EACApC,kBAAmB,SAA2BqC,GAC5C,GAAIzN,KAAK5B,KAAM,MAAMqP,EACrB,IAAItE,EAAUnJ,KACd,SAAS0N,EAAOC,EAAKC,GACnB,OAAOtD,EAAOzI,KAAO,QAASyI,EAAO/D,IAAMkH,EAAWtE,EAAQhL,KAAOwP,EAAKC,IAAWzE,EAAQc,OAAS,OAAQd,EAAQ5C,SAAM3B,KAAcgJ,CAC5I,CACA,IAAK,IAAIpQ,EAAIwC,KAAKgM,WAAW1N,OAAS,EAAGd,GAAK,IAAKA,EAAG,CACpD,IAAImO,EAAQ3L,KAAKgM,WAAWxO,GAC1B8M,EAASqB,EAAMO,WACjB,GAAI,SAAWP,EAAMC,OAAQ,OAAO8B,EAAO,OAC3C,GAAI/B,EAAMC,QAAU5L,KAAK4D,KAAM,CAC7B,IAAIiK,EAAW1F,EAAOjK,KAAKyN,EAAO,YAChCmC,EAAa3F,EAAOjK,KAAKyN,EAAO,cAClC,GAAIkC,GAAYC,EAAY,CAC1B,GAAI9N,KAAK4D,KAAO+H,EAAME,SAAU,OAAO6B,EAAO/B,EAAME,UAAU,GAC9D,GAAI7L,KAAK4D,KAAO+H,EAAMG,WAAY,OAAO4B,EAAO/B,EAAMG,WACxD,MAAO,GAAI+B,GACT,GAAI7N,KAAK4D,KAAO+H,EAAME,SAAU,OAAO6B,EAAO/B,EAAME,UAAU,OACzD,CACL,IAAKiC,EAAY,MAAM,IAAIjD,MAAM,0CACjC,GAAI7K,KAAK4D,KAAO+H,EAAMG,WAAY,OAAO4B,EAAO/B,EAAMG,WACxD,CACF,CACF,CACF,EACAT,OAAQ,SAAgBxJ,EAAM0E,GAC5B,IAAK,IAAI/I,EAAIwC,KAAKgM,WAAW1N,OAAS,EAAGd,GAAK,IAAKA,EAAG,CACpD,IAAImO,EAAQ3L,KAAKgM,WAAWxO,GAC5B,GAAImO,EAAMC,QAAU5L,KAAK4D,MAAQuE,EAAOjK,KAAKyN,EAAO,eAAiB3L,KAAK4D,KAAO+H,EAAMG,WAAY,CACjG,IAAIiC,EAAepC,EACnB,KACF,CACF,CACAoC,IAAiB,UAAYlM,GAAQ,aAAeA,IAASkM,EAAanC,QAAUrF,GAAOA,GAAOwH,EAAajC,aAAeiC,EAAe,MAC7I,IAAIzD,EAASyD,EAAeA,EAAa7B,WAAa,CAAC,EACvD,OAAO5B,EAAOzI,KAAOA,EAAMyI,EAAO/D,IAAMA,EAAKwH,GAAgB/N,KAAKiK,OAAS,OAAQjK,KAAK7B,KAAO4P,EAAajC,WAAYvC,GAAoBvJ,KAAKgO,SAAS1D,EAC5J,EACA0D,SAAU,SAAkB1D,EAAQyB,GAClC,GAAI,UAAYzB,EAAOzI,KAAM,MAAMyI,EAAO/D,IAC1C,MAAO,UAAY+D,EAAOzI,MAAQ,aAAeyI,EAAOzI,KAAO7B,KAAK7B,KAAOmM,EAAO/D,IAAM,WAAa+D,EAAOzI,MAAQ7B,KAAKwN,KAAOxN,KAAKuG,IAAM+D,EAAO/D,IAAKvG,KAAKiK,OAAS,SAAUjK,KAAK7B,KAAO,OAAS,WAAamM,EAAOzI,MAAQkK,IAAa/L,KAAK7B,KAAO4N,GAAWxC,CACtQ,EACA0E,OAAQ,SAAgBnC,GACtB,IAAK,IAAItO,EAAIwC,KAAKgM,WAAW1N,OAAS,EAAGd,GAAK,IAAKA,EAAG,CACpD,IAAImO,EAAQ3L,KAAKgM,WAAWxO,GAC5B,GAAImO,EAAMG,aAAeA,EAAY,OAAO9L,KAAKgO,SAASrC,EAAMO,WAAYP,EAAMI,UAAWE,EAAcN,GAAQpC,CACrH,CACF,EACA,MAAS,SAAgBqC,GACvB,IAAK,IAAIpO,EAAIwC,KAAKgM,WAAW1N,OAAS,EAAGd,GAAK,IAAKA,EAAG,CACpD,IAAImO,EAAQ3L,KAAKgM,WAAWxO,GAC5B,GAAImO,EAAMC,SAAWA,EAAQ,CAC3B,IAAItB,EAASqB,EAAMO,WACnB,GAAI,UAAY5B,EAAOzI,KAAM,CAC3B,IAAIqM,EAAS5D,EAAO/D,IACpB0F,EAAcN,EAChB,CACA,OAAOuC,CACT,CACF,CACA,MAAM,IAAIrD,MAAM,wBAClB,EACAsD,cAAe,SAAuB/B,EAAUb,EAAYC,GAC1D,OAAOxL,KAAK+K,SAAW,CACrBrN,SAAUmM,EAAOuC,GACjBb,WAAYA,EACZC,QAASA,GACR,SAAWxL,KAAKiK,SAAWjK,KAAKuG,SAAM3B,GAAY2E,CACvD,GACC5K,CACL,C,WC9Se,SAASyP,EAAe/P,EAAOgQ,GAC5CrO,KAAKsO,EAAIjQ,EAAO2B,KAAKuO,EAAIF,CAC3B,CCDe,SAASG,EAAqBnQ,GAC3C,OAAO,IAAI,EAAcA,EAAO,EAClC,CCFe,SAASoQ,EAAevI,GACrC,IAAIwI,EAAOC,EACX,SAASC,EAAOlO,EAAK6F,GACnB,IACE,IAAIgE,EAASrE,EAAIxF,GAAK6F,GACpBlI,EAAQkM,EAAOlM,MACfwQ,EAAaxQ,aAAiB,EAChCoI,QAAQN,QAAQ0I,EAAaxQ,EAAMiQ,EAAIjQ,GAAOqI,MAAK,SAAUH,GAC3D,GAAIsI,EAAY,CACd,IAAIC,EAAU,WAAapO,EAAM,SAAW,OAC5C,IAAKrC,EAAMkQ,GAAKhI,EAAInI,KAAM,OAAOwQ,EAAOE,EAASvI,GACjDA,EAAML,EAAI4I,GAASvI,GAAKlI,KAC1B,CACA0Q,EAAOxE,EAAOnM,KAAO,SAAW,SAAUmI,EAC5C,IAAG,SAAUhI,GACXqQ,EAAO,QAASrQ,EAClB,GAGF,CAFE,MAAOA,GACPwQ,EAAO,QAASxQ,EAClB,CACF,CACA,SAASwQ,EAAOlN,EAAMxD,GACpB,OAAQwD,GACN,IAAK,SACH6M,EAAMvI,QAAQ,CACZ9H,MAAOA,EACPD,MAAM,IAER,MACF,IAAK,QACHsQ,EAAMtI,OAAO/H,GACb,MACF,QACEqQ,EAAMvI,QAAQ,CACZ9H,MAAOA,EACPD,MAAM,KAGXsQ,EAAQA,EAAMvQ,MAAQyQ,EAAOF,EAAMhO,IAAKgO,EAAMnI,KAAOoI,EAAO,IAC/D,CACA3O,KAAKkK,QAAU,SAAUxJ,EAAK6F,GAC5B,OAAO,IAAIE,SAAQ,SAAUN,EAASC,GACpC,IAAI4I,EAAU,CACZtO,IAAKA,EACL6F,IAAKA,EACLJ,QAASA,EACTC,OAAQA,EACRjI,KAAM,MAERwQ,EAAOA,EAAOA,EAAKxQ,KAAO6Q,GAAWN,EAAQC,EAAOK,EAASJ,EAAOlO,EAAK6F,GAC3E,GACF,EAAG,mBAAqBL,EAAY,SAAMlG,KAAa,YAAI,EAC7D,CCpDe,SAASiP,EAAoBrI,GAC1C,OAAO,WACL,OAAO,IAAI6H,EAAe7H,EAAG9F,MAAMd,KAAMe,WAC3C,CACF,CCJe,SAASmO,EAAwBC,GAC9C,IAAIpC,EAAO,CAAC,EACVqC,GAAU,EACZ,SAASC,EAAK3O,EAAKrC,GACjB,OAAO+Q,GAAU,EAEb,CACFhR,MAAM,EACNC,MAAO,IAAI,EAJQA,EAAQ,IAAIoI,SAAQ,SAAUN,GACjDA,EAAQgJ,EAAMzO,GAAKrC,GACrB,IAEkC,GAEpC,CACA,OAAO0O,EAAK,oBAAsBpR,QAAUA,OAAO+B,UAAY,cAAgB,WAC7E,OAAOsC,IACT,EAAG+M,EAAK5O,KAAO,SAAUE,GACvB,OAAO+Q,GAAWA,GAAU,EAAI/Q,GAASgR,EAAK,OAAQhR,EACxD,EAAG,mBAAqB8Q,EAAa,QAAMpC,EAAY,MAAI,SAAU1O,GACnE,GAAI+Q,EAAS,MAAMA,GAAU,EAAI/Q,EACjC,OAAOgR,EAAK,QAAShR,EACvB,GAAI,mBAAqB8Q,EAAc,SAAMpC,EAAa,OAAI,SAAU1O,GACtE,OAAO+Q,GAAWA,GAAU,EAAI/Q,GAASgR,EAAK,SAAUhR,EAC1D,GAAI0O,CACN,CCtBe,SAASuC,EAAelD,GACrC,IAAInC,EACF6C,EACAyC,EACAC,EAAQ,EACV,IAAK,oBAAsB7T,SAAWmR,EAAQnR,OAAO6M,cAAe+G,EAAO5T,OAAO+B,UAAW8R,KAAU,CACrG,GAAI1C,GAAS,OAAS7C,EAASmC,EAASU,IAAS,OAAO7C,EAAO/L,KAAKkO,GACpE,GAAImD,GAAQ,OAAStF,EAASmC,EAASmD,IAAQ,OAAO,IAAIE,EAAsBxF,EAAO/L,KAAKkO,IAC5FU,EAAQ,kBAAmByC,EAAO,YACpC,CACA,MAAM,IAAI9Q,UAAU,+BACtB,CACA,SAASgR,EAAsBhK,GAC7B,SAASiK,EAAkCC,GACzC,GAAIlU,OAAOkU,KAAOA,EAAG,OAAOlJ,QAAQL,OAAO,IAAI3H,UAAUkR,EAAI,uBAC7D,IAAIvR,EAAOuR,EAAEvR,KACb,OAAOqI,QAAQN,QAAQwJ,EAAEtR,OAAOqI,MAAK,SAAUrI,GAC7C,MAAO,CACLA,MAAOA,EACPD,KAAMA,EAEV,GACF,CACA,OAAOqR,EAAwB,SAA+BhK,GAC5DzF,KAAKyF,EAAIA,EAAGzF,KAAK0F,EAAID,EAAEtH,IACzB,EAAGsR,EAAsBlU,UAAY,CACnCkK,EAAG,KACHC,EAAG,KACHvH,KAAM,WACJ,OAAOuR,EAAkC1P,KAAK0F,EAAE5E,MAAMd,KAAKyF,EAAG1E,WAChE,EACA,OAAU,SAAiB1C,GACzB,IAAIuR,EAAM5P,KAAKyF,EAAU,OACzB,YAAO,IAAWmK,EAAMnJ,QAAQN,QAAQ,CACtC9H,MAAOA,EACPD,MAAM,IACHsR,EAAkCE,EAAI9O,MAAMd,KAAKyF,EAAG1E,WAC3D,EACA,MAAS,SAAgB1C,GACvB,IAAIwR,EAAM7P,KAAKyF,EAAU,OACzB,YAAO,IAAWoK,EAAMpJ,QAAQL,OAAO/H,GAASqR,EAAkCG,EAAI/O,MAAMd,KAAKyF,EAAG1E,WACtG,GACC,IAAI0O,EAAsBhK,EAC/B,CHWAgJ,EAAelT,UAAU,mBAAqBI,QAAUA,OAAO6M,eAAiB,mBAAqB,WACnG,OAAOxI,IACT,EAAGyO,EAAelT,UAAU4C,KAAO,SAAUoI,GAC3C,OAAOvG,KAAKkK,QAAQ,OAAQ3D,EAC9B,EAAGkI,EAAelT,UAAiB,MAAI,SAAUgL,GAC/C,OAAOvG,KAAKkK,QAAQ,QAAS3D,EAC/B,EAAGkI,EAAelT,UAAkB,OAAI,SAAUgL,GAChD,OAAOvG,KAAKkK,QAAQ,SAAU3D,EAChC,EI7CA,IAAIuJ,EAAc,CAAC,ECFnB,SAASC,EAAQC,EAAGC,EAAKC,GACvB,OAAOD,GAAOD,GAAKA,GAAKE,CAC1B,CAMA,SAASC,EAAa9K,GACpB,QAAUT,IAANS,EAAiB,MAAO,CAAC,EAC7B,GAAIA,IAAM5J,OAAO4J,GAAI,OAAOA,EAC5B,MAAM5G,UAAU,2CAClB,CDLAqR,EAAYM,OAQZN,EAAYO,MAMZP,EAAYQ,aAAe,EAM3BR,EAAYS,WAAa,EAMzBT,EAAYU,uBAAyB,EAKrCV,EAAYW,SAAW,CACrBC,WAAY,EACZC,aAAc,GAOhBb,EAAYc,MAAQ,IAAIC,WAAW,GAMnCf,EAAYgB,QAAU,IAAIC,aAAajB,EAAYc,MAAMI,QAMzDlB,EAAYmB,QAAU,IAAIC,aAAapB,EAAYc,MAAMI,QAMzDlB,EAAYqB,eAAuE,IAAtD,IAAIC,YAAY,IAAIC,WAAW,CAAC,EAAG,IAAIL,QAAQ,GAS5ElB,EAAYwB,KAAO,SAASC,EAAKC,GAK/BxR,KAAKuR,IAAY,EAANA,EAMXvR,KAAKwR,KAAc,EAAPA,CACd,EAOA1B,EAAYwB,KAAK7U,OAAS,SAAS8U,EAAKC,GAEtC,OAAc,GAAPD,GAAoB,GAARC,EAAY1B,EAAYwB,KAAKG,KAAO,IAAI3B,EAAYwB,KAAKC,EAAKC,EACnF,EAKA1B,EAAYwB,KAAK/V,UAAUmW,UAAY,WACrC,OAAQ1R,KAAKuR,MAAQ,GAAiB,WAAZvR,KAAKwR,IACjC,EAMA1B,EAAYwB,KAAK/V,UAAUoW,OAAS,SAASC,GAC3C,OAAO5R,KAAKuR,KAAOK,EAAML,KAAOvR,KAAKwR,MAAQI,EAAMJ,IACrD,EAMA1B,EAAYwB,KAAKG,KAAO,IAAI3B,EAAYwB,KAAK,EAAG,GAUhDxB,EAAY+B,QAAU,SAASC,GAC7B,GAAKA,EAGCC,EAAeD,OAFnB,IAAIC,EAAe,KASrB/R,KAAKgS,GAAKlC,EAAYmC,WAAWC,SAASH,GAQ1C/R,KAAKmS,MAAQJ,EAQb/R,KAAKoS,SAAW,EAQhBpS,KAAKqS,OAAS,KAQdrS,KAAKsS,cAAgB,EAQrBtS,KAAKuS,UAAW,EAQhBvS,KAAKwS,aAAe,EAQpBxS,KAAKyS,QAAU,GAQfzS,KAAK0S,iBAAmB,EAQxB1S,KAAK2S,gBAAiB,CACxB,EAEA7C,EAAY+B,QAAQtW,UAAUqX,MAAQ,WACpC5S,KAAKgS,GAAGY,QACR5S,KAAKmS,MAAQnS,KAAKgS,GAAGa,WACrB7S,KAAKoS,SAAW,EAChBpS,KAAKqS,OAAS,KACdrS,KAAKsS,cAAgB,EACrBtS,KAAKuS,UAAW,EAChBvS,KAAKwS,aAAe,EACpBxS,KAAKyS,QAAU,GACfzS,KAAK0S,iBAAmB,EACxB1S,KAAK2S,gBAAiB,CACxB,EASA7C,EAAY+B,QAAQtW,UAAUuX,cAAgB,SAASA,GACrD9S,KAAK2S,eAAiBG,CACxB,EASAhD,EAAY+B,QAAQtW,UAAUwX,WAAa,WACzC,OAAO/S,KAAKgS,EACd,EAQAlC,EAAY+B,QAAQtW,UAAUyX,aAAe,WAC3C,OAAOhT,KAAKgS,GAAGiB,QAAQC,SAASlT,KAAKgS,GAAGmB,WAAYnT,KAAKgS,GAAGmB,WAAanT,KAAKoT,SAChF,EAYAtD,EAAY+B,QAAQtW,UAAU8X,KAAO,SAASC,EAAMC,GAE9CD,EAAOtT,KAAKoS,WACdpS,KAAKoS,SAAWkB,GAQlB,IAHA,IAAIE,EAAwE,IAAvDxT,KAAKgS,GAAGa,WAAa7S,KAAKmS,MAAQoB,GAA2BD,EAAO,EAGlFtT,KAAKmS,MAAQqB,EAAaF,EAAOC,GAAkB,CACxD,IAAIE,EAAezT,KAAKgS,GAAGa,WAC3B7S,KAAKgS,GAAKlC,EAAY+B,QAAQ6B,eAAe1T,KAAKgS,IAClDhS,KAAKmS,OAASnS,KAAKgS,GAAGa,WAAaY,CACrC,CAEAzT,KAAK2T,IAAIH,EACX,EAKA1D,EAAY+B,QAAQtW,UAAUoY,IAAM,SAASC,GAC3C,IAAK,IAAIpW,EAAI,EAAGA,EAAIoW,EAAWpW,IAC7BwC,KAAKgS,GAAG6B,YAAY7T,KAAKmS,MAAO,EAEpC,EAKArC,EAAY+B,QAAQtW,UAAUsY,UAAY,SAASxV,GACjD2B,KAAKgS,GAAG6B,UAAU7T,KAAKmS,OAAS,EAAG9T,EACrC,EAKAyR,EAAY+B,QAAQtW,UAAUuY,WAAa,SAASzV,GAClD2B,KAAKgS,GAAG8B,WAAW9T,KAAKmS,OAAS,EAAG9T,EACtC,EAKAyR,EAAY+B,QAAQtW,UAAUwY,WAAa,SAAS1V,GAClD2B,KAAKgS,GAAG+B,WAAW/T,KAAKmS,OAAS,EAAG9T,EACtC,EAKAyR,EAAY+B,QAAQtW,UAAUyY,WAAa,SAAS3V,GAClD2B,KAAKgS,GAAGgC,WAAWhU,KAAKmS,OAAS,EAAG9T,EACtC,EAKAyR,EAAY+B,QAAQtW,UAAU0Y,aAAe,SAAS5V,GACpD2B,KAAKgS,GAAGiC,aAAajU,KAAKmS,OAAS,EAAG9T,EACxC,EAKAyR,EAAY+B,QAAQtW,UAAU2Y,aAAe,SAAS7V,GACpD2B,KAAKgS,GAAGkC,aAAalU,KAAKmS,OAAS,EAAG9T,EACxC,EAOAyR,EAAY+B,QAAQtW,UAAU4Y,QAAU,SAAS9V,GAC/C2B,KAAKqT,KAAK,EAAG,GACbrT,KAAK6T,UAAUxV,EACjB,EAMAyR,EAAY+B,QAAQtW,UAAU6Y,SAAW,SAAS/V,GAChD2B,KAAKqT,KAAK,EAAG,GACbrT,KAAK8T,WAAWzV,EAClB,EAMAyR,EAAY+B,QAAQtW,UAAU8Y,SAAW,SAAShW,GAChD2B,KAAKqT,KAAK,EAAG,GACbrT,KAAK+T,WAAW1V,EAClB,EAMAyR,EAAY+B,QAAQtW,UAAU+Y,SAAW,SAASjW,GAChD2B,KAAKqT,KAAK,EAAG,GACbrT,KAAKgU,WAAW3V,EAClB,EAMAyR,EAAY+B,QAAQtW,UAAUgZ,WAAa,SAASlW,GAClD2B,KAAKqT,KAAK,EAAG,GACbrT,KAAKiU,aAAa5V,EACpB,EAMAyR,EAAY+B,QAAQtW,UAAUiZ,WAAa,SAASnW,GAClD2B,KAAKqT,KAAK,EAAG,GACbrT,KAAKkU,aAAa7V,EACpB,EAQAyR,EAAY+B,QAAQtW,UAAUkZ,aAAe,SAASC,EAASrW,EAAOsW,IAChE3U,KAAK2S,gBAAkBtU,GAASsW,KAClC3U,KAAKmU,QAAQ9V,GACb2B,KAAK4U,KAAKF,GAEd,EAOA5E,EAAY+B,QAAQtW,UAAUsZ,cAAgB,SAASH,EAASrW,EAAOsW,IACjE3U,KAAK2S,gBAAkBtU,GAASsW,KAClC3U,KAAKoU,SAAS/V,GACd2B,KAAK4U,KAAKF,GAEd,EAOA5E,EAAY+B,QAAQtW,UAAUuZ,cAAgB,SAASJ,EAASrW,EAAOsW,IACjE3U,KAAK2S,gBAAkBtU,GAASsW,KAClC3U,KAAKqU,SAAShW,GACd2B,KAAK4U,KAAKF,GAEd,EAOA5E,EAAY+B,QAAQtW,UAAUwZ,cAAgB,SAASL,EAASrW,EAAOsW,IACjE3U,KAAK2S,gBAAmBtU,EAAMsT,OAAOgD,KACvC3U,KAAKsU,SAASjW,GACd2B,KAAK4U,KAAKF,GAEd,EAOA5E,EAAY+B,QAAQtW,UAAUyZ,gBAAkB,SAASN,EAASrW,EAAOsW,IACnE3U,KAAK2S,gBAAkBtU,GAASsW,KAClC3U,KAAKuU,WAAWlW,GAChB2B,KAAK4U,KAAKF,GAEd,EAOA5E,EAAY+B,QAAQtW,UAAU0Z,gBAAkB,SAASP,EAASrW,EAAOsW,IACnE3U,KAAK2S,gBAAkBtU,GAASsW,KAClC3U,KAAKwU,WAAWnW,GAChB2B,KAAK4U,KAAKF,GAEd,EAOA5E,EAAY+B,QAAQtW,UAAU2Z,eAAiB,SAASR,EAASrW,EAAOsW,IAClE3U,KAAK2S,gBAAkBtU,GAASsW,KAClC3U,KAAKmV,UAAU9W,GACf2B,KAAK4U,KAAKF,GAEd,EASA5E,EAAY+B,QAAQtW,UAAU6Z,eAAiB,SAASV,EAASrW,EAAOsW,GAClEtW,GAASsW,IACX3U,KAAKqV,OAAOhX,GACZ2B,KAAK4U,KAAKF,GAEd,EASA5E,EAAY+B,QAAQtW,UAAU8Z,OAAS,SAASnO,GAC9C,GAAIA,GAAOlH,KAAKoT,SACd,MAAM,IAAIvI,MAAM,iDAEpB,EAMAiF,EAAY+B,QAAQtW,UAAU+Z,UAAY,WACxC,GAAItV,KAAKuS,SACP,MAAM,IAAI1H,MAAM,wDAEpB,EAOAiF,EAAY+B,QAAQtW,UAAUqZ,KAAO,SAASF,GAC5C1U,KAAKqS,OAAOqC,GAAW1U,KAAKoT,QAC9B,EAKAtD,EAAY+B,QAAQtW,UAAU6X,OAAS,WACrC,OAAOpT,KAAKgS,GAAGa,WAAa7S,KAAKmS,KACnC,EAcArC,EAAY+B,QAAQ6B,eAAiB,SAAS1B,GAC5C,IAAIyB,EAAezB,EAAGa,WAGtB,GAAmB,WAAfY,EACF,MAAM,IAAI5I,MAAM,uDAGlB,IAAI0K,EAAe9B,GAAgB,EAC/B+B,EAAM1F,EAAYmC,WAAWC,SAASqD,GAG1C,OAFAC,EAAIC,YAAYF,EAAe9B,GAC/B+B,EAAIvC,QAAQlT,IAAIiS,EAAGiB,QAASsC,EAAe9B,GACpC+B,CACT,EAQA1F,EAAY+B,QAAQtW,UAAU4Z,UAAY,SAAS/B,GACjDpT,KAAKqT,KAAKvD,EAAYS,WAAY,GAClCvQ,KAAK+T,WAAW/T,KAAKoT,SAAWA,EAAStD,EAAYS,WACvD,EAUAT,EAAY+B,QAAQtW,UAAUma,YAAc,SAASC,GACnD3V,KAAKsV,YACc,MAAftV,KAAKqS,SACPrS,KAAKqS,OAAS,IAEhBrS,KAAKsS,cAAgBqD,EACrB,IAAK,IAAInY,EAAI,EAAGA,EAAImY,EAAWnY,IAC7BwC,KAAKqS,OAAO7U,GAAK,EAEnBwC,KAAKuS,UAAW,EAChBvS,KAAKwS,aAAexS,KAAKoT,QAC3B,EAOAtD,EAAY+B,QAAQtW,UAAUqa,UAAY,WACxC,GAAmB,MAAf5V,KAAKqS,SAAmBrS,KAAKuS,SAC/B,MAAM,IAAI1H,MAAM,qDAGlB7K,KAAKqU,SAAS,GAKd,IAJA,IAAIwB,EAAY7V,KAAKoT,SAGjB5V,EAAIwC,KAAKsS,cAAgB,EACtB9U,GAAK,GAAuB,GAAlBwC,KAAKqS,OAAO7U,GAASA,KAItC,IAHA,IAAIsY,EAAetY,EAAI,EAGhBA,GAAK,EAAGA,IAEbwC,KAAKoU,SAA2B,GAAlBpU,KAAKqS,OAAO7U,GAAUqY,EAAY7V,KAAKqS,OAAO7U,GAAK,GAInEwC,KAAKoU,SAASyB,EAAY7V,KAAKwS,cAC/B,IAAIuD,GAAOD,EAFW,GAEuBhG,EAAYQ,aACzDtQ,KAAKoU,SAAS2B,GAGd,IAAIC,EAAkB,EAClBC,EAAMjW,KAAKmS,MACjB+D,EACE,IAAK1Y,EAAI,EAAGA,EAAIwC,KAAKyS,QAAQnU,OAAQd,IAAK,CACxC,IAAI2Y,EAAMnW,KAAKgS,GAAGa,WAAa7S,KAAKyS,QAAQjV,GAC5C,GAAIuY,GAAO/V,KAAKgS,GAAGoE,UAAUD,GAAM,CACjC,IAAK,IAAIE,EAAIvG,EAAYQ,aAAc+F,EAAIN,EAAKM,GAAKvG,EAAYQ,aAC/D,GAAItQ,KAAKgS,GAAGoE,UAAUH,EAAMI,IAAMrW,KAAKgS,GAAGoE,UAAUD,EAAME,GACxD,SAASH,EAGbF,EAAkBhW,KAAKyS,QAAQjV,GAC/B,KACF,CACF,CAmBA,OAjBIwY,GAGFhW,KAAKmS,MAAQnS,KAAKgS,GAAGa,WAAagD,EAGlC7V,KAAKgS,GAAG+B,WAAW/T,KAAKmS,MAAO6D,EAAkBH,KAIjD7V,KAAKyS,QAAQ7W,KAAKoE,KAAKoT,UAGvBpT,KAAKgS,GAAG+B,WAAW/T,KAAKgS,GAAGa,WAAagD,EAAW7V,KAAKoT,SAAWyC,IAGrE7V,KAAKuS,UAAW,EACTsD,CACT,EASA/F,EAAY+B,QAAQtW,UAAU0S,OAAS,SAASqI,EAAYC,GAC1D,GAAIA,EAAqB,CACvB,IAAIC,EAAkBD,EAGtB,GAFAvW,KAAKqT,KAAKrT,KAAKoS,SAAUtC,EAAYS,WACnCT,EAAYU,wBACVgG,EAAgBlY,QAAUwR,EAAYU,uBACxC,MAAM,IAAI3F,MAAM,+CACdiF,EAAYU,wBAEhB,IAAK,IAAIhT,EAAIsS,EAAYU,uBAAyB,EAAGhT,GAAK,EAAGA,IAC3DwC,KAAK6T,UAAU2C,EAAgBC,WAAWjZ,GAE9C,CACAwC,KAAKqT,KAAKrT,KAAKoS,SAAUtC,EAAYS,YACrCvQ,KAAKmV,UAAUmB,GACftW,KAAKgS,GAAGyD,YAAYzV,KAAKmS,MAC3B,EAUArC,EAAY+B,QAAQtW,UAAUmb,cAAgB,SAASC,EAAOC,GAC5D,IAAIC,EAAc7W,KAAKgS,GAAGa,WAAa8D,EACnCG,EAAeD,EAAc7W,KAAKgS,GAAG+E,UAAUF,GAInD,KAHoD,GAA3C7W,KAAKgS,GAAGoE,UAAUU,EAAeF,IAIxC,MAAM,IAAI/L,MAAM,sBAAwB+L,EAAQ,eAEpD,EAWA9G,EAAY+B,QAAQtW,UAAUyb,YAAc,SAASC,EAAWC,EAAWC,GACzEnX,KAAKsV,YACLtV,KAAK0S,iBAAmBwE,EACxBlX,KAAKqT,KAAKvD,EAAYS,WAAY0G,EAAYC,GAC9ClX,KAAKqT,KAAK8D,EAAWF,EAAYC,EACnC,EASApH,EAAY+B,QAAQtW,UAAU6b,UAAY,WAExC,OADApX,KAAK+T,WAAW/T,KAAK0S,kBACd1S,KAAKoT,QACd,EAUAtD,EAAY+B,QAAQtW,UAAU8b,aAAe,SAAS5R,GACpD,GAAIA,aAAa4L,WACf,IAAIiG,EAAO7R,MAEX,CAAI6R,EAAO,GAGX,IAHA,IACI9Z,EAAI,EAEDA,EAAIiI,EAAEnH,QAAQ,CACnB,IAAIiZ,EAGAvH,EAAIvK,EAAEgR,WAAWjZ,KACrB,GAAIwS,EAAI,OAAUA,GAAK,MACrBuH,EAAYvH,OAGZuH,GAAavH,GAAK,IADVvK,EAAEgR,WAAWjZ,MACO,SAI1B+Z,EAAY,IACdD,EAAK1b,KAAK2b,IAENA,EAAY,KACdD,EAAK1b,KAAO2b,GAAa,EAAK,GAAQ,MAElCA,EAAY,MACdD,EAAK1b,KAAO2b,GAAa,GAAM,GAAQ,KAEvCD,EAAK1b,KACD2b,GAAa,GAAM,EAAQ,IAC3BA,GAAa,GAAM,GAAQ,KAEjCD,EAAK1b,KAAO2b,GAAa,EAAK,GAAQ,MAExCD,EAAK1b,KAAkB,GAAZ2b,EAAoB,KAEnC,CAjCa,CAoCfvX,KAAKmU,QAAQ,GACbnU,KAAKgX,YAAY,EAAGM,EAAKhZ,OAAQ,GACjC0B,KAAKgS,GAAGyD,YAAYzV,KAAKmS,OAASmF,EAAKhZ,QAC9Bd,EAAI,EAAb,IAAK,IAAW4V,EAASpT,KAAKmS,MAAOc,EAAQjT,KAAKgS,GAAGiB,QAASzV,EAAI8Z,EAAKhZ,OAAQd,IAC7EyV,EAAMG,KAAYkE,EAAK9Z,GAEzB,OAAOwC,KAAKoX,WACd,EASAtH,EAAY+B,QAAQtW,UAAUic,WAAa,SAASjG,EAAKC,GACvD,OAAO1B,EAAYwB,KAAK7U,OAAO8U,EAAKC,EACtC,EASA1B,EAAYmC,WAAa,SAASgB,GAKhCjT,KAAKyX,OAASxE,EAMdjT,KAAK0X,UAAY,CACnB,EAQA5H,EAAYmC,WAAWC,SAAW,SAAS0B,GACzC,OAAO,IAAI9D,EAAYmC,WAAW,IAAIZ,WAAWuC,GACnD,EAEA9D,EAAYmC,WAAW1W,UAAUqX,MAAQ,WACvC5S,KAAK0X,UAAY,CACnB,EAOA5H,EAAYmC,WAAW1W,UAAU0X,MAAQ,WACvC,OAAOjT,KAAKyX,MACd,EAOA3H,EAAYmC,WAAW1W,UAAU4X,SAAW,WAC1C,OAAOnT,KAAK0X,SACd,EAOA5H,EAAYmC,WAAW1W,UAAUka,YAAc,SAAStC,GACtDnT,KAAK0X,UAAYvE,CACnB,EAOArD,EAAYmC,WAAW1W,UAAUsX,SAAW,WAC1C,OAAO7S,KAAKyX,OAAOnZ,MACrB,EAMAwR,EAAYmC,WAAW1W,UAAUoc,SAAW,SAASvE,GACnD,OAAOpT,KAAK4X,UAAUxE,IAAW,IAAM,EACzC,EAMAtD,EAAYmC,WAAW1W,UAAUqc,UAAY,SAASxE,GACpD,OAAOpT,KAAKyX,OAAOrE,EACrB,EAMAtD,EAAYmC,WAAW1W,UAAU6a,UAAY,SAAShD,GACpD,OAAOpT,KAAK6X,WAAWzE,IAAW,IAAM,EAC1C,EAMAtD,EAAYmC,WAAW1W,UAAUsc,WAAa,SAASzE,GACrD,OAAOpT,KAAKyX,OAAOrE,GAAUpT,KAAKyX,OAAOrE,EAAS,IAAM,CAC1D,EAMAtD,EAAYmC,WAAW1W,UAAUwb,UAAY,SAAS3D,GACpD,OAAOpT,KAAKyX,OAAOrE,GAAUpT,KAAKyX,OAAOrE,EAAS,IAAM,EAAIpT,KAAKyX,OAAOrE,EAAS,IAAM,GAAKpT,KAAKyX,OAAOrE,EAAS,IAAM,EACzH,EAMAtD,EAAYmC,WAAW1W,UAAUuc,WAAa,SAAS1E,GACrD,OAAOpT,KAAK+W,UAAU3D,KAAY,CACpC,EAMAtD,EAAYmC,WAAW1W,UAAUwc,UAAY,SAAS3E,GACpD,OAAO,IAAItD,EAAYwB,KAAKtR,KAAK+W,UAAU3D,GAASpT,KAAK+W,UAAU3D,EAAS,GAC9E,EAMAtD,EAAYmC,WAAW1W,UAAUyc,WAAa,SAAS5E,GACrD,OAAO,IAAItD,EAAYwB,KAAKtR,KAAK8X,WAAW1E,GAASpT,KAAK8X,WAAW1E,EAAS,GAChF,EAMAtD,EAAYmC,WAAW1W,UAAU0c,YAAc,SAAS7E,GAEtD,OADAtD,EAAYc,MAAM,GAAK5Q,KAAK+W,UAAU3D,GAC/BtD,EAAYgB,QAAQ,EAC7B,EAMAhB,EAAYmC,WAAW1W,UAAU2c,YAAc,SAAS9E,GAGtD,OAFAtD,EAAYc,MAAMd,EAAYqB,eAAiB,EAAI,GAAKnR,KAAK+W,UAAU3D,GACvEtD,EAAYc,MAAMd,EAAYqB,eAAiB,EAAI,GAAKnR,KAAK+W,UAAU3D,EAAS,GACzEtD,EAAYmB,QAAQ,EAC7B,EAMAnB,EAAYmC,WAAW1W,UAAUsY,UAAY,SAAST,EAAQ/U,GAC5D2B,KAAKyX,OAAOrE,GAAgC/U,CAC9C,EAMAyR,EAAYmC,WAAW1W,UAAU4c,WAAa,SAAS/E,EAAQ/U,GAC7D2B,KAAKyX,OAAOrE,GAAU/U,CACxB,EAMAyR,EAAYmC,WAAW1W,UAAUuY,WAAa,SAASV,EAAQ/U,GAC7D2B,KAAKyX,OAAOrE,GAAU/U,EACtB2B,KAAKyX,OAAOrE,EAAS,GAAK/U,GAAS,CACrC,EAMAyR,EAAYmC,WAAW1W,UAAU6c,YAAc,SAAShF,EAAQ/U,GAC5D2B,KAAKyX,OAAOrE,GAAU/U,EACtB2B,KAAKyX,OAAOrE,EAAS,GAAK/U,GAAS,CACvC,EAMAyR,EAAYmC,WAAW1W,UAAUwY,WAAa,SAASX,EAAQ/U,GAC7D2B,KAAKyX,OAAOrE,GAAU/U,EACtB2B,KAAKyX,OAAOrE,EAAS,GAAK/U,GAAS,EACnC2B,KAAKyX,OAAOrE,EAAS,GAAK/U,GAAS,GACnC2B,KAAKyX,OAAOrE,EAAS,GAAK/U,GAAS,EACrC,EAMAyR,EAAYmC,WAAW1W,UAAU8c,YAAc,SAASjF,EAAQ/U,GAC5D2B,KAAKyX,OAAOrE,GAAU/U,EACtB2B,KAAKyX,OAAOrE,EAAS,GAAK/U,GAAS,EACnC2B,KAAKyX,OAAOrE,EAAS,GAAK/U,GAAS,GACnC2B,KAAKyX,OAAOrE,EAAS,GAAK/U,GAAS,EACvC,EAMAyR,EAAYmC,WAAW1W,UAAUyY,WAAa,SAASZ,EAAQ/U,GAC7D2B,KAAK+T,WAAWX,EAAQ/U,EAAMkT,KAC9BvR,KAAK+T,WAAWX,EAAS,EAAG/U,EAAMmT,KACpC,EAMA1B,EAAYmC,WAAW1W,UAAU+c,YAAc,SAASlF,EAAQ/U,GAC5D2B,KAAKqY,YAAYjF,EAAQ/U,EAAMkT,KAC/BvR,KAAKqY,YAAYjF,EAAS,EAAG/U,EAAMmT,KACvC,EAMA1B,EAAYmC,WAAW1W,UAAU0Y,aAAe,SAASb,EAAQ/U,GAC/DyR,EAAYgB,QAAQ,GAAKzS,EACzB2B,KAAK+T,WAAWX,EAAQtD,EAAYc,MAAM,GAC5C,EAMAd,EAAYmC,WAAW1W,UAAU2Y,aAAe,SAASd,EAAQ/U,GAC/DyR,EAAYmB,QAAQ,GAAK5S,EACzB2B,KAAK+T,WAAWX,EAAQtD,EAAYc,MAAMd,EAAYqB,eAAiB,EAAI,IAC3EnR,KAAK+T,WAAWX,EAAS,EAAGtD,EAAYc,MAAMd,EAAYqB,eAAiB,EAAI,GACjF,EAQArB,EAAYmC,WAAW1W,UAAUgd,oBAAsB,WACrD,GAAIvY,KAAKyX,OAAOnZ,OAAS0B,KAAK0X,UAAY5H,EAAYS,WAClDT,EAAYU,uBACd,MAAM,IAAI3F,MACN,kEAGN,IADA,IAAIN,EAAS,GACJ/M,EAAI,EAAGA,EAAIsS,EAAYU,uBAAwBhT,IACtD+M,GAAU9C,OAAO+Q,aACbxY,KAAK2X,SAAS3X,KAAK0X,UAAY5H,EAAYS,WAAa/S,IAE9D,OAAO+M,CACT,EAUAuF,EAAYmC,WAAW1W,UAAUkd,SAAW,SAASC,EAAQC,GAC3D,IAAItG,EAASqG,EAAS1Y,KAAK+W,UAAU2B,GACrC,OAAOC,EAAgB3Y,KAAKoW,UAAU/D,GAAUrS,KAAKoW,UAAU/D,EAASsG,GAAiB,CAC3F,EASA7I,EAAYmC,WAAW1W,UAAUqd,QAAU,SAASC,EAAGzF,GAGrD,OAFAyF,EAAEH,OAAStF,EAASpT,KAAK+W,UAAU3D,GACnCyF,EAAE7G,GAAKhS,KACA6Y,CACT,EAeA/I,EAAYmC,WAAW1W,UAAUud,SAAW,SAAS1F,EAAQ2F,GAC3D3F,GAAUpT,KAAK+W,UAAU3D,GAEzB,IAAI9U,EAAS0B,KAAK+W,UAAU3D,GACxB7I,EAAS,GACT/M,EAAI,EAIR,GAFA4V,GAAUtD,EAAYS,WAElBwI,IAAiBjJ,EAAYW,SAASC,WACxC,OAAO1Q,KAAKyX,OAAOvE,SAASE,EAAQA,EAAS9U,GAG/C,KAAOd,EAAIc,GAAQ,CACjB,IAAIiZ,EAGAvH,EAAIhQ,KAAK4X,UAAUxE,EAAS5V,KAChC,GAAIwS,EAAI,IACNuH,EAAYvH,MACP,CACL,IAAIgJ,EAAIhZ,KAAK4X,UAAUxE,EAAS5V,KAChC,GAAIwS,EAAI,IACNuH,GACQ,GAAJvH,IAAa,EACV,GAAJgJ,MACE,CACL,IAAIC,EAAIjZ,KAAK4X,UAAUxE,EAAS5V,KAChC,GAAIwS,EAAI,IACNuH,GACQ,GAAJvH,IAAa,IACT,GAAJgJ,IAAa,EACV,GAAJC,OAGH1B,GACQ,EAAJvH,IAAa,IACT,GAAJgJ,IAAa,IACT,GAAJC,IAAa,EACV,GALCjZ,KAAK4X,UAAUxE,EAAS5V,IAOpC,CACF,CAGI+Z,EAAY,MACdhN,GAAU9C,OAAO+Q,aAAajB,IAE9BA,GAAa,MACbhN,GAAU9C,OAAO+Q,aACK,OAAnBjB,GAAa,IACkB,OAAlB,KAAbA,IAEP,CAEA,OAAOhN,CACT,EAOAuF,EAAYmC,WAAW1W,UAAU2d,WAAa,SAAS9F,GACrD,OAAOA,EAASpT,KAAK+W,UAAU3D,EACjC,EAQAtD,EAAYmC,WAAW1W,UAAU4d,SAAW,SAAS/F,GACnD,OAAOA,EAASpT,KAAK+W,UAAU3D,GAAUtD,EAAYS,UACvD,EAQAT,EAAYmC,WAAW1W,UAAU6d,aAAe,SAAShG,GACvD,OAAOpT,KAAK+W,UAAU3D,EAASpT,KAAK+W,UAAU3D,GAChD,EAMAtD,EAAYmC,WAAW1W,UAAU8d,iBAAmB,SAASC,GAC3D,GAAIA,EAAMhb,QAAUwR,EAAYU,uBAC9B,MAAM,IAAI3F,MAAM,+CACAiF,EAAYU,wBAE9B,IAAK,IAAIhT,EAAI,EAAGA,EAAIsS,EAAYU,uBAAwBhT,IACtD,GAAI8b,EAAM7C,WAAWjZ,IAAMwC,KAAK2X,SAAS3X,KAAK0X,UAAY5H,EAAYS,WAAa/S,GACjF,OAAO,EAGX,OAAO,CACT,EASAsS,EAAYmC,WAAW1W,UAAUic,WAAa,SAASjG,EAAKC,GAC1D,OAAO1B,EAAYwB,KAAK7U,OAAO8U,EAAKC,EACtC,EC9jCI,IAAI+H,GAAiB,EASzB,SAASC,EAAOC,GAEdzZ,KAAKyZ,OAAS,GAAG5d,MAAMqC,KAAKub,EAC9B,CAEAD,EAAOje,UAAY,CAIjBme,YAAa,WACX,OAAQ1Z,KAAKyZ,OAAOnb,MACtB,EAUCqb,KAAM,WACL,OAAK3Z,KAAKyZ,OAAOnb,OAET0B,KAAKyZ,OAAOG,QADXL,CAEV,EASDM,QAAS,SAASC,GAChB,GAAIxe,MAAMe,QAAQyd,GAEhB,IADA,IAAIL,EAAsCK,EACnCL,EAAOnb,QACZ0B,KAAKyZ,OAAOM,QAAQN,EAAOtM,YAE7BnN,KAAKyZ,OAAOM,QAAQD,EAExB,EASAle,KAAM,SAASke,GACb,GAAIxe,MAAMe,QAAQyd,GAEhB,IADA,IAAIL,EAAsCK,EACnCL,EAAOnb,QACZ0B,KAAKyZ,OAAO7d,KAAK6d,EAAOG,cAE1B5Z,KAAKyZ,OAAO7d,KAAKke,EAErB,GAUF,IAAIE,GAAY,EAOhB,SAASC,EAAaC,EAAOC,GAC3B,GAAID,EACF,MAAMzb,UAAU,iBAClB,OAAO0b,GAAkB,KAC3B,CA8Bc,IAAIC,EAAmB,QAUrC,SAASC,GAAYC,EAAU7V,GAC7B,KAAMzE,gBAAgBqa,IACpB,OAAO,IAAIA,GAAYC,EAAU7V,GAGnC,IADA6V,OAAwB1V,IAAb0V,EAAyB7S,OAAO6S,GAAUC,cAAgBH,KACpDA,EACf,MAAM,IAAIvP,MAAM,mDAElBpG,EAAU0L,EAAa1L,GAGvBzE,KAAKwa,YAAa,EAElBxa,KAAKya,UAAW,EAEhBza,KAAK0a,SAAW,KAEhB1a,KAAK2a,OAASpY,QAAQkC,EAAe,OAErCzE,KAAK4a,WAAarY,QAAQkC,EAAmB,WAE7ChJ,OAAO+E,eAAeR,KAAM,WAAY,CAAC3B,MAAO,UAChD5C,OAAO+E,eAAeR,KAAM,QAAS,CAAC3B,MAAO2B,KAAK2a,SAClDlf,OAAO+E,eAAeR,KAAM,YAAa,CAAC3B,MAAO2B,KAAK4a,YACxD,CA4FA,SAASC,GAAYP,EAAU7V,GAC7B,KAAMzE,gBAAgB6a,IACpB,OAAO,IAAIA,GAAYP,EAAU7V,GAEnC,IADA6V,OAAwB1V,IAAb0V,EAAyB7S,OAAO6S,GAAUC,cAAgBH,KACpDA,EACf,MAAM,IAAIvP,MAAM,mDAElBpG,EAAU0L,EAAa1L,GAGvBzE,KAAKwa,YAAa,EAElBxa,KAAK8a,SAAW,KAEhB9a,KAAK+a,SAAW,CAACb,MAAO3X,QAAQkC,EAAe,QAE/ChJ,OAAO+E,eAAeR,KAAM,WAAY,CAAC3B,MAAO,SAClD,CA2DA,SAAS2c,GAAYvW,GACnB,IAAIyV,EAAQzV,EAAQyV,MAMMe,EAAkB,EAClBC,EAAkB,EAClBC,EAAoB,EACpBC,EAAsB,IACtBC,EAAsB,IAShDrb,KAAKsb,QAAU,SAASC,EAAQC,GAG9B,GAAIA,IAASjC,GAAuC,IAAtB4B,EAE5B,OADAA,EAAoB,EACblB,EAAaC,GAItB,GAAIsB,IAASjC,EACX,OAAOS,EAGT,GAA0B,IAAtBmB,EAAyB,CAG3B,GAAIpL,EAAQyL,EAAM,EAAM,KAEtB,OAAOA,EAIT,GAAIzL,EAAQyL,EAAM,IAAM,KAGtBL,EAAoB,EACpBF,EAAkBO,EAAO,SAItB,GAAIzL,EAAQyL,EAAM,IAAM,KAEd,MAATA,IACFJ,EAAsB,KAEX,MAATI,IACFH,EAAsB,KAGxBF,EAAoB,EACpBF,EAAkBO,EAAO,QAItB,KAAIzL,EAAQyL,EAAM,IAAM,KAgB3B,OAAOvB,EAAaC,GAdP,MAATsB,IACFJ,EAAsB,KAEX,MAATI,IACFH,EAAsB,KAGxBF,EAAoB,EACpBF,EAAkBO,EAAO,GAO3B,CAMA,OADAP,IAAsC,EAAIE,EACnC,IACT,CAIA,IAAKpL,EAAQyL,EAAMJ,EAAqBC,GAatC,OARAJ,EAAkBE,EAAoBD,EAAkB,EACxDE,EAAsB,IACtBC,EAAsB,IAGtBE,EAAO1B,QAAQ2B,GAGRvB,EAAaC,GAgBtB,GAXAkB,EAAsB,IACtBC,EAAsB,IAMtBJ,GAAoBO,EAAO,KAAU,GAAKL,GAD1CD,GAAmB,IAKfA,IAAoBC,EACtB,OAAO,KAGT,IAAIM,EAAaR,EAOjB,OAHAA,EAAkBE,EAAoBD,EAAkB,EAGjDO,CACT,CACF,CAOA,SAASC,GAAYjX,GACPA,EAAQyV,MAMpBla,KAAKsb,QAAU,SAASC,EAAQE,GAE9B,GAAIA,IAAelC,EACjB,OAAOS,EAIT,GAAIjK,EAAQ0L,EAAY,EAAQ,KAC9B,OAAOA,EAGT,IAAIE,EAAOvI,EAEPrD,EAAQ0L,EAAY,IAAQ,OAC9BE,EAAQ,EACRvI,EAAS,KAGFrD,EAAQ0L,EAAY,KAAQ,QACnCE,EAAQ,EACRvI,EAAS,KAGFrD,EAAQ0L,EAAY,MAAS,WACpCE,EAAQ,EACRvI,EAAS,KAQX,IAHA,IAAIH,EAAQ,EAAEwI,GAAe,EAAIE,GAAUvI,GAGpCuI,EAAQ,GAAG,CAGhB,IAAIC,EAAOH,GAAe,GAAKE,EAAQ,GAGvC1I,EAAMrX,KAAK,IAAe,GAAPggB,GAGnBD,GAAS,CACX,CAGA,OAAO1I,CACT,CACF,CA1WAoH,GAAY9e,UAAY,CAMtBsgB,OAAQ,SAAgBzU,EAAO3C,GAC7B,IAAIwO,EAEFA,EADmB,kBAAV7L,GAAsBA,aAAiBnL,YACxC,IAAIoV,WAAWjK,GACG,kBAAVA,GAAsB,WAAYA,GACzCA,EAAM4J,kBAAkB/U,YACzB,IAAIoV,WAAWjK,EAAM4J,OACN5J,EAAM0U,WACN1U,EAAM2U,YAErB,IAAI1K,WAAW,GAGzB5M,EAAU0L,EAAa1L,GAElBzE,KAAKwa,aACRxa,KAAK0a,SAAW,IAAIM,GAAY,CAACd,MAAOla,KAAK2a,SAC7C3a,KAAKya,UAAW,GAElBza,KAAKwa,WAAajY,QAAQkC,EAAgB,QAS1C,IAPA,IAKI8F,EALAyR,EAAe,IAAIxC,EAAOvG,GAE1BgJ,EAAc,IAKVD,EAAatC,gBACnBnP,EAASvK,KAAK0a,SAASY,QAAQU,EAAcA,EAAarC,WAC3CK,GAEA,OAAXzP,IAEAjP,MAAMe,QAAQkO,GAChB0R,EAAYrgB,KAAKkF,MAAMmb,EAA0C1R,GAEjE0R,EAAYrgB,KAAK2O,IAErB,IAAKvK,KAAKwa,WAAY,CACpB,EAAG,CAED,IADAjQ,EAASvK,KAAK0a,SAASY,QAAQU,EAAcA,EAAarC,WAC3CK,EACb,MACa,OAAXzP,IAEAjP,MAAMe,QAAQkO,GAChB0R,EAAYrgB,KAAKkF,MAAMmb,EAA0C1R,GAEjE0R,EAAYrgB,KAAK2O,GACrB,QAAUyR,EAAatC,eACvB1Z,KAAK0a,SAAW,IAClB,CAoBA,OAlBIuB,EAAY3d,UAI4B,IAAtC,CAAC,SAAS4d,QAAQlc,KAAKsa,WACtBta,KAAK4a,YAAe5a,KAAKya,WAEL,QAAnBwB,EAAY,IACdjc,KAAKya,UAAW,EAChBwB,EAAYrC,SAIZ5Z,KAAKya,UAAW,IAjQ1B,SAA4BwB,GAE1B,IADA,IAAIxW,EAAI,GACCjI,EAAI,EAAGA,EAAIye,EAAY3d,SAAUd,EAAG,CAC3C,IAAI2e,EAAKF,EAAYze,GACjB2e,GAAM,MACR1W,GAAKgC,OAAO+Q,aAAa2D,IAEzBA,GAAM,MACN1W,GAAKgC,OAAO+Q,aAA0B,OAAZ2D,GAAM,IACQ,OAAT,KAALA,IAE9B,CACA,OAAO1W,CACT,CAyPW2W,CAAmBH,EAC5B,GA8BFpB,GAAYtf,UAAY,CAMtB8gB,OAAQ,SAAgBC,EAAY7X,GAClC6X,EAAaA,EAAa7U,OAAO6U,GAAc,GAC/C7X,EAAU0L,EAAa1L,GAKlBzE,KAAKwa,aACRxa,KAAK8a,SAAW,IAAIY,GAAY1b,KAAK+a,WACvC/a,KAAKwa,WAAajY,QAAQkC,EAAgB,QAM1C,IAJA,IAGI8F,EAHA0I,EAAQ,GACR+I,EAAe,IAAIxC,EA1Y3B,SAA4B+C,GAgB1B,IAZA,IAAI9W,EAAIgC,OAAO8U,GAGX7W,EAAID,EAAEnH,OAGNd,EAAI,EAGJgf,EAAI,GAGDhf,EAAIkI,GAAG,CAGZ,IAAIuT,EAAIxT,EAAEgR,WAAWjZ,GAKrB,GAAIyb,EAAI,OAAUA,EAAI,MAEpBuD,EAAE5gB,KAAKqd,QAIJ,GAAI,OAAUA,GAAKA,GAAK,MAE3BuD,EAAE5gB,KAAK,YAIJ,GAAI,OAAUqd,GAAKA,GAAK,MAG3B,GAAIzb,IAAMkI,EAAI,EACZ8W,EAAE5gB,KAAK,WAGJ,CAEH,IAAI6gB,EAAIF,EAAO9F,WAAWjZ,EAAI,GAG9B,GAAI,OAAUif,GAAKA,GAAK,MAAQ,CAE9B,IAAIzM,EAAQ,KAAJiJ,EAGJD,EAAQ,KAAJyD,EAIRD,EAAE5gB,KAAK,OAAWoU,GAAK,IAAMgJ,GAG7Bxb,GAAK,CACP,MAKEgf,EAAE5gB,KAAK,MAEX,CAIF4B,GAAK,CACP,CAGA,OAAOgf,CACT,CA6TkCE,CAAmBJ,KAGzCN,EAAatC,gBACnBnP,EAASvK,KAAK8a,SAASQ,QAAQU,EAAcA,EAAarC,WAC3CK,GAEX1e,MAAMe,QAAQkO,GAChB0I,EAAMrX,KAAKkF,MAAMmS,EAAoC1I,GAErD0I,EAAMrX,KAAK2O,GAEf,IAAKvK,KAAKwa,WAAY,CACpB,MACEjQ,EAASvK,KAAK8a,SAASQ,QAAQU,EAAcA,EAAarC,WAC3CK,GAEX1e,MAAMe,QAAQkO,GAChB0I,EAAMrX,KAAKkF,MAAMmS,EAAoC1I,GAErD0I,EAAMrX,KAAK2O,GAEfvK,KAAK8a,SAAW,IAClB,CACA,OAAO,IAAIzJ,WAAW4B,EACxB,GC5aF,IAAM0J,GAA4B,oBAAXC,OAAwBA,OAAS,KAElDC,GAA2C,oBAAhBxC,aAAqD,oBAAhBQ,YAGzDiC,GAAc,SAACzC,GACxB,GAAIwC,KAAsBF,GAAS,CAC/B,IAAMI,EAAU,IAAI1C,EAAY,SAChC,OAAO,SAACrJ,GAAsC,OAAK+L,EAAQlB,OAAO7K,EAAO,C,CAE7E,OAAO,SAAC5J,GACJ,MAAuC4V,GAAa5V,GAA5C4J,EAAM,EAANA,OAAQ8K,EAAU,EAAVA,WAAYxd,EAAM,EAANA,OAC5B,OAAOqe,GAAQM,KAAKjM,EAAQ8K,EAAYxd,GAAQxC,UACpD,CACJ,CAT2B,CASD,qBAAhBue,YAA8BA,YAAc6C,IAGzCC,GAAc,SAACtC,GACxB,GAAIgC,KAAsBF,GAAS,CAC/B,IAAMS,EAAU,IAAIvC,EACpB,OAAO,SAACxc,GAAc,OAAK+e,EAAQf,OAAOhe,EAAM,C,CAEpD,OAAO,eAAC+I,EAAQ,UAAH,6CAAG,GAAE,OAAK4V,GAAaL,GAAQM,KAAK7V,EAAO,QAAQ,CACpE,CAN2B,CAMD,qBAAhByT,YAA8BA,YAAcwC,IC/CvC,SAASC,GAAgBjY,EAAGkY,GAKzC,OAJAD,GAAkB7hB,OAAOsH,eAAiBtH,OAAOsH,eAAeya,OAAS,SAAyBnY,EAAGkY,GAEnG,OADAlY,EAAEuH,UAAY2Q,EACPlY,CACT,EACOiY,GAAgBjY,EAAGkY,EAC5B,CCLe,SAASE,GAAUC,EAAUC,GAC1C,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIlf,UAAU,sDAEtBif,EAASniB,UAAYE,OAAOgB,OAAOkhB,GAAcA,EAAWpiB,UAAW,CACrE8F,YAAa,CACXhD,MAAOqf,EACPpc,UAAU,EACVV,cAAc,KAGlBnF,OAAO+E,eAAekd,EAAU,YAAa,CAC3Cpc,UAAU,IAERqc,GAAY,GAAeD,EAAUC,EAC3C,CChBe,SAASC,GAAgBvY,GAItC,OAHAuY,GAAkBniB,OAAOsH,eAAiBtH,OAAOiG,eAAe8b,OAAS,SAAyBnY,GAChG,OAAOA,EAAEuH,WAAanR,OAAOiG,eAAe2D,EAC9C,EACOuY,GAAgBvY,EACzB,CCLe,SAASwY,KACtB,GAAuB,qBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,oBAAVC,MAAsB,OAAO,EACxC,IAEE,OADA1b,QAAQhH,UAAU2iB,QAAQhgB,KAAK4f,QAAQC,UAAUxb,QAAS,IAAI,WAAa,MACpE,CAGT,CAFE,MAAOoD,GACP,OAAO,CACT,CACF,CCVe,SAASwY,GAAuBjjB,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIkjB,eAAe,6DAE3B,OAAOljB,CACT,CCHe,SAASmjB,GAA2BnjB,EAAMgD,GACvD,GAAIA,IAA2B,WAAlB+I,EAAQ/I,IAAsC,oBAATA,GAChD,OAAOA,EACF,QAAa,IAATA,EACT,MAAM,IAAIO,UAAU,4DAEtB,OAAO,GAAsBvD,EAC/B,CCNe,SAASojB,GAAaC,GACnC,IAAIC,EAA4B,KAChC,OAAO,WACL,IACEjU,EADEkU,EAAQ,GAAeF,GAE3B,GAAIC,EAA2B,CAC7B,IAAIE,EAAY,GAAe1e,MAAMqB,YACrCkJ,EAASuT,QAAQC,UAAUU,EAAO1d,UAAW2d,EAC/C,MACEnU,EAASkU,EAAM3d,MAAMd,KAAMe,WAE7B,OAAO,GAA0Bf,KAAMuK,EACzC,CACF,CCIO,IAAMoU,GAAqBljB,OAAOmjB,OAAO,CAAExgB,MAAM,EAAMC,WAAO,IAUxDwgB,GAAS,WAElB,WAAoBC,GAAoB,UAApB,KAAAA,OAAuB,CAG6C,OAH5C,uBAC5C,WAA2B,OAAO9e,KAAK8e,MAAc,MAAG,GAAC,mBACzD,WAA8B,OAAQ9e,KAAK8e,MAAe,SAAK,EAAc,GAAC,wBAC9E,WAAmC,OAAQ9e,KAAK8e,MAAoB,cAAK,EAAc,KAAC,EALtE,GAqCAC,GAAe,kCAwBhC,OAxBgC,sBAK1B,WACH,OAAO/e,KAAKgf,gBAAgBC,KAChC,GAAC,kBACM,SAAsC3d,EAAamD,GACtD,OAAOzE,KAAKkf,iBAAiBC,KAAK7d,EAAUmD,EAChD,GAAC,oBACM,SAAOnD,EAA6BmD,GAAyB,OAAOzE,KAAKgf,gBAAgBI,OAAO9d,EAAUmD,EAAU,GAAC,yBACrH,SAA2C4a,EAAsD5a,GACpG,OAAOzE,KAAKgf,gBAAgBM,YAAYD,EAAQ5a,EACpD,GAAC,2BAGO,WACJ,OAAOzE,KAAKuf,aAAevf,KAAKuf,WAAavf,KAAKwf,cACtD,GAAC,4BAGO,WACJ,OAAOxf,KAAKyf,cAAgBzf,KAAKyf,YAAczf,KAAK0f,eACxD,KAAC,EAxBgC,GA+BxBC,GAA0D,kCASnE,mBAE6E,OAF7E,WACI,gBAPMC,QAAuB,GAIvB,EAAAC,UAAqD,GAI3D,EAAKC,eAAiB,IAAIrZ,SAAQ,SAACkJ,GAAC,OAAK,EAAKoQ,sBAAwBpQ,CAAC,IAAE,CAC7E,CAoEC,OApEA,uBAED,WAAqC,OAAO3P,KAAK8f,cAAgB,GAAC,iDAC3D,WAAaE,GAAY,iFAAUhgB,KAAKigB,OAAOD,GAAO,gDAAG,mDADE,IACF,mBACzD,SAAM3hB,GACL2B,KAAKkgB,gBACLlgB,KAAK6f,UAAUvhB,QAAU,EAClB0B,KAAK4f,QAAQhkB,KAAKyC,GAClB2B,KAAK6f,UAAUjG,QAASzT,QAAQ,CAAE/H,MAAM,EAAOC,UAE9D,GAAC,mBACM,SAAMA,GACL2B,KAAK+f,wBACL/f,KAAK6f,UAAUvhB,QAAU,EAClB0B,KAAKmgB,OAAS,CAAEvgB,MAAOvB,GACvB2B,KAAK6f,UAAUjG,QAASxT,OAAO,CAAEhI,MAAM,EAAMC,UAE5D,GAAC,mBACM,WACH,GAAI2B,KAAK+f,sBAAuB,CAE5B,IADA,IAAQF,EAAc7f,KAAd6f,UACDA,EAAUvhB,OAAS,GACtBuhB,EAAUjG,QAASzT,QAAQwY,IAE/B3e,KAAK+f,wBACL/f,KAAK+f,2BAAwBnb,C,CAErC,GAAC,aAEM,WAA2B,OAAO5E,IAAM,GAAC,yBACzC,SAAYyE,GACf,OAAO2b,GAAeZ,YACjBxf,KAAK+f,uBAAyB/f,KAAKmgB,OAC7BngB,KACAA,KAAK4f,QACZnb,EACR,GAAC,0BACM,SAAaA,GAChB,OAAO2b,GAAeV,aACjB1f,KAAK+f,uBAAyB/f,KAAKmgB,OAC7BngB,KACAA,KAAK4f,QACZnb,EACR,GAAC,gDACM,WAAY4b,GAAO,iFAAUrgB,KAAKsgB,MAAMD,GAAE,gCAAS1B,IAAa,gDAAG,mDADzE,IACyE,iDACnE,WAAa0B,GAAO,iFAAUrgB,KAAKugB,QAAO,gCAAS5B,IAAa,gDAAG,mDADA,IACA,+CAEnE,WAAWrL,GAAoB,iFAA6CtT,KAAK7B,KAAKmV,EAAM,QAAO,uCAAEjV,OAAK,gDAAG,mDAF1C,IAE0C,+CAC7G,WAAWiV,GAAoB,iFAA6CtT,KAAK7B,KAAKmV,EAAM,QAAO,uCAAEjV,OAAK,gDAAG,mDADA,IACA,kBAC7G,WAAoB,WACvB,OAAI2B,KAAK4f,QAAQthB,OAAS,EACfmI,QAAQN,QAAQ,CAAE/H,MAAM,EAAOC,MAAO2B,KAAK4f,QAAQhG,UACnD5Z,KAAKmgB,OACL1Z,QAAQL,OAAO,CAAEhI,MAAM,EAAMC,MAAO2B,KAAKmgB,OAAOvgB,QAC/CI,KAAK+f,sBAGN,IAAItZ,SAAmC,SAACN,EAASC,GACpD,EAAKyZ,UAAUjkB,KAAK,CAAEuK,UAASC,UACnC,IAJOK,QAAQN,QAAQwY,GAM/B,GAAC,yBAES,WACN,GAAI3e,KAAK+f,sBACL,OAAO,EAEX,MAAM,IAAIlV,MAAM,GAAD,OAAI7K,KAAI,cAC3B,KAAC,EAhFkE,CAAQ+e,GAyCnEpjB,OAAO6M,eChGnB,GAAuC,WACnC,IAAMgY,EAAyB,WAAQ,MAAM,IAAI3V,MAAM,8CAAgD,EACvG,SAAS4V,IAAsB,MAAMD,GAA0B,CAG/D,OAFAC,EAAkBC,OAAS,WAAQ,MAAMF,GAA0B,EACnEC,EAAkBE,QAAU,WAAQ,MAAMH,GAA0B,EAC3C,qBAAXI,OAAyB,CAACA,QAAQ,GAAQ,CAAOH,GAAmB,EACtF,CANuC,GAMH,qBAN7BI,GAAU,MAAEC,GAAe,MASlC,GAAqD,WACjD,IAAMC,EAAgC,WAAQ,MAAM,IAAIlW,MAAM,qDAAuD,EAOrH,MAAgC,qBAAlBmW,cAAgC,CAACA,eAAe,GAAQ,CANxC,WAI1B,aAAgB,MAAhB,UAAsBD,GAAiC,CADC,OACA,uCAHxD,WAAiC,OAAO,CAAG,GAAC,gBAC5C,WAAc,MAAMA,GAAiC,GAAC,kBACtD,WAAgB,MAAMA,GAAiC,KAAC,EAH9B,IAMyE,EAC3G,CATqD,GASV,qBATpCE,GAAiB,MAYxB,IAZgD,MAYO,WACnD,IAAMC,EAAiC,WAAQ,MAAM,IAAIrW,MAAM,sDAAwD,EAOvH,MAAiC,qBAAnBsW,eAAiC,CAACA,gBAAgB,GAAQ,CANzC,WAI3B,aAAgB,MAAhB,UAAsBD,GAAkC,CADC,OACA,uCAHzD,WAAiC,OAAO,CAAG,GAAC,gBAC5C,WAAc,MAAMA,GAAkC,GAAC,kBACvD,WAAgB,MAAMA,GAAkC,KAAC,EAH9B,IAM2E,EAC9G,CATuD,IASX,qBATrCE,GAAkB,MAeJC,IAf6B,MAelB,SAACle,GAAM,MAAkB,kBAANA,CAAc,GAC5Cme,GAAY,SAACne,GAAM,MAAkB,mBAANA,CAAe,EAC9Coe,GAAa,SAACpe,GAAM,MAAkB,oBAANA,CAAgB,EAExDD,GAAW,SAACC,GAAM,OAAuB,MAALA,GAAa1H,OAAO0H,KAAOA,CAAC,EAGhEqe,GAAY,SAAUre,GAC/B,OAAOD,GAASC,IAAMoe,GAAWpe,EAAEuD,KACvC,EAQa+a,GAAa,SAAUte,GAChC,OAAOD,GAASC,IAAMoe,GAAWpe,EAAExH,OAAO+B,UAC9C,EAGagkB,GAAkB,SAAUve,GACrC,OAAOD,GAASC,IAAMoe,GAAWpe,EAAExH,OAAO6M,eAC9C,EAGamZ,GAAc,SAACxe,GACxB,OAAOD,GAASC,IAAMD,GAASC,EAAU,OAC7C,EAQaye,GAAmB,SAAUze,GACtC,OAAOD,GAASC,IAAO,SAAUA,GAAO,UAAWA,CACvD,EAYa0e,GAAe,SAAC1e,GACzB,OAAOD,GAASC,IAAMoe,GAAWpe,EAAQ,OAAMke,GAASle,EAAM,GAClE,EAQa2e,GAAkB,SAAC3e,GAC5B,OAAOD,GAASC,IAAM4e,GAAoB5e,EAAQ,KACtD,EAGa6e,GAAsB,SAAU7e,GACzC,OAAOD,GAASC,IACZoe,GAAWpe,EAAS,QACpBoe,GAAWpe,EAAa,cACtBA,aAAa4b,GACvB,EAGagD,GAAsB,SAAU5e,GACzC,OAAOD,GAASC,IACZoe,GAAWpe,EAAU,SACrBoe,GAAWpe,EAAa,cACtBA,aAAa4b,GACvB,EAGakD,GAAuB,SAAC9e,GACjC,OAAOD,GAASC,IACZoe,GAAWpe,EAAO,MAClBoe,GAAWpe,EAAS,QACpBme,GAAUne,EAAY,aACpBA,aAAa4b,GACvB,EAGamD,GAAuB,SAAC/e,GACjC,OAAOD,GAASC,IACZoe,GAAWpe,EAAQ,OACnBoe,GAAWpe,EAAQ,OACnBme,GAAUne,EAAY,aACpBA,aAAa4b,GACvB,E,YC3CiBoD,IAlHVlQ,GAAanC,EAAYmC,WAM1BmQ,GAA+C,qBAAtBC,kBAAoCA,kBAAoBpmB,YA2BjF,SAAUqmB,GAAyExgB,EAAiBygB,GAA2E,IAA1DC,EAAmB,UAAH,6CAAG,EAAGC,EAAmB,UAAH,6CAAGF,EAAOxG,WACjK2G,EAAmB5gB,EAAOia,WAC1B4G,EAAM,IAAItR,WAAWvP,EAAOkP,OAAQlP,EAAOga,WAAY4G,GACvDE,EAAM,IAAIvR,WAAWkR,EAAOvR,OAAQuR,EAAOzG,WAAY1e,KAAK6S,IAAIwS,EAAkBC,IAExF,OADAC,EAAI5iB,IAAI6iB,EAAKJ,GACN1gB,CACX,CAGM,SAAU+gB,GAAgBC,EAAsBxP,GAQlD,IAJA,IAEIiP,EAAoBQ,EAAoB/R,EAFxCzG,EArCR,SAAsCuY,GAGlC,IAFA,IACIE,EAAiBC,EAAiBC,EAAcC,EAC3ChgB,EAAGigB,EAFR7Y,EAASuY,EAAO,GAAK,CAACA,EAAO,IAAM,GAExBtlB,EAAI,EAAG6Y,EAAI,EAAG3Q,EAAIod,EAAOxkB,SAAUd,EAAIkI,GAIlD,GAHAvC,EAAIoH,EAAO8L,GACX+M,EAAIN,EAAOtlB,IAEN2F,IAAMigB,GAAKjgB,EAAE6N,SAAWoS,EAAEpS,QAAUoS,EAAEtH,WAAa3Y,EAAE2Y,WACtDsH,IAAM7Y,IAAS8L,GAAK+M,OADxB,CAGC,MAC4CjgB,EAA9B6f,EAAO,EAAnBlH,WAAiCoH,EAAI,EAAhBnH,WAAU,MACWqH,EAA9BH,EAAO,EAAnBnH,WAAiCqH,EAAI,EAAhBpH,WAEnBiH,EAAUE,EAAQD,GAAYA,EAAUE,EAAQH,EACjDI,IAAM7Y,IAAS8L,GAAK+M,GAGxB7Y,EAAO8L,GAAK,IAAIhF,WAAWlO,EAAE6N,OAAQgS,EAASC,EAAUD,EAAUG,E,CAEtE,OAAO5Y,CACX,CAgBiB8Y,CAA6BP,GACtC/G,EAAaxR,EAAO+Y,QAAO,SAACngB,EAAG6V,GAAC,OAAK7V,EAAI6V,EAAE+C,UAAU,GAAE,GAEvD3I,EAAS,EAAGmQ,GAAS,EAAGjlB,EAASlB,KAAK6S,IAAIqD,GAAQkQ,IAAUzH,GACvDrW,EAAI6E,EAAOjM,SAAUilB,EAAQ7d,GAAI,CAGtC,GAAIpH,GAAW8U,GADf2P,GADAR,EAAShY,EAAOgZ,IACArQ,SAAS,EAAG9V,KAAK6S,IAAIsS,EAAOjkB,OAAQA,EAAS8U,KAC9B9U,OAAS,CAChCykB,EAAOzkB,OAASikB,EAAOjkB,OACvBiM,EAAOgZ,GAAShB,EAAOrP,SAAS6P,EAAOzkB,QAChCykB,EAAOzkB,SAAWikB,EAAOjkB,QAAUilB,IAC9CvS,EAASsR,GAAOtR,EAAQ+R,EAAQ3P,GAAWpC,EAAS+R,EACpD,K,CAEJT,GAAOtR,IAAWA,EAAS,IAAIK,WAAW/S,IAAUykB,EAAQ3P,GAC5DA,GAAU2P,EAAOzkB,M,CAErB,MAAO,CAAC0S,GAAU,IAAIK,WAAW,GAAI9G,EAAO1O,MAAM0nB,GAAQxH,GAAc/K,EAASA,EAAO+K,WAAa,GACzG,CAUM,SAAU0H,GAAkBC,EAA0Btc,GAExD,IAAI/I,EAAaujB,GAAiBxa,GAASA,EAAM/I,MAAQ+I,EAEzD,OAAI/I,aAAiBqlB,EACbA,IAAwBrS,WAGjB,IAAIqS,EAAoBrlB,EAAM2S,OAAQ3S,EAAMyd,WAAYzd,EAAM0d,YAElE1d,EAENA,GACgB,kBAAVA,IAAsBA,EAAQ8e,GAAW9e,IAChDA,aAAiBpC,aACjBoC,aAAiB+jB,GADsB,IAAIsB,EAAoBrlB,GAE/DA,aAAiB4T,GAAqBwR,GAAkBC,EAAqBrlB,EAAM4U,SAC/EhX,YAAYU,OAAO0B,GAA2CA,EAAM0d,YAAc,EAAI,IAAI2H,EAAoB,GAChH,IAAIA,EAAoBrlB,EAAM2S,OAAQ3S,EAAMyd,WAAYzd,EAAM0d,WAAa2H,EAAoBC,mBADjED,EAAoBzG,KAAK5e,IALxC,IAAIqlB,EAAoB,EAOjD,CAEsB,IAAME,GAAc,SAACxc,GAA2B,OAAKqc,GAAkBI,UAAWzc,EAAM,EAClF0c,GAAe,SAAC1c,GAA2B,OAAKqc,GAAkBM,WAAY3c,EAAM,EACpF4c,GAAe,SAAC5c,GAA2B,OAAKqc,GAAkB5S,WAAYzJ,EAAM,EACpF6c,GAAkB,SAAC7c,GAA2B,OAAKqc,GAAkBzC,GAAe5Z,EAAM,EAC1F4V,GAAe,SAAC5V,GAA2B,OAAKqc,GAAkBpS,WAAYjK,EAAM,EACpF8c,GAAgB,SAAC9c,GAA2B,OAAKqc,GAAkBrS,YAAahK,EAAM,EACtF+c,GAAgB,SAAC/c,GAA2B,OAAKqc,GAAkBW,YAAahd,EAAM,EACtFid,GAAmB,SAACjd,GAA2B,OAAKqc,GAAkBtC,GAAgB/Z,EAAM,EAC5Fkd,GAAiB,SAACld,GAA2B,OAAKqc,GAAkB1S,aAAc3J,EAAM,EACxFmd,GAAiB,SAACnd,GAA2B,OAAKqc,GAAkBvS,aAAc9J,EAAM,EACxFod,GAAsB,SAACpd,GAA2B,OAAKqc,GAAkBgB,kBAAmBrd,EAAM,EAMxHiI,GAAO,SAA+C3R,GAAmC,OAAjBA,EAASS,OAAeT,CAAU,EAG1G,SAAWykB,GAAgDuC,EAAqCnC,GAAoC,yEAUtI,OARM3Z,EAAI,UAAG,SAAPA,EAAoBzF,GAAI,iEAAI,OAAJ,SAAUA,EAAC,oCAAnCyF,EAAI,IACJ+b,EAC4B,kBAAXpC,GACPtmB,YAAYU,OAAO4lB,IACtBA,aAAkBtmB,aACrBsmB,aAAkBH,GAHkBxZ,EAAK2Z,GAIhDd,GAAiCc,GAAyBA,EAAf3Z,EAAK2Z,GAEnD,gBAAOlT,GAAK,UAAC,WAAW9J,GAAE,uEAClBoK,EAA+B,KAAI,OAEvB,OAFuB,KAE/BpK,EAAE,SAAYke,GAAkBiB,EAAW/U,GAAE,mBAAjDA,EAAI,EAAH,GAAMxR,KAAI,2BACLwR,EAAEvR,KAAI,yDAJR,CAKTumB,EAAQhpB,OAAO+B,cAAa,gDAGb,IAAMknB,GAAsB,SAACxd,GAAmC,OAAK+a,GAA0B0B,UAAWzc,EAAM,EAC1Gyd,GAAuB,SAACzd,GAAmC,OAAK+a,GAA0B4B,WAAY3c,EAAM,EAC5G0d,GAAuB,SAAC1d,GAAmC,OAAK+a,GAA0BtR,WAAYzJ,EAAM,EAC5G2d,GAAuB,SAAC3d,GAAmC,OAAK+a,GAA0B9Q,WAAYjK,EAAM,EAC5G4d,GAAwB,SAAC5d,GAAmC,OAAK+a,GAA0B/Q,YAAahK,EAAM,EAC9G6d,GAAwB,SAAC7d,GAAmC,OAAK+a,GAA0BiC,YAAahd,EAAM,EAC9G8d,GAAyB,SAAC9d,GAAmC,OAAK+a,GAA0BpR,aAAc3J,EAAM,EAChH+d,GAAyB,SAAC/d,GAAmC,OAAK+a,GAA0BjR,aAAc9J,EAAM,EAChHge,GAA8B,SAAChe,GAAmC,OAAK+a,GAA0BsC,kBAAmBrd,EAAM,EAM/I,SAAgBie,GAA8B,qCAkCrD,cAFC,OAED,eAlCO,WAAqEX,EAAqCnC,GAAyC,+EAGlJf,GAAgCe,GAAS,CAAF,gBACe,OADf,mBACzB8C,GAA8B,KAACX,EAAS,WAAQnC,GAAM,OAA7D,OAA6D,gEAA7D,6CAA8D,+CAsBzE,OAnBM3Z,EAAI,6BAAG,WAAmBzF,GAAI,mFAAgBA,GAAC,OAAb,OAAa,SAAb,OAAa,2CAAG,gBAA9C,sCACJmiB,EAAI,6BAAG,WAA0C/C,GAAS,iEAC5D,2BAAOlT,GAAK,UAAC,WAAU9J,GAAiB,uEAChCoK,EAA+B,KAAI,OAEvB,OAFuB,KAE/BpK,EAAE,SAAYoK,GAAKA,EAAEtR,MAAK,mBAA9BsR,EAAI,EAAH,GAAMxR,KAAI,2BACLwR,EAAEvR,KAAI,yDAJR,CAKTmkB,EAAO5mB,OAAO+B,gBAAa,mDACjC,gBAPS,sCASJinB,EACiC,kBAAXpC,GACPtmB,YAAYU,OAAO4lB,IACtBA,aAAkBtmB,aACrBsmB,aAAkBH,GAHkBxZ,EAAK2Z,GAIhDd,GAAiCc,GAAU+C,EAAK/C,GACrDb,GAAsCa,GACUA,EADA3Z,EAAK2Z,GAGxD,oBAAOlT,GAAK,6BAAC,WAAiB9J,GAAE,uEACxBoK,EAA+B,KAAI,OAEjB,OAFiB,YAEzBpK,EAAE,SAAYke,GAAkBiB,EAAW/U,GAAE,OAAtC,OAAsC,sBAA1CxR,KAAI,+CAAjBwR,EAAI,EAAH,iBACKA,EAAEvR,KAAI,4DACnB,mDALW,GAKTumB,EAAQhpB,OAAO6M,qBAAkB,qDACvC,yBAEqB,IAAM+c,GAA2B,SAACne,GAAwC,OAAKie,GAA+BxB,UAAWzc,EAAM,EACzHoe,GAA4B,SAACpe,GAAwC,OAAKie,GAA+BtB,WAAY3c,EAAM,EAC3Hqe,GAA4B,SAACre,GAAwC,OAAKie,GAA+BxU,WAAYzJ,EAAM,EAC3Hse,GAA4B,SAACte,GAAwC,OAAKie,GAA+BhU,WAAYjK,EAAM,EAC3Hue,GAA6B,SAACve,GAAwC,OAAKie,GAA+BjU,YAAahK,EAAM,EAC7Hwe,GAA6B,SAACxe,GAAwC,OAAKie,GAA+BjB,YAAahd,EAAM,EAC7Hye,GAA8B,SAACze,GAAwC,OAAKie,GAA+BtU,aAAc3J,EAAM,EAC/H0e,GAA8B,SAAC1e,GAAwC,OAAKie,GAA+BnU,aAAc9J,EAAM,EAC/H2e,GAAmC,SAAC3e,GAAwC,OAAKie,GAA+BZ,kBAAmBrd,EAAM,EAG/J,SAAU4e,GAAmB5S,EAAgB9U,EAAgB2nB,GAG/D,GAAe,IAAX7S,EAAc,CACd6S,EAAeA,EAAapqB,MAAM,EAAGyC,EAAS,GAC9C,IAAK,IAAId,GAAK,IAAKA,GAAKc,GACpB2nB,EAAazoB,IAAM4V,C,CAG3B,OAAO6S,CACX,CAGM,SAAUC,GAA2ClW,EAAMgJ,GAC7D,IAAIxb,EAAI,EAAGkI,EAAIsK,EAAE1R,OACjB,GAAIoH,IAAMsT,EAAE1a,OAAU,OAAO,EAC7B,GAAIoH,EAAI,EACJ,GAAK,GAAIsK,EAAExS,KAAOwb,EAAExb,GAAM,OAAO,UAAoBA,EAAIkI,GAE7D,OAAO,CACX,C,gBC/KUygB,IA3BK,IACXA,aAAY,SAAiC5D,GACzC,OAAOlT,GAAK8W,GAAgB5D,GAChC,EACA6D,kBAAiB,SAAiC7D,GAC9C,OAAOlT,GAkEf,SACiC,mCAnEb+W,CAAqB7D,GACrC,EACA8D,cAAa,SAAiC9D,GAC1C,OAAOlT,GA2Gd,SAM4B,mCAjHTgX,CAAiB9D,GACjC,EACA+D,eAAc,SAAC/K,GACX,OAAOlM,GAoQf,SAC+B,GAAD,gCArQViX,CAAe/K,GAC/B,EAEAiE,YAAW,SAAI+C,EAAwC9d,GACnD,MAAM,IAAIoG,MAAM,kDACpB,EAEA6U,aAAY,SAAI6C,EAAwC9d,GACpD,MAAM,IAAIoG,MAAM,mDACpB,GAIEwE,GAAO,SAA+C3R,GAAmC,OAAjBA,EAASS,OAAeT,CAAU,EAGhH,SAAUyoB,GAA6C5D,GAAuB,kBAMjEgE,EAAS,yEASD,OATRA,EAAS,WACd,GAAY,SAARC,EACA,OAAO3D,GAAgB8B,EAASrR,GAAM,GACzC,MACiCuP,GAAgB8B,EAASrR,GAAK,mBAChE,OADCtC,EAAM,KAAE2T,EAAO,KAAE8B,EAAY,KACvBzV,CACX,EAVmB0V,GAAQ,EACvB/B,EAAwB,GACY8B,EAAe,EAAC,SAW3B,KAAI,gBAA9BD,EAAG,EAAHA,IAAKlT,EAAI,EAAJA,KAGJ/N,EAAKwf,GAAqBxC,GAAQ5mB,OAAO+B,YAAW,kBAYhD,GARA,EAC2Bb,MAAMyW,EAAOmT,GACpClhB,EAAGpH,UAAKyG,GAAaW,EAAGpH,KAAKmV,EAAOmT,GADrCroB,EAAI,EAAJA,KAAa4S,EAAM,EAAb3S,OAGJD,GAAQ4S,EAAO+K,WAAa,IAC7B4I,EAAQ/oB,KAAKoV,GACbyV,GAAgBzV,EAAO+K,cAGvB3d,GAAQkV,GAAQmT,GAAY,yBAEP,OAFO,UAEDF,IAAW,iBAA/BC,EAAG,EAAHA,IAAKlT,EAAI,EAAJA,KAAI,WACPA,EAAOmT,EAAY,6BAE1BroB,EAAI,6EAEbsoB,GAAQ,IAA8B,oBAAbnhB,EAAGohB,OAA0BphB,EAAGohB,MAAM,EAAD,IAAK,QAEI,OAFJ,WAEzD,IAAVD,GAA0C,oBAAdnhB,EAAG0a,QAA2B1a,EAAG0a,SAAU,2EAqDhF,cALC,OAKD,eAhDA,WAAkEsC,GAAyC,kBAM9FgE,EAAS,yEASD,OATRA,EAAS,WACd,GAAY,SAARC,EACA,OAAO3D,GAAgB8B,EAASrR,GAAM,GACzC,MACiCuP,GAAgB8B,EAASrR,GAAK,mBAChE,OADCtC,EAAM,KAAE2T,EAAO,KAAE8B,EAAY,KACvBzV,CACX,EAVmB0V,GAAQ,EACvB/B,EAAwB,GACY8B,EAAe,EAAC,SAW3B,KAAI,gBAA9BD,EAAG,EAAHA,IAAKlT,EAAI,EAAJA,KAGJ/N,EAAKmgB,GAA0BnD,GAAQ5mB,OAAO6M,iBAAgB,sBAK/B3L,MAAMyW,EAAOmT,GAAa,oCACzClhB,EAAGpH,UAAKyG,IAAU,+DAClBW,EAAGpH,KAAKmV,EAAOmT,IAAa,4BAMxC,GANwC,OAFrCroB,EAAI,EAAJA,KAAa4S,EAAM,EAAb3S,OAIJD,GAAQ4S,EAAO+K,WAAa,IAC7B4I,EAAQ/oB,KAAKoV,GACbyV,GAAgBzV,EAAO+K,cAGvB3d,GAAQkV,GAAQmT,GAAY,yBAEP,OAFO,UAEDF,IAAW,iBAA/BC,EAAG,EAAHA,IAAKlT,EAAI,EAAJA,KAAI,WACPA,EAAOmT,EAAY,6BAE1BroB,EAAI,iDAEoC,GAFpC,iCAEbsoB,GAAQ,IAA8B,oBAAbnhB,EAAGohB,OAAqB,yCAAWphB,EAAGohB,MAAM,EAAD,KAAG,QAElB,GAFkB,gBAE7D,IAAVD,GAA0C,oBAAdnhB,EAAG0a,QAAsB,yCAAW1a,EAAG0a,UAAQ,8FAEnF,sBAoDD,cAFC,OAED,eA9CA,WAA8DsC,GAAyB,kBAM1EgE,EAAS,yEASD,OATRA,EAAS,WACd,GAAY,SAARC,EACA,OAAO3D,GAAgB8B,EAASrR,GAAM,GACzC,MACiCuP,GAAgB8B,EAASrR,GAAK,mBAChE,OADCtC,EAAM,KAAE2T,EAAO,KAAE8B,EAAY,KACvBzV,CACX,EAVI5S,GAAO,EAAOsoB,GAAQ,EACtB/B,EAAwB,GACY8B,EAAe,EAAC,SAW3B,KAAI,gBAA9BD,EAAG,EAAHA,IAAKlT,EAAI,EAAJA,KAGJ/N,EAAK,IAAIqhB,GAAmBrE,GAAO,sBAKJ1lB,MAAMyW,EAAOmT,GAAa,oCACzClhB,EAAS,UAAEX,IAAU,+DACrBW,EAAS,KAAE+N,EAAOmT,IAAa,4BAM3C,GAN2C,OAFxCroB,EAAI,EAAJA,KAAa4S,EAAM,EAAb3S,OAIJD,GAAQ4S,EAAO+K,WAAa,IAC7B4I,EAAQ/oB,KAAKohB,GAAahM,IAC1ByV,GAAgBzV,EAAO+K,cAGvB3d,GAAQkV,GAAQmT,GAAY,yBAEP,OAFO,UAEDF,IAAW,iBAA/BC,EAAG,EAAHA,IAAKlT,EAAI,EAAJA,KAAI,WACPA,EAAOmT,EAAY,6BAE1BroB,EAAI,iDAED,GAFC,gCAEbsoB,GAAQ,GAAI,yCAAYnhB,EAAW,OAAE,EAAD,KAAG,sBAE7B,IAAVmhB,EAAe,oCAAWnhB,EAAW,UAAG,gCACnCgd,EAAe,QAAKhd,EAAGshB,cAAa,8FAEjD,0BAGKD,GAAkB,WAOpB,WAAoBrE,GAAyB,UAAzB,KAAAA,SAJZ,KAAAuE,WAA8C,KAC9C,KAAAC,cAAuD,KAI3D,IACI/mB,KAAKgnB,gBAAkBhnB,KAAKinB,OAASjnB,KAAKknB,gB,CAC5C,MAAOvhB,GACL3F,KAAKgnB,eAAmBhnB,KAAKinB,OAASjnB,KAAKmnB,mB,CAEnD,CA8DC,OA9DA,uBAED,WACI,OAAOnnB,KAAKinB,OAASjnB,KAAKinB,OAAe,OAAEG,OAAM,WAAO,IAAK3gB,QAAQN,SACzE,GAAC,yBAED,WACQnG,KAAKinB,QACLjnB,KAAKinB,OAAOJ,cAEhB7mB,KAAKinB,OAASjnB,KAAK8mB,WAAa9mB,KAAK+mB,cAAgB,IACzD,GAAC,iDAED,WAAa/G,GAAY,yEAEf,GADEiH,EAAmBjnB,KAAnBinB,OAAQ1E,EAAWviB,KAAXuiB,OAAM,KACtB0E,GAAM,qCAAWA,EAAe,OAAEjH,GAAQoH,OAAM,WAAO,IAAE,OACzD7E,GAAWA,EAAe,QAAKviB,KAAK6mB,cAAe,gDACtD,mDANA,IAMA,+CAED,WAAWvT,GAAa,0EACP,IAATA,EAAU,yCACH,CAAElV,KAAqB,MAAf4B,KAAKinB,OAAgB5oB,MAAO,IAAIgT,WAAW,KAAI,UAElDrR,KAAKgnB,cAAgC,kBAAT1T,EAAiB,gCACjDtT,KAAKmnB,mBAAmBxN,OAAM,2DAC9B3Z,KAAKqnB,mBAAmB/T,GAAK,4BACqD,QAHxF/I,EAAS,EAAH,IAGJnM,OAASmM,EAAOlM,MAAQ2e,GAAazS,IAAiD,kBACvFA,GAA8C,iDACxD,mDAXA,IAWA,8BAEO,WAWJ,OAVIvK,KAAK8mB,YAAc9mB,KAAK6mB,cACvB7mB,KAAK+mB,gBACN/mB,KAAK+mB,cAAgB/mB,KAAKuiB,OAAkB,YAM5CviB,KAAK+mB,cAAsB,OAAEK,OAAM,WAAO,KAEtCpnB,KAAKinB,OAASjnB,KAAK+mB,aAC/B,GAAC,2BAEO,WAWJ,OAVI/mB,KAAK+mB,eAAiB/mB,KAAK6mB,cAC1B7mB,KAAK8mB,aACN9mB,KAAK8mB,WAAa9mB,KAAKuiB,OAAkB,UAAE,CAAE+E,KAAM,SAMnDtnB,KAAK8mB,WAAmB,OAAEM,OAAM,WAAO,KAEnCpnB,KAAKinB,OAASjnB,KAAK8mB,UAC/B,GAGA,6DACQ,WAAyBxT,GAAY,iFAC5BiU,GAASvnB,KAAKknB,gBAAiB,IAAIjrB,YAAYqX,GAAO,EAAGA,GAAK,wFAC9E,mDAHD,MAGC,EA3EmB,GA8ExB,SACeiU,GAAS,EAAD,uCAevB,cANC,OAMD,eAfA,WAAwBN,EAAkCjW,EAAyBoC,EAAgBE,GAAY,gFACvGF,GAAUE,GAAI,yCACP,CAAElV,MAAM,EAAOC,MAAO,IAAIgT,WAAWL,EAAQ,EAAGsC,KAAO,uBAEpC2T,EAAOtN,KAAK,IAAItI,WAAWL,EAAQoC,EAAQE,EAAOF,IAAQ,OAArE,GAAqE,SAAhFhV,EAAI,EAAJA,KAAMC,EAAK,EAALA,SACR+U,GAAU/U,EAAM0d,YAAczI,IAAUlV,EAAI,kCACjCmpB,GAASN,EAAQ5oB,EAAM2S,OAAQoC,EAAQE,GAAK,0EAEtD,CAAElV,OAAMC,MAAO,IAAIgT,WAAWhT,EAAM2S,OAAQ,EAAGoC,KAAS,6CAClE,sBAOD,IAAMoU,GAAU,SAAmBjM,EAA+Btc,GAC9D,IACIkH,EADAmV,EAAU,SAAC+E,GAAM,OAAKla,EAAQ,CAAClH,EAAOohB,GAAG,EAE7C,MAAO,CAACphB,EAAOqc,EAAS,IAAI7U,SACxB,SAACkJ,GAAC,OAAMxJ,EAAUwJ,IAAM4L,EAAa,KAAEtc,EAAOqc,EAAQ,IAE9D,EAG8B,cAqF7B,OArF6B,eAA9B,WAA+BC,GAA6B,sBAQ/CgL,EAAS,QA2DTkB,EAAO,iEAjDC,OAiDRA,EAAO,SAAgCC,EAAiBnpB,GAE7D,OADAyS,EAAS2T,EAAgB,KAClB,IAAIle,QAAO,6BAAI,WAAON,EAASC,GAAM,qFAChBshB,GAAM,IAA9B,IAAK,EAAL,qBAAgC,yBAApBC,EAAG,KAAE/gB,EAAE,KACf2U,EAAY,IAAEoM,EAAK/gB,EACtB,+BACD,KAIUghB,EAAWrM,EAAwB,UAC9BqM,EAAQ1pB,KAAKqd,EAAQhd,GAChCA,OAAMqG,C,CACR,MAAOe,GAAKpH,EAAMoH,GAAKpH,C,CAAO,QACrB,MAAPA,EAAc6H,EAAO7H,GAAO4H,G,CAC/B,2CACJ,qDAdiB,GAetB,EA5ESogB,EAAS,WACd,GAAY,SAARC,EACA,OAAO3D,GAAgB8B,EAASrR,GAAM,GACzC,MACiCuP,GAAgB8B,EAASrR,GAAK,mBAChE,OADCtC,EAAM,KAAE2T,EAAO,KAAE8B,EAAY,KACvBzV,CACX,EAZI0W,EAAkB,GAClBzoB,EAAmB,QACnBb,GAAO,EAAOG,EAAoB,KACEkoB,EAAe,EACnD9B,EAAwB,GAAE,SAYD,KAAI,OAArB,GAAqB,SAA9B6B,EAAG,EAAHA,IAAKlT,EAAI,EAAJA,MAGHiI,EAAsB,MAAG,CAAF,gBAAW,OAAX,UAAiB,IAAIlK,WAAW,GAAE,2DAI1DqW,EAAO,GAAKF,GAAQjM,EAAQ,OAC5BmM,EAAO,GAAKF,GAAQjM,EAAQ,SAAS,QAKjC,OAFAmM,EAAO,GAAKF,GAAQjM,EAAQ,YAE5B,YACqB9U,QAAQohB,KAAKH,EAAOI,KAAI,SAAC3kB,GAAC,OAAKA,EAAE,EAAE,MAAE,QAA/C,GAA+C,4BAAzDlE,EAAK,KAAEV,EAAG,KAGG,UAAVU,EAAiB,qDAqBrB,IApBMb,EAAiB,QAAVa,KAEJlC,SAASuW,EAAOmT,IAGjBzV,EAASgM,GAAazB,EAAa,KAAEjI,EAAOmT,KAKjC1K,WAAczI,EAAOmT,IAC5BzV,EAASgM,GAAazB,EAAa,UAAE3W,KARzCoM,EAASgM,GAAazB,EAAa,UAAE3W,IAYrCoM,EAAO+K,WAAa,IACpB4I,EAAQ/oB,KAAKoV,GACbyV,GAAgBzV,EAAO+K,eAI3B3d,GAAQkV,GAAQmT,GAAY,yBAEP,OAFO,UAEDF,IAAW,iBAA/BC,EAAG,EAAHA,IAAKlT,EAAI,EAAJA,KAAI,WACPA,EAAOmT,EAAY,6BAE1BroB,EAAI,sDAERqpB,EAAQC,EAAkB,UAAVzoB,EAAoBV,EAAM,OAAK,2FAqB5D,yBChYc,SAASwpB,GAAgB7gB,EAAKxG,EAAKrC,GAYhD,OAXAqC,EAAM,EAAcA,MACTwG,EACTzL,OAAO+E,eAAe0G,EAAKxG,EAAK,CAC9BrC,MAAOA,EACPoC,YAAY,EACZG,cAAc,EACdU,UAAU,IAGZ4F,EAAIxG,GAAOrC,EAEN6I,CACT,CCbA,SAAS,GAAQ+F,EAAQ+a,GACvB,IAAIzrB,EAAOd,OAAOc,KAAK0Q,GACvB,GAAIxR,OAAOwsB,sBAAuB,CAChC,IAAIC,EAAUzsB,OAAOwsB,sBAAsBhb,GAC3C+a,IAAmBE,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAO3sB,OAAO+F,yBAAyByL,EAAQmb,GAAK3nB,UACtD,KAAKlE,EAAKX,KAAKkF,MAAMvE,EAAM2rB,EAC7B,CACA,OAAO3rB,CACT,CACe,SAAS8rB,GAAevmB,GACrC,IAAK,IAAItE,EAAI,EAAGA,EAAIuD,UAAUzC,OAAQd,IAAK,CACzC,IAAI+kB,EAAS,MAAQxhB,UAAUvD,GAAKuD,UAAUvD,GAAK,CAAC,EACpDA,EAAI,EAAI,GAAQ/B,OAAO8mB,IAAS,GAAIvY,SAAQ,SAAUtJ,GACpD,GAAeoB,EAAQpB,EAAK6hB,EAAO7hB,GACrC,IAAKjF,OAAO6sB,0BAA4B7sB,OAAO8sB,iBAAiBzmB,EAAQrG,OAAO6sB,0BAA0B/F,IAAW,GAAQ9mB,OAAO8mB,IAASvY,SAAQ,SAAUtJ,GAC5JjF,OAAO+E,eAAesB,EAAQpB,EAAKjF,OAAO+F,yBAAyB+gB,EAAQ7hB,GAC7E,GACF,CACA,OAAOoB,CACT,CCpBe,SAAS,KActB,OAZE,GADqB,qBAAZgc,SAA2BA,QAAQ3e,IACrC2e,QAAQ3e,IAAIqe,OAEZ,SAAc1b,EAAQ0mB,EAAUC,GACrC,IAAIC,ECLK,SAAwBzb,EAAQub,GAC7C,MAAQ/sB,OAAOF,UAAUQ,eAAemC,KAAK+O,EAAQub,IAEpC,QADfvb,EAAS,GAAeA,MAG1B,OAAOA,CACT,CDDiB,CAAcnL,EAAQ0mB,GACjC,GAAKE,EAAL,CACA,IAAItgB,EAAO3M,OAAO+F,yBAAyBknB,EAAMF,GACjD,OAAIpgB,EAAKjJ,IACAiJ,EAAKjJ,IAAIjB,KAAK6C,UAAUzC,OAAS,EAAIwD,EAAS2mB,GAEhDrgB,EAAK/J,KALK,CAMnB,EAEK,GAAKyC,MAAMd,KAAMe,UAC1B,CE+BO,ICvCU4nB,GAAiBC,GAANC,GAAPC,GAAJH,GCJAA,GF2CKI,GAAc,6BCvCnBJ,WAAG,IAACG,GAAAH,sBAAM,IAACE,GAAAC,oBAAK,IAC7B,SAAYE,GAIRA,eAKAA,eAKAA,eAKAA,cACH,CApBD,EAD8BJ,GAAAC,wBAAO,KACzBD,qCAAe,KA0B/B,SAAiBD,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,IAC9B,SAAYK,GACRA,uBACAA,oBACH,CAHD,CAAYL,0BAAS,IAIxB,CALiC,CAAAC,sBAAO,IAKxC,CAL2B,CAAAC,kBAAK,IAKhC,CALoB,CAAAH,oBAAM,IAK1B,CALD,CAAiBA,QAAG,KAUpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,IAC9B,SAAYM,GACRA,mBACAA,uBACAA,sBACH,CAJD,CAAYN,0BAAS,IAKxB,CANiC,CAAAC,sBAAO,IAMxC,CAN2B,CAAAC,kBAAK,IAMhC,CANoB,CAAAH,oBAAM,IAM1B,CAND,CAAiBA,QAAG,KAWpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,IAC9B,SAAYO,GACRA,iBACAA,gCACH,CAHD,CAAYP,wBAAQ,IAIvB,CALiC,CAAAC,sBAAO,IAKxC,CAL2B,CAAAC,kBAAK,IAKhC,CALoB,CAAAH,oBAAM,IAK1B,CALD,CAAiBA,QAAG,KAUpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,IAC9B,SAAYQ,GACRA,uBACAA,iCACAA,iCACAA,8BACH,CALD,CAAYR,wBAAQ,IAMvB,CAPiC,CAAAC,sBAAO,IAOxC,CAP2B,CAAAC,kBAAK,IAOhC,CAPoB,CAAAH,oBAAM,IAO1B,CAPD,CAAiBA,QAAG,KAYpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,IAC9B,SAAYS,GACRA,+BACAA,0BACH,CAHD,CAAYT,gCAAY,IAI3B,CALiC,CAAAC,sBAAO,IAKxC,CAL2B,CAAAC,kBAAK,IAKhC,CALoB,CAAAH,oBAAM,IAK1B,CALD,CAAiBA,QAAG,KAcpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,IAC9B,SAAYU,GACRA,mBACAA,mBACAA,iBACAA,qCACAA,uBACAA,mBACAA,mBACAA,yBACAA,mBACAA,mBACAA,8BACAA,4BACAA,oBACAA,0BACAA,sBACAA,0CACAA,sCACAA,kBACAA,4BACAA,kCACAA,8BACAA,6BACH,CAvBD,CAAYV,gBAAI,IAwBnB,CAzBiC,CAAAC,sBAAO,IAyBxC,CAzB2B,CAAAC,kBAAK,IAyBhC,CAzBoB,CAAAH,oBAAM,IAyB1B,CAzBD,CAAiBA,QAAG,KAiCpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,IAC9B,SAAYW,GACRA,uBACAA,gBACH,CAHD,CAAYX,4BAAU,IAIzB,CALiC,CAAAC,sBAAO,IAKxC,CAL2B,CAAAC,kBAAK,IAKhC,CALoB,CAAAH,oBAAM,IAK1B,CALD,CAAiBA,QAAG,KAYpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBY,EAAI,WAAjB,uBACI,KAAAxX,GAAoC,KAEpC,KAAA0G,OAAiB,CAyCrB,CADK,OAvCD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,IAEA,4BAKA,SAAqBgS,EAA4B9K,GAC7C,OAAQA,GAAO,IAAIsiB,GAAMC,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACjF,GAEA,uBAGA,SAAiB0X,GACbA,EAAQhU,YAAY,EACxB,GAEA,qBAIA,SAAegU,GAEX,OADaA,EAAQ9T,WAEzB,GAAC,wBAED,SAAkB8T,GAEd,OADAF,EAAKG,UAAUD,GACRF,EAAKI,QAAQF,EACxB,KAAC,EA3CY,GAAJd,OAAI,CA6CpB,CA9CiC,CAAAC,sBAAO,IA8CxC,CA9C2B,CAAAC,kBAAK,IA8ChC,CA9CoB,CAAAH,oBAAM,IA8C1B,CA9CD,CAAiBA,QAAG,KAsDpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBiB,EAAO,WAApB,uBACI,KAAA7X,GAAoC,KAEpC,KAAA0G,OAAiB,CAyCrB,CADK,OAvCD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,IAEA,+BAKA,SAAwBgS,EAA4B9K,GAChD,OAAQA,GAAO,IAAI2iB,GAASJ,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACpF,GAEA,0BAGA,SAAoB0X,GAChBA,EAAQhU,YAAY,EACxB,GAEA,wBAIA,SAAkBgU,GAEd,OADaA,EAAQ9T,WAEzB,GAAC,2BAED,SAAqB8T,GAEjB,OADAG,EAAQC,aAAaJ,GACdG,EAAQE,WAAWL,EAC9B,KAAC,EA3Ce,GAAPd,UAAO,CA6CvB,CA9CiC,CAAAC,sBAAO,IA8CxC,CA9C2B,CAAAC,kBAAK,IA8ChC,CA9CoB,CAAAH,oBAAM,IA8C1B,CA9CD,CAAiBA,QAAG,KAkDpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBoB,EAAI,WAAjB,uBACI,KAAAhY,GAAoC,KAEpC,KAAA0G,OAAiB,CAyCrB,CADK,OAvCD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,IAEA,4BAKA,SAAqBgS,EAA4B9K,GAC7C,OAAQA,GAAO,IAAI8iB,GAAMP,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACjF,GAEA,uBAGA,SAAiB0X,GACbA,EAAQhU,YAAY,EACxB,GAEA,qBAIA,SAAegU,GAEX,OADaA,EAAQ9T,WAEzB,GAAC,wBAED,SAAkB8T,GAEd,OADAM,EAAKC,UAAUP,GACRM,EAAKE,QAAQR,EACxB,KAAC,EA3CY,GAAJd,OAAI,CA6CpB,CA9CiC,CAAAC,sBAAO,IA8CxC,CA9C2B,CAAAC,kBAAK,IA8ChC,CA9CoB,CAAAH,oBAAM,IA8C1B,CA9CD,CAAiBA,QAAG,KAqDpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBuB,EAAS,WAAtB,uBACI,KAAAnY,GAAoC,KAEpC,KAAA0G,OAAiB,CAyCrB,CADK,OAvCD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,IAEA,iCAKA,SAA0BgS,EAA4B9K,GAClD,OAAQA,GAAO,IAAIijB,GAAWV,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACtF,GAEA,4BAGA,SAAsB0X,GAClBA,EAAQhU,YAAY,EACxB,GAEA,0BAIA,SAAoBgU,GAEhB,OADaA,EAAQ9T,WAEzB,GAAC,6BAED,SAAuB8T,GAEnB,OADAS,EAAUC,eAAeV,GAClBS,EAAUE,aAAaX,EAClC,KAAC,EA3CiB,GAATd,YAAS,CA6CzB,CA9CiC,CAAAC,sBAAO,IA8CxC,CA9C2B,CAAAC,kBAAK,IA8ChC,CA9CoB,CAAAH,oBAAM,IA8C1B,CA9CD,CAAiBA,QAAG,KAkDpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxB0B,EAAa,WAA1B,uBACI,KAAAtY,GAAoC,KAEpC,KAAA0G,OAAiB,CA4DrB,CADK,OA1DD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,sBAcA,WACI,IAAIoT,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAI+E,UAAU/W,KAAK0Y,OAAStF,GAAU,CAC/D,IAEA,qCAdA,SAA8BpB,EAA4B9K,GACtD,OAAQA,GAAO,IAAIojB,GAAeb,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EAC1F,GAAC,gCAeD,SAA0B0X,GACtBA,EAAQhU,YAAY,EACxB,GAEA,yBAIA,SAAmBgU,EAA8Ba,GAC7Cb,EAAQ5U,cAAc,EAAGyV,EAAU,EACvC,GAEA,8BAIA,SAAwBb,GAEpB,OADaA,EAAQ9T,WAEzB,GAAC,iCAED,SAA2B8T,EAA8Ba,GAGrD,OAFAD,EAAcE,mBAAmBd,GACjCY,EAAcG,YAAYf,EAASa,GAC5BD,EAAcI,iBAAiBhB,EAC1C,KAAC,EA9DqB,GAAbd,gBAAa,CAgE7B,CAjEiC,CAAAC,sBAAO,IAiExC,CAjE2B,CAAAC,kBAAK,IAiEhC,CAjEoB,CAAAH,oBAAM,IAiE1B,CAjED,CAAiBA,QAAG,KA8FpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBrkB,EAAG,WAAhB,uBACI,KAAAyN,GAAoC,KAEpC,KAAA0G,OAAiB,CA4DrB,CADK,OA1DD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,wBAcA,WACI,IAAIoT,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,QAAOtF,KAAWpT,KAAKgS,GAAI2F,SAAS3X,KAAK0Y,OAAStF,EACtD,IAEA,2BAdA,SAAoBpB,EAA4B9K,GAC5C,OAAQA,GAAO,IAAI3C,GAAKklB,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EAChF,GAAC,sBAeD,SAAgB0X,GACZA,EAAQhU,YAAY,EACxB,GAEA,2BAIA,SAAqBgU,EAA8BiB,GAC/CjB,EAAQjV,aAAa,GAAIkW,EAAY,EACzC,GAEA,oBAIA,SAAcjB,GAEV,OADaA,EAAQ9T,WAEzB,GAAC,uBAED,SAAiB8T,EAA8BiB,GAG3C,OAFApmB,EAAIqmB,SAASlB,GACbnlB,EAAIsmB,cAAcnB,EAASiB,GACpBpmB,EAAIumB,OAAOpB,EACtB,KAAC,EA9DW,GAAHd,MAAG,CAgEnB,CAjEiC,CAAAC,sBAAO,IAiExC,CAjE2B,CAAAC,kBAAK,IAiEhC,CAjEoB,CAAAH,oBAAM,IAiE1B,CAjED,CAAiBA,QAAG,KA0EpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBmC,EAAK,WAAlB,uBACI,KAAA/Y,GAAoC,KAEpC,KAAA0G,OAAiB,CAiHrB,CADK,OA/GD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,kBAYA,WACI,IAAIoT,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAAkBpT,KAAKgS,GAAIoE,UAAUpW,KAAK0Y,OAAStF,GAAWuV,EAAIG,OAAOD,MAAMD,QAAQK,UAAU+B,MAC5G,GAEA,qBAIA,SAAQzH,GACJ,IAAInQ,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAI+E,UAAU/W,KAAKgS,GAAImH,SAASnZ,KAAK0Y,OAAStF,GAAkB,EAARmQ,GAAa,CAC9F,GAEA,2BAGA,WACI,IAAInQ,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAIoH,aAAapZ,KAAK0Y,OAAStF,GAAU,CAClE,GAEA,0BAGA,WACI,IAAIA,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAAS,IAAIvC,WAAW7Q,KAAKgS,GAAIiB,QAAQjC,OAAQhR,KAAKgS,GAAIiB,QAAQ6I,WAAa9b,KAAKgS,GAAImH,SAASnZ,KAAK0Y,OAAStF,GAASpT,KAAKgS,GAAIoH,aAAapZ,KAAK0Y,OAAStF,IAAW,IAClL,IAEA,6BArCA,SAAsBpB,EAA4B9K,GAC9C,OAAQA,GAAO,IAAI6jB,GAAOtB,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EAClF,GAAC,wBAsCD,SAAkB0X,GACdA,EAAQhU,YAAY,EACxB,GAEA,qBAIA,SAAegU,EAA8BpC,GACzCoC,EAAQ7U,cAAc,EAAGyS,EAAMqB,EAAIG,OAAOD,MAAMD,QAAQK,UAAU+B,OACtE,GAEA,wBAIA,SAAkBtB,EAA8BuB,GAC5CvB,EAAQxU,eAAe,EAAG+V,EAAe,EAC7C,GAEA,iCAKA,SAA2BvB,EAA8BnqB,GACrDmqB,EAAQ1S,YAAY,EAAGzX,EAAKjB,OAAQ,GACpC,IAAK,IAAId,EAAI+B,EAAKjB,OAAS,EAAGd,GAAK,EAAGA,IAClCksB,EAAQrV,SAAS9U,EAAK/B,IAE1B,OAAOksB,EAAQtS,WACnB,GAEA,gCAIA,SAA0BsS,EAA8BwB,GACpDxB,EAAQ1S,YAAY,EAAGkU,EAAU,EACrC,GAEA,sBAIA,SAAgBxB,GAEZ,OADaA,EAAQ9T,WAEzB,GAAC,yBAED,SAAmB8T,EAA8BpC,EAA0C2D,GAIvF,OAHAF,EAAMI,WAAWzB,GACjBqB,EAAMK,QAAQ1B,EAASpC,GACvByD,EAAMM,WAAW3B,EAASuB,GACnBF,EAAMO,SAAS5B,EAC1B,KAAC,EAnHa,GAALd,QAAK,CAqHrB,CAtHiC,CAAAC,sBAAO,IAsHxC,CAtH2B,CAAAC,kBAAK,IAsHhC,CAtHoB,CAAAH,oBAAM,IAsH1B,CAtHD,CAAiBA,QAAG,KA0HpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxB2C,EAAG,WAAhB,uBACI,KAAAvZ,GAAoC,KAEpC,KAAA0G,OAAiB,CA2ErB,CADK,OAzED,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,sBAYA,WACI,IAAIoT,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAI+E,UAAU/W,KAAK0Y,OAAStF,GAAU,CAC/D,GAEA,sBAGA,WACI,IAAIA,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,QAAOtF,KAAWpT,KAAKgS,GAAI2F,SAAS3X,KAAK0Y,OAAStF,EACtD,IAEA,2BApBA,SAAoBpB,EAA4B9K,GAC5C,OAAQA,GAAO,IAAIqkB,GAAK9B,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EAChF,GAAC,sBAqBD,SAAgB0X,GACZA,EAAQhU,YAAY,EACxB,GAEA,yBAIA,SAAmBgU,EAA8B8B,GAC7C9B,EAAQ5U,cAAc,EAAG0W,EAAU,EACvC,GAEA,yBAIA,SAAmB9B,EAA8B+B,GAC7C/B,EAAQjV,aAAa,GAAIgX,EAAU,EACvC,GAEA,oBAIA,SAAc/B,GAEV,OADaA,EAAQ9T,WAEzB,GAAC,uBAED,SAAiB8T,EAA8B8B,EAAkBC,GAI7D,OAHAF,EAAIG,SAAShC,GACb6B,EAAII,YAAYjC,EAAS8B,GACzBD,EAAIK,YAAYlC,EAAS+B,GAClBF,EAAIM,OAAOnC,EACtB,KAAC,EA7EW,GAAHd,MAAG,CA+EnB,CAhFiC,CAAAC,sBAAO,IAgFxC,CAhF2B,CAAAC,kBAAK,IAgFhC,CAhFoB,CAAAH,oBAAM,IAgF1B,CAhFD,CAAiBA,QAAG,KAoFpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBkD,EAAa,WAA1B,uBACI,KAAA9Z,GAAoC,KAEpC,KAAA0G,OAAiB,CA0DrB,CADK,OAxDD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,uBAYA,WACI,IAAIoT,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAAkBpT,KAAKgS,GAAIoE,UAAUpW,KAAK0Y,OAAStF,GAAWuV,EAAIG,OAAOD,MAAMD,QAAQM,UAAU6C,IAC5G,IAEA,qCAZA,SAA8B/Z,EAA4B9K,GACtD,OAAQA,GAAO,IAAI4kB,GAAerC,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EAC1F,GAAC,gCAaD,SAA0B0X,GACtBA,EAAQhU,YAAY,EACxB,GAEA,0BAIA,SAAoBgU,EAA8BsC,GAC9CtC,EAAQ7U,cAAc,EAAGmX,EAAWrD,EAAIG,OAAOD,MAAMD,QAAQM,UAAU6C,KAC3E,GAEA,8BAIA,SAAwBrC,GAEpB,OADaA,EAAQ9T,WAEzB,GAAC,iCAED,SAA2B8T,EAA8BsC,GAGrD,OAFAF,EAAcG,mBAAmBvC,GACjCoC,EAAcI,aAAaxC,EAASsC,GAC7BF,EAAcK,iBAAiBzC,EAC1C,KAAC,EA5DqB,GAAbd,gBAAa,CA8D7B,CA/DiC,CAAAC,sBAAO,IA+DxC,CA/D2B,CAAAC,kBAAK,IA+DhC,CA/DoB,CAAAH,oBAAM,IA+D1B,CA/DD,CAAiBA,QAAG,KAqEpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBwD,EAAI,WAAjB,uBACI,KAAApa,GAAoC,KAEpC,KAAA0G,OAAiB,CAyCrB,CADK,OAvCD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,IAEA,4BAKA,SAAqBgS,EAA4B9K,GAC7C,OAAQA,GAAO,IAAIklB,GAAM3C,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACjF,GAEA,uBAGA,SAAiB0X,GACbA,EAAQhU,YAAY,EACxB,GAEA,qBAIA,SAAegU,GAEX,OADaA,EAAQ9T,WAEzB,GAAC,wBAED,SAAkB8T,GAEd,OADA0C,EAAKC,UAAU3C,GACR0C,EAAKE,QAAQ5C,EACxB,KAAC,EA3CY,GAAJd,OAAI,CA6CpB,CA9CiC,CAAAC,sBAAO,IA8CxC,CA9C2B,CAAAC,kBAAK,IA8ChC,CA9CoB,CAAAH,oBAAM,IA8C1B,CA9CD,CAAiBA,QAAG,KAoDpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxB2D,EAAM,WAAnB,uBACI,KAAAva,GAAoC,KAEpC,KAAA0G,OAAiB,CAyCrB,CADK,OAvCD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,IAEA,8BAKA,SAAuBgS,EAA4B9K,GAC/C,OAAQA,GAAO,IAAIqlB,GAAQ9C,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACnF,GAEA,yBAGA,SAAmB0X,GACfA,EAAQhU,YAAY,EACxB,GAEA,uBAIA,SAAiBgU,GAEb,OADaA,EAAQ9T,WAEzB,GAAC,0BAED,SAAoB8T,GAEhB,OADA6C,EAAOC,YAAY9C,GACZ6C,EAAOE,UAAU/C,EAC5B,KAAC,EA3Cc,GAANd,SAAM,CA6CtB,CA9CiC,CAAAC,sBAAO,IA8CxC,CA9C2B,CAAAC,kBAAK,IA8ChC,CA9CoB,CAAAH,oBAAM,IA8C1B,CA9CD,CAAiBA,QAAG,KAqDpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxB8D,EAAS,WAAtB,uBACI,KAAA1a,GAAoC,KAEpC,KAAA0G,OAAiB,CAyCrB,CADK,OAvCD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,IAEA,iCAKA,SAA0BgS,EAA4B9K,GAClD,OAAQA,GAAO,IAAIwlB,GAAWjD,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACtF,GAEA,4BAGA,SAAsB0X,GAClBA,EAAQhU,YAAY,EACxB,GAEA,0BAIA,SAAoBgU,GAEhB,OADaA,EAAQ9T,WAEzB,GAAC,6BAED,SAAuB8T,GAEnB,OADAgD,EAAUC,eAAejD,GAClBgD,EAAUE,aAAalD,EAClC,KAAC,EA3CiB,GAATd,YAAS,CA6CzB,CA9CiC,CAAAC,sBAAO,IA8CxC,CA9C2B,CAAAC,kBAAK,IA8ChC,CA9CoB,CAAAH,oBAAM,IA8C1B,CA9CD,CAAiBA,QAAG,KAqDpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBiE,EAAW,WAAxB,uBACI,KAAA7a,GAAoC,KAEpC,KAAA0G,OAAiB,CAyCrB,CADK,OAvCD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,IAEA,mCAKA,SAA4BgS,EAA4B9K,GACpD,OAAQA,GAAO,IAAI2lB,GAAapD,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACxF,GAEA,8BAGA,SAAwB0X,GACpBA,EAAQhU,YAAY,EACxB,GAEA,4BAIA,SAAsBgU,GAElB,OADaA,EAAQ9T,WAEzB,GAAC,+BAED,SAAyB8T,GAErB,OADAmD,EAAYC,iBAAiBpD,GACtBmD,EAAYE,eAAerD,EACtC,KAAC,EA3CmB,GAAXd,cAAW,CA6C3B,CA9CiC,CAAAC,sBAAO,IA8CxC,CA9C2B,CAAAC,kBAAK,IA8ChC,CA9CoB,CAAAH,oBAAM,IA8C1B,CA9CD,CAAiBA,QAAG,KAkDpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBoE,EAAe,WAA5B,uBACI,KAAAhb,GAAoC,KAEpC,KAAA0G,OAAiB,CA4DrB,CADK,OA1DD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,uBAcA,WACI,IAAIoT,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAI+E,UAAU/W,KAAK0Y,OAAStF,GAAU,CAC/D,IAEA,uCAdA,SAAgCpB,EAA4B9K,GACxD,OAAQA,GAAO,IAAI8lB,GAAiBvD,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EAC5F,GAAC,kCAeD,SAA4B0X,GACxBA,EAAQhU,YAAY,EACxB,GAEA,0BAIA,SAAoBgU,EAA8BuD,GAC9CvD,EAAQ5U,cAAc,EAAGmY,EAAW,EACxC,GAEA,gCAIA,SAA0BvD,GAEtB,OADaA,EAAQ9T,WAEzB,GAAC,mCAED,SAA6B8T,EAA8BuD,GAGvD,OAFAD,EAAgBE,qBAAqBxD,GACrCsD,EAAgBG,aAAazD,EAASuD,GAC/BD,EAAgBI,mBAAmB1D,EAC9C,KAAC,EA9DuB,GAAfd,kBAAe,CAgE/B,CAjEiC,CAAAC,sBAAO,IAiExC,CAjE2B,CAAAC,kBAAK,IAiEhC,CAjEoB,CAAAH,oBAAM,IAiE1B,CAjED,CAAiBA,QAAG,KAqEpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxByE,EAAI,WAAjB,uBACI,KAAArb,GAAoC,KAEpC,KAAA0G,OAAiB,CAyCrB,CADK,OAvCD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,IAEA,4BAKA,SAAqBgS,EAA4B9K,GAC7C,OAAQA,GAAO,IAAImmB,GAAM5D,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACjF,GAEA,uBAGA,SAAiB0X,GACbA,EAAQhU,YAAY,EACxB,GAEA,qBAIA,SAAegU,GAEX,OADaA,EAAQ9T,WAEzB,GAAC,wBAED,SAAkB8T,GAEd,OADA2D,EAAKC,UAAU5D,GACR2D,EAAKE,QAAQ7D,EACxB,KAAC,EA3CY,GAAJd,OAAI,CA6CpB,CA9CiC,CAAAC,sBAAO,IA8CxC,CA9C2B,CAAAC,kBAAK,IA8ChC,CA9CoB,CAAAH,oBAAM,IA8C1B,CA9CD,CAAiBA,QAAG,KAkDpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxB4E,EAAO,WAApB,uBACI,KAAAxb,GAAoC,KAEpC,KAAA0G,OAAiB,CA+ErB,CADK,OA7ED,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,uBAcA,WACI,IAAIoT,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAI+E,UAAU/W,KAAK0Y,OAAStF,GAAU,CAC/D,GAEA,mBAKA,WACI,IAAIA,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAI+E,UAAU/W,KAAK0Y,OAAStF,GAAU,CAC/D,IAEA,+BAxBA,SAAwBpB,EAA4B9K,GAChD,OAAQA,GAAO,IAAIsmB,GAAS/D,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACpF,GAAC,0BAyBD,SAAoB0X,GAChBA,EAAQhU,YAAY,EACxB,GAEA,0BAIA,SAAoBgU,EAA8BsC,GAC9CtC,EAAQ5U,cAAc,EAAGkX,EAAW,EACxC,GAEA,sBAIA,SAAgBtC,EAA8B+D,GAC1C/D,EAAQ5U,cAAc,EAAG2Y,EAAO,EACpC,GAEA,wBAIA,SAAkB/D,GAEd,OADaA,EAAQ9T,WAEzB,GAAC,2BAED,SAAqB8T,EAA8BsC,EAAmByB,GAIlE,OAHAD,EAAQE,aAAahE,GACrB8D,EAAQtB,aAAaxC,EAASsC,GAC9BwB,EAAQG,SAASjE,EAAS+D,GACnBD,EAAQI,WAAWlE,EAC9B,KAAC,EAjFe,GAAPd,UAAO,CAmFvB,CApFiC,CAAAC,sBAAO,IAoFxC,CApF2B,CAAAC,kBAAK,IAoFhC,CApFoB,CAAAH,oBAAM,IAoF1B,CApFD,CAAiBA,QAAG,KA+FpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBtoB,EAAI,WAAjB,uBACI,KAAA0R,GAAoC,KAEpC,KAAA0G,OAAiB,CA0DrB,CADK,OAxDD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,kBAYA,WACI,IAAIoT,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAAkBpT,KAAKgS,GAAIoE,UAAUpW,KAAK0Y,OAAStF,GAAWuV,EAAIG,OAAOD,MAAMD,QAAQO,SAAS0E,WAC3G,IAEA,4BAZA,SAAqB7b,EAA4B9K,GAC7C,OAAQA,GAAO,IAAI5G,GAAMmpB,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACjF,GAAC,uBAaD,SAAiB0X,GACbA,EAAQhU,YAAY,EACxB,GAEA,qBAIA,SAAegU,EAA8BoE,GACzCpE,EAAQ7U,cAAc,EAAGiZ,EAAMnF,EAAIG,OAAOD,MAAMD,QAAQO,SAAS0E,YACrE,GAEA,qBAIA,SAAenE,GAEX,OADaA,EAAQ9T,WAEzB,GAAC,wBAED,SAAkB8T,EAA8BoE,GAG5C,OAFAxtB,EAAKytB,UAAUrE,GACfppB,EAAK0tB,QAAQtE,EAASoE,GACfxtB,EAAK2tB,QAAQvE,EACxB,KAAC,EA5DY,GAAJd,OAAI,CA8DpB,CA/DiC,CAAAC,sBAAO,IA+DxC,CA/D2B,CAAAC,kBAAK,IA+DhC,CA/DoB,CAAAH,oBAAM,IA+D1B,CA/DD,CAAiBA,QAAG,KAuEpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBsF,EAAI,WAAjB,uBACI,KAAAlc,GAAoC,KAEpC,KAAA0G,OAAiB,CA2ErB,CADK,OAzED,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,kBAYA,WACI,IAAIoT,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAAkBpT,KAAKgS,GAAIoE,UAAUpW,KAAK0Y,OAAStF,GAAWuV,EAAIG,OAAOD,MAAMD,QAAQQ,SAASyE,WAC3G,GAEA,sBAGA,WACI,IAAIza,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAI+E,UAAU/W,KAAK0Y,OAAStF,GAAU,EAC/D,IAEA,4BApBA,SAAqBpB,EAA4B9K,GAC7C,OAAQA,GAAO,IAAIgnB,GAAMzE,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACjF,GAAC,uBAqBD,SAAiB0X,GACbA,EAAQhU,YAAY,EACxB,GAEA,qBAIA,SAAegU,EAA8BoE,GACzCpE,EAAQ7U,cAAc,EAAGiZ,EAAMnF,EAAIG,OAAOD,MAAMD,QAAQQ,SAASyE,YACrE,GAEA,yBAIA,SAAmBnE,EAA8B8B,GAC7C9B,EAAQ5U,cAAc,EAAG0W,EAAU,GACvC,GAEA,qBAIA,SAAe9B,GAEX,OADaA,EAAQ9T,WAEzB,GAAC,wBAED,SAAkB8T,EAA8BoE,EAAyCtC,GAIrF,OAHA0C,EAAKC,UAAUzE,GACfwE,EAAKF,QAAQtE,EAASoE,GACtBI,EAAKvC,YAAYjC,EAAS8B,GACnB0C,EAAKE,QAAQ1E,EACxB,KAAC,EA7EY,GAAJd,OAAI,CA+EpB,CAhFiC,CAAAC,sBAAO,IAgFxC,CAhF2B,CAAAC,kBAAK,IAgFhC,CAhFoB,CAAAH,oBAAM,IAgF1B,CAhFD,CAAiBA,QAAG,KA2FpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxByF,EAAS,WAAtB,uBACI,KAAArc,GAAoC,KAEpC,KAAA0G,OAAiB,CAmGrB,CADK,OAjGD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,kBAYA,WACI,IAAIoT,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAAkBpT,KAAKgS,GAAIoE,UAAUpW,KAAK0Y,OAAStF,GAAWuV,EAAIG,OAAOD,MAAMD,QAAQQ,SAASkF,MAC3G,GAAC,sBA6BD,SAASC,GACL,IAAInb,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAI8G,SAAS9Y,KAAK0Y,OAAStF,EAAQmb,GAAoB,IAChF,IAEA,iCA5CA,SAA0Bvc,EAA4B9K,GAClD,OAAQA,GAAO,IAAImnB,GAAW5E,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACtF,GAAC,4BA6CD,SAAsB0X,GAClBA,EAAQhU,YAAY,EACxB,GAEA,qBAIA,SAAegU,EAA8BoE,GACzCpE,EAAQ7U,cAAc,EAAGiZ,EAAMnF,EAAIG,OAAOD,MAAMD,QAAQQ,SAASkF,OACrE,GAEA,yBAIA,SAAmB5E,EAA8B8E,GAC7C9E,EAAQxU,eAAe,EAAGsZ,EAAgB,EAC9C,GAEA,0BAIA,SAAoB9E,GAEhB,OADaA,EAAQ9T,WAEzB,GAAC,6BAED,SAAuB8T,EAA8BoE,EAAyCU,GAI1F,OAHAH,EAAUI,eAAe/E,GACzB2E,EAAUL,QAAQtE,EAASoE,GAC3BO,EAAUK,YAAYhF,EAAS8E,GACxBH,EAAUM,aAAajF,EAClC,KAAC,EArGiB,GAATd,YAAS,CAuGzB,CAxGiC,CAAAC,sBAAO,IAwGxC,CAxG2B,CAAAC,kBAAK,IAwGhC,CAxGoB,CAAAH,oBAAM,IAwG1B,CAxGD,CAAiBA,QAAG,KA4GpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBgG,EAAQ,WAArB,uBACI,KAAA5c,GAAoC,KAEpC,KAAA0G,OAAiB,CA0DrB,CADK,OAxDD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,kBAYA,WACI,IAAIoT,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAAkBpT,KAAKgS,GAAIoE,UAAUpW,KAAK0Y,OAAStF,GAAWuV,EAAIG,OAAOD,MAAMD,QAAQS,aAAawF,UAC/G,IAEA,gCAZA,SAAyB7c,EAA4B9K,GACjD,OAAQA,GAAO,IAAI0nB,GAAUnF,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACrF,GAAC,2BAaD,SAAqB0X,GACjBA,EAAQhU,YAAY,EACxB,GAEA,qBAIA,SAAegU,EAA8BoE,GACzCpE,EAAQ7U,cAAc,EAAGiZ,EAAMnF,EAAIG,OAAOD,MAAMD,QAAQS,aAAawF,WACzE,GAEA,yBAIA,SAAmBnF,GAEf,OADaA,EAAQ9T,WAEzB,GAAC,4BAED,SAAsB8T,EAA8BoE,GAGhD,OAFAc,EAASE,cAAcpF,GACvBkF,EAASZ,QAAQtE,EAASoE,GACnBc,EAASG,YAAYrF,EAChC,KAAC,EA5DgB,GAARd,WAAQ,CA8DxB,CA/DiC,CAAAC,sBAAO,IA+DxC,CA/D2B,CAAAC,kBAAK,IA+DhC,CA/DoB,CAAAH,oBAAM,IA+D1B,CA/DD,CAAiBA,QAAG,KAmEpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBoG,EAAQ,WAArB,uBACI,KAAAhd,GAAoC,KAEpC,KAAA0G,OAAiB,CA0DrB,CADK,OAxDD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,kBAYA,WACI,IAAIoT,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAAkBpT,KAAKgS,GAAIoE,UAAUpW,KAAK0Y,OAAStF,GAAWuV,EAAIG,OAAOD,MAAMD,QAAQQ,SAASyE,WAC3G,IAEA,gCAZA,SAAyB7b,EAA4B9K,GACjD,OAAQA,GAAO,IAAI8nB,GAAUvF,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACrF,GAAC,2BAaD,SAAqB0X,GACjBA,EAAQhU,YAAY,EACxB,GAEA,qBAIA,SAAegU,EAA8BoE,GACzCpE,EAAQ7U,cAAc,EAAGiZ,EAAMnF,EAAIG,OAAOD,MAAMD,QAAQQ,SAASyE,YACrE,GAEA,yBAIA,SAAmBnE,GAEf,OADaA,EAAQ9T,WAEzB,GAAC,4BAED,SAAsB8T,EAA8BoE,GAGhD,OAFAkB,EAASC,cAAcvF,GACvBsF,EAAShB,QAAQtE,EAASoE,GACnBkB,EAASE,YAAYxF,EAChC,KAAC,EA5DgB,GAARd,WAAQ,CA8DxB,CA/DiC,CAAAC,sBAAO,IA+DxC,CA/D2B,CAAAC,kBAAK,IA+DhC,CA/DoB,CAAAH,oBAAM,IA+D1B,CA/DD,CAAiBA,QAAG,KAuEpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBuG,EAAQ,WAArB,uBACI,KAAAnd,GAAoC,KAEpC,KAAA0G,OAAiB,CAiFrB,CADK,OA/ED,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,iBAeA,SAAIuuB,GACA,IAAInb,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAI8G,SAAS9Y,KAAK0Y,OAAStF,EAAQmb,GAAoB,IAChF,GAAC,mBAQD,SAAMA,GACF,IAAInb,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAI8G,SAAS9Y,KAAK0Y,OAAStF,EAAQmb,GAAoB,IAChF,IAEA,gCA1BA,SAAyBvc,EAA4B9K,GACjD,OAAQA,GAAO,IAAIioB,GAAU1F,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACrF,GAAC,2BA2BD,SAAqB0X,GACjBA,EAAQhU,YAAY,EACxB,GAEA,oBAIA,SAAcgU,EAA8B0F,GACxC1F,EAAQxU,eAAe,EAAGka,EAAW,EACzC,GAEA,sBAIA,SAAgB1F,EAA8B2F,GAC1C3F,EAAQxU,eAAe,EAAGma,EAAa,EAC3C,GAEA,yBAIA,SAAmB3F,GAEf,OADaA,EAAQ9T,WAEzB,GAAC,4BAED,SAAsB8T,EAA8B0F,EAA+BC,GAI/E,OAHAF,EAASG,cAAc5F,GACvByF,EAASI,OAAO7F,EAAS0F,GACzBD,EAASK,SAAS9F,EAAS2F,GACpBF,EAASM,YAAY/F,EAChC,KAAC,EAnFgB,GAARd,WAAQ,CAqFxB,CAtFiC,CAAAC,sBAAO,IAsFxC,CAtF2B,CAAAC,kBAAK,IAsFhC,CAtFoB,CAAAH,oBAAM,IAsF1B,CAtFD,CAAiBA,QAAG,KA6FpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxB8G,EAAkB,WAA/B,uBACI,KAAA1d,GAAoC,KAEpC,KAAA0G,OAAiB,CAyGrB,CADK,OAvGD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,gBAgBA,WACI,IAAIoT,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAI+F,UAAU/X,KAAK0Y,OAAStF,GAAUpT,KAAKgS,GAAIwF,WAAW,EAAG,EACtF,GAEA,uBAOA,SAAUtQ,GACN,IAAIkM,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,GAAUlM,GAAO,IAAIyhB,EAAIG,OAAOD,MAAMD,QAAQ2C,KAAK9B,OAAOzpB,KAAKgS,GAAIkH,WAAWlZ,KAAK0Y,OAAStF,GAASpT,KAAKgS,IAAO,IAC5H,GAEA,uBAQA,WACI,IAAIoB,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,QAAOtF,KAAWpT,KAAKgS,GAAI2F,SAAS3X,KAAK0Y,OAAStF,EACtD,IAEA,0CAzCA,SAAmCpB,EAA4B9K,GAC3D,OAAQA,GAAO,IAAIwoB,GAAoBjG,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EAC/F,GAAC,qCA0CD,SAA+B0X,GAC3BA,EAAQhU,YAAY,EACxB,GAEA,mBAIA,SAAagU,EAA8BiG,GACvCjG,EAAQ3U,cAAc,EAAG4a,EAAIjG,EAAQlS,WAAW,EAAG,GACvD,GAEA,0BAIA,SAAoBkS,EAA8BkG,GAC9ClG,EAAQxU,eAAe,EAAG0a,EAAiB,EAC/C,GAEA,0BAIA,SAAoBlG,EAA8BmG,GAC9CnG,EAAQjV,aAAa,GAAIob,EAAW,EACxC,GAEA,mCAIA,SAA6BnG,GAEzB,OADaA,EAAQ9T,WAEzB,GAAC,sCAED,SAAgC8T,EAA8BiG,EAAsBC,EAAqCC,GAKrH,OAJAH,EAAmBI,wBAAwBpG,GAC3CgG,EAAmBK,MAAMrG,EAASiG,GAClCD,EAAmBM,aAAatG,EAASkG,GACzCF,EAAmBO,aAAavG,EAASmG,GAClCH,EAAmBQ,sBAAsBxG,EACpD,KAAC,EA3G0B,GAAlBd,qBAAkB,CA6GlC,CA9GiC,CAAAC,sBAAO,IA8GxC,CA9G2B,CAAAC,kBAAK,IA8GhC,CA9GoB,CAAAH,oBAAM,IA8G1B,CA9GD,CAAiBA,QAAG,KAsHpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBuH,EAAK,WAAlB,uBACI,KAAAne,GAAoC,KAEpC,KAAA0G,OAAiB,CAgPrB,CADK,OA9OD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,kBAiBA,SAAKuuB,GACD,IAAInb,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAI8G,SAAS9Y,KAAK0Y,OAAStF,EAAQmb,GAAoB,IAChF,GAEA,sBAKA,WACI,IAAInb,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,QAAOtF,KAAWpT,KAAKgS,GAAI2F,SAAS3X,KAAK0Y,OAAStF,EACtD,GAEA,sBAGA,WACI,IAAIA,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAAkBpT,KAAKgS,GAAI4F,UAAU5X,KAAK0Y,OAAStF,GAAWuV,EAAIG,OAAOD,MAAMD,QAAQU,KAAKtnB,IACvG,GAEA,kBAMA,SAAkCkF,GAC9B,IAAIkM,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,IAC5C,OAAOtF,EAASpT,KAAKgS,GAAI4G,QAAQ1R,EAAKlH,KAAK0Y,OAAStF,GAAU,IAClE,GAEA,wBAMA,SAAWlM,GACP,IAAIkM,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,IAC5C,OAAOtF,GAAUlM,GAAO,IAAIyhB,EAAIG,OAAOD,MAAMD,QAAQ8G,oBAAoBjG,OAAOzpB,KAAKgS,GAAIkH,WAAWlZ,KAAK0Y,OAAStF,GAASpT,KAAKgS,IAAO,IAC3I,GAEA,sBAQA,SAASuR,EAAerc,GACpB,IAAIkM,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,IAC5C,OAAOtF,GAAUlM,GAAO,IAAIyhB,EAAIG,OAAOD,MAAMD,QAAQuH,OAAO1G,OAAOzpB,KAAKgS,GAAIkH,WAAWlZ,KAAKgS,GAAImH,SAASnZ,KAAK0Y,OAAStF,GAAkB,EAARmQ,GAAYvjB,KAAKgS,IAAO,IAC7J,GAEA,4BAGA,WACI,IAAIoB,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,IAC5C,OAAOtF,EAASpT,KAAKgS,GAAIoH,aAAapZ,KAAK0Y,OAAStF,GAAU,CAClE,GAEA,4BAOA,SAAemQ,EAAerc,GAC1B,IAAIkM,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,IAC5C,OAAOtF,GAAUlM,GAAO,IAAIyhB,EAAIG,OAAOD,MAAMD,QAAQuG,UAAU1F,OAAOzpB,KAAKgS,GAAIkH,WAAWlZ,KAAKgS,GAAImH,SAASnZ,KAAK0Y,OAAStF,GAAkB,EAARmQ,GAAYvjB,KAAKgS,IAAO,IAChK,GAEA,kCAGA,WACI,IAAIoB,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,IAC5C,OAAOtF,EAASpT,KAAKgS,GAAIoH,aAAapZ,KAAK0Y,OAAStF,GAAU,CAClE,IAEA,6BAlGA,SAAsBpB,EAA4B9K,GAC9C,OAAQA,GAAO,IAAIipB,GAAO1G,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EAClF,GAAC,wBAmGD,SAAkB0X,GACdA,EAAQhU,YAAY,EACxB,GAEA,qBAIA,SAAegU,EAA8B0G,GACzC1G,EAAQxU,eAAe,EAAGkb,EAAY,EAC1C,GAEA,yBAIA,SAAmB1G,EAA8B2G,GAC7C3G,EAAQjV,aAAa,GAAI4b,EAAU,EACvC,GAEA,yBAIA,SAAmB3G,EAA8B4G,GAC7C5G,EAAQjV,aAAa,EAAG6b,EAAU3H,EAAIG,OAAOD,MAAMD,QAAQU,KAAKtnB,KACpE,GAEA,qBAIA,SAAe0nB,EAA8B6G,GACzC7G,EAAQxU,eAAe,EAAGqb,EAAY,EAC1C,GAEA,2BAIA,SAAqB7G,EAA8B8G,GAC/C9G,EAAQxU,eAAe,EAAGsb,EAAkB,EAChD,GAEA,yBAIA,SAAmB9G,EAA8B+G,GAC7C/G,EAAQxU,eAAe,EAAGub,EAAgB,EAC9C,GAEA,kCAKA,SAA4B/G,EAA8BnqB,GACtDmqB,EAAQ1S,YAAY,EAAGzX,EAAKjB,OAAQ,GACpC,IAAK,IAAId,EAAI+B,EAAKjB,OAAS,EAAGd,GAAK,EAAGA,IAClCksB,EAAQvU,UAAU5V,EAAK/B,IAE3B,OAAOksB,EAAQtS,WACnB,GAEA,iCAIA,SAA2BsS,EAA8BwB,GACrDxB,EAAQ1S,YAAY,EAAGkU,EAAU,EACrC,GAEA,+BAIA,SAAyBxB,EAA8BgH,GACnDhH,EAAQxU,eAAe,EAAGwb,EAAsB,EACpD,GAEA,wCAKA,SAAkChH,EAA8BnqB,GAC5DmqB,EAAQ1S,YAAY,EAAGzX,EAAKjB,OAAQ,GACpC,IAAK,IAAId,EAAI+B,EAAKjB,OAAS,EAAGd,GAAK,EAAGA,IAClCksB,EAAQvU,UAAU5V,EAAK/B,IAE3B,OAAOksB,EAAQtS,WACnB,GAEA,uCAIA,SAAiCsS,EAA8BwB,GAC3DxB,EAAQ1S,YAAY,EAAGkU,EAAU,EACrC,GAEA,sBAIA,SAAgBxB,GAEZ,OADaA,EAAQ9T,WAEzB,GAAC,yBAED,SAAmB8T,EAA8B0G,EAAgCC,EAAmBC,EAAyCC,EAAgCC,EAAsCC,EAAoCC,GASnP,OARAP,EAAMQ,WAAWjH,GACjByG,EAAMS,QAAQlH,EAAS0G,GACvBD,EAAMU,YAAYnH,EAAS2G,GAC3BF,EAAMW,YAAYpH,EAAS4G,GAC3BH,EAAMY,QAAQrH,EAAS6G,GACvBJ,EAAMa,cAActH,EAAS8G,GAC7BL,EAAMc,YAAYvH,EAAS+G,GAC3BN,EAAMe,kBAAkBxH,EAASgH,GAC1BP,EAAMgB,SAASzH,EAC1B,KAAC,EAlPa,GAALd,QAAK,CAoPrB,CArPiC,CAAAC,sBAAO,IAqPxC,CArP2B,CAAAC,kBAAK,IAqPhC,CArPoB,CAAAH,oBAAM,IAqP1B,CArPD,CAAiBA,QAAG,KA4PpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBhM,EAAM,WAAnB,uBACI,KAAA5K,GAAoC,KAEpC,KAAA0G,OAAiB,CA6CrB,CAFK,OA1CD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,oBAMA,WACI,OAAOA,KAAKgS,GAAI+F,UAAU/X,KAAK0Y,OACnC,GAEA,oBAMA,WACI,OAAO1Y,KAAKgS,GAAI+F,UAAU/X,KAAK0Y,OAAS,EAC5C,IAEA,2BAMA,SAAoBgR,EAA8BtW,EAA0B9U,GAIxE,OAHAorB,EAAQrW,KAAK,EAAG,IAChBqW,EAAQ1V,WAAW1V,GACnBorB,EAAQ1V,WAAWZ,GACZsW,EAAQtW,QACnB,KAAC,EA9Cc,GAANwV,SAAM,CAiDtB,CAlDiC,CAAAC,sBAAO,IAkDxC,CAlD2B,CAAAC,kBAAK,IAkDhC,CAlDoB,CAAAH,oBAAM,IAkD1B,CAlDD,CAAiBA,QAAG,KAyDpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBwI,EAAM,WAAnB,uBACI,KAAApf,GAAoC,KAEpC,KAAA0G,OAAiB,CAsKrB,CADK,OApKD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,wBAgBA,WACI,IAAIoT,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAAkBpT,KAAKgS,GAAIoE,UAAUpW,KAAK0Y,OAAStF,GAAWuV,EAAIG,OAAOD,MAAMD,QAAQW,WAAW8H,MAC7G,GAEA,oBAKA,SAAO9N,EAAerc,GAClB,IAAIkM,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,GAAUlM,GAAO,IAAIyhB,EAAIG,OAAOD,MAAMD,QAAQuH,OAAO1G,OAAOzpB,KAAKgS,GAAIkH,WAAWlZ,KAAKgS,GAAImH,SAASnZ,KAAK0Y,OAAStF,GAAkB,EAARmQ,GAAYvjB,KAAKgS,IAAO,IAC7J,GAEA,0BAGA,WACI,IAAIoB,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAIoH,aAAapZ,KAAK0Y,OAAStF,GAAU,CAClE,GAEA,4BAKA,SAAemQ,EAAerc,GAC1B,IAAIkM,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,GAAUlM,GAAO,IAAIyhB,EAAIG,OAAOD,MAAMD,QAAQuG,UAAU1F,OAAOzpB,KAAKgS,GAAIkH,WAAWlZ,KAAKgS,GAAImH,SAASnZ,KAAK0Y,OAAStF,GAAkB,EAARmQ,GAAYvjB,KAAKgS,IAAO,IAChK,GAEA,kCAGA,WACI,IAAIoB,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAIoH,aAAapZ,KAAK0Y,OAAStF,GAAU,CAClE,IAEA,8BApDA,SAAuBpB,EAA4B9K,GAC/C,OAAQA,GAAO,IAAIkqB,GAAQ3H,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACnF,GAAC,yBAqDD,SAAmB0X,GACfA,EAAQhU,YAAY,EACxB,GAEA,2BAIA,SAAqBgU,EAA8B4H,GAC/C5H,EAAQ7U,cAAc,EAAGyc,EAAY3I,EAAIG,OAAOD,MAAMD,QAAQW,WAAW8H,OAC7E,GAEA,uBAIA,SAAiB3H,EAA8B6H,GAC3C7H,EAAQxU,eAAe,EAAGqc,EAAc,EAC5C,GAEA,gCAKA,SAA0B7H,EAA8BnqB,GACpDmqB,EAAQ1S,YAAY,EAAGzX,EAAKjB,OAAQ,GACpC,IAAK,IAAId,EAAI+B,EAAKjB,OAAS,EAAGd,GAAK,EAAGA,IAClCksB,EAAQvU,UAAU5V,EAAK/B,IAE3B,OAAOksB,EAAQtS,WACnB,GAEA,+BAIA,SAAyBsS,EAA8BwB,GACnDxB,EAAQ1S,YAAY,EAAGkU,EAAU,EACrC,GAEA,+BAIA,SAAyBxB,EAA8BgH,GACnDhH,EAAQxU,eAAe,EAAGwb,EAAsB,EACpD,GAEA,wCAKA,SAAkChH,EAA8BnqB,GAC5DmqB,EAAQ1S,YAAY,EAAGzX,EAAKjB,OAAQ,GACpC,IAAK,IAAId,EAAI+B,EAAKjB,OAAS,EAAGd,GAAK,EAAGA,IAClCksB,EAAQvU,UAAU5V,EAAK/B,IAE3B,OAAOksB,EAAQtS,WACnB,GAEA,uCAIA,SAAiCsS,EAA8BwB,GAC3DxB,EAAQ1S,YAAY,EAAGkU,EAAU,EACrC,GAEA,uBAIA,SAAiBxB,GAEb,OADaA,EAAQ9T,WAEzB,GAEA,gCAIA,SAA0B8T,EAA8BtW,GACpDsW,EAAQzb,OAAOmF,EACnB,GAAC,0BAED,SAAoBsW,EAA8B4H,EAAiDC,EAAkCb,GAKjI,OAJAU,EAAOI,YAAY9H,GACnB0H,EAAOK,cAAc/H,EAAS4H,GAC9BF,EAAOM,UAAUhI,EAAS6H,GAC1BH,EAAOF,kBAAkBxH,EAASgH,GAC3BU,EAAOO,UAAUjI,EAC5B,KAAC,EAxKc,GAANd,SAAM,CA0KtB,CA3KiC,CAAAC,sBAAO,IA2KxC,CA3K2B,CAAAC,kBAAK,IA2KhC,CA3KoB,CAAAH,oBAAM,IA2K1B,CA3KD,CAAiBA,QAAG,KCrlEpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAChBA,SAASgJ,GAA0B9I,OAAOD,MAAMD,QAAQwI,MACzE,CAFiC,CAAAvI,sBAAO,IAExC,CAF2B,CAAAC,kBAAK,IAEhC,CAFoB,CAAAH,oBAAM,IAE1B,CAFD,CAAiBA,QAAG,KAepB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,IAC9B,SAAYiJ,GACRA,mBACAA,uBACAA,yCACAA,iCACAA,uBACAA,kCACH,CAPD,CAAYjJ,kCAAa,IAQ5B,CATiC,CAAAC,sBAAO,IASxC,CAT2B,CAAAC,kBAAK,IAShC,CAToB,CAAAH,oBAAM,IAS1B,CATD,CAAiBA,QAAG,KAwBpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBkJ,EAAS,WAAtB,uBACI,KAAA9f,GAAoC,KAEpC,KAAA0G,OAAiB,CA8CrB,CAFK,OA3CD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,oBAMA,WACI,OAAOA,KAAKgS,GAAI+F,UAAU/X,KAAK0Y,OACnC,GAEA,uBAOA,WACI,OAAO1Y,KAAKgS,GAAI+F,UAAU/X,KAAK0Y,OAAS,EAC5C,IAEA,8BAMA,SAAuBgR,EAA8BprB,EAA0ByzB,GAI3E,OAHArI,EAAQrW,KAAK,EAAG,IAChBqW,EAAQ1V,WAAW+d,GACnBrI,EAAQ1V,WAAW1V,GACZorB,EAAQtW,QACnB,KAAC,EA/CiB,GAATwV,YAAS,CAkDzB,CAnDiC,CAAAC,sBAAO,IAmDxC,CAnD2B,CAAAC,kBAAK,IAmDhC,CAnDoB,CAAAH,oBAAM,IAmD1B,CAnDD,CAAiBA,QAAG,KA2DpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBoJ,EAAW,WAAxB,uBACI,KAAAhgB,GAAoC,KAEpC,KAAA0G,OAAiB,CA4IrB,CADK,OA1ID,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,oBAeA,WACI,IAAIoT,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAI+F,UAAU/X,KAAK0Y,OAAStF,GAAUpT,KAAKgS,GAAIwF,WAAW,EAAG,EACtF,GAEA,mBAOA,SAAM+L,EAAerc,GACjB,IAAIkM,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,GAAUlM,GAAO,IAAIyhB,EAAIG,OAAOD,MAAMD,QAAQkJ,WAAWrI,OAAOzpB,KAAKgS,GAAImH,SAASnZ,KAAK0Y,OAAStF,GAAkB,GAARmQ,EAAYvjB,KAAKgS,IAAO,IAC7I,GAEA,yBAGA,WACI,IAAIoB,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAIoH,aAAapZ,KAAK0Y,OAAStF,GAAU,CAClE,GAEA,qBAYA,SAAQmQ,EAAerc,GACnB,IAAIkM,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,GAAUlM,GAAO,IAAI0qB,GAA0B9I,OAAOD,MAAMD,QAAQhM,QAAQ6M,OAAOzpB,KAAKgS,GAAImH,SAASnZ,KAAK0Y,OAAStF,GAAkB,GAARmQ,EAAYvjB,KAAKgS,IAAO,IAChK,GAEA,2BAGA,WACI,IAAIoB,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAIoH,aAAapZ,KAAK0Y,OAAStF,GAAU,CAClE,IAEA,mCA5DA,SAA4BpB,EAA4B9K,GACpD,OAAQA,GAAO,IAAI8qB,GAAavI,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACxF,GAAC,8BA6DD,SAAwB0X,GACpBA,EAAQhU,YAAY,EACxB,GAEA,uBAIA,SAAiBgU,EAA8BprB,GAC3CorB,EAAQ3U,cAAc,EAAGzW,EAAQorB,EAAQlS,WAAW,EAAG,GAC3D,GAEA,sBAIA,SAAgBkS,EAA8BuI,GAC1CvI,EAAQxU,eAAe,EAAG+c,EAAa,EAC3C,GAEA,8BAIA,SAAwBvI,EAA8BwB,GAClDxB,EAAQ1S,YAAY,GAAIkU,EAAU,EACtC,GAEA,wBAIA,SAAkBxB,EAA8BwI,GAC5CxI,EAAQxU,eAAe,EAAGgd,EAAe,EAC7C,GAEA,gCAIA,SAA0BxI,EAA8BwB,GACpDxB,EAAQ1S,YAAY,GAAIkU,EAAU,EACtC,GAEA,4BAIA,SAAsBxB,GAElB,OADaA,EAAQ9T,WAEzB,GAAC,+BAED,SAAyB8T,EAA8BprB,EAA0B2zB,EAAiCC,GAK9G,OAJAF,EAAYG,iBAAiBzI,GAC7BsI,EAAYI,UAAU1I,EAASprB,GAC/B0zB,EAAYK,SAAS3I,EAASuI,GAC9BD,EAAYM,WAAW5I,EAASwI,GACzBF,EAAYO,eAAe7I,EACtC,KAAC,EA9ImB,GAAXd,cAAW,CAgJ3B,CAjJiC,CAAAC,sBAAO,IAiJxC,CAjJ2B,CAAAC,kBAAK,IAiJhC,CAjJoB,CAAAH,oBAAM,IAiJ1B,CAjJD,CAAiBA,QAAG,KA4JpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxB4J,EAAe,WAA5B,uBACI,KAAAxgB,GAAoC,KAEpC,KAAA0G,OAAiB,CAgGrB,CADK,OA9FD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,gBAYA,WACI,IAAIoT,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAI+F,UAAU/X,KAAK0Y,OAAStF,GAAUpT,KAAKgS,GAAIwF,WAAW,EAAG,EACtF,GAEA,kBAIA,SAAKtQ,GACD,IAAIkM,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,GAAUlM,GAAO,IAAIyhB,EAAIG,OAAOD,MAAMD,QAAQoJ,aAAavI,OAAOzpB,KAAKgS,GAAIkH,WAAWlZ,KAAK0Y,OAAStF,GAASpT,KAAKgS,IAAO,IACpI,GAEA,qBAMA,WACI,IAAIoB,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,QAAOtF,KAAWpT,KAAKgS,GAAI2F,SAAS3X,KAAK0Y,OAAStF,EACtD,IAEA,uCAhCA,SAAgCpB,EAA4B9K,GACxD,OAAQA,GAAO,IAAIsrB,GAAiB/I,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EAC5F,GAAC,kCAiCD,SAA4B0X,GACxBA,EAAQhU,YAAY,EACxB,GAEA,mBAIA,SAAagU,EAA8BiG,GACvCjG,EAAQ3U,cAAc,EAAG4a,EAAIjG,EAAQlS,WAAW,EAAG,GACvD,GAEA,qBAIA,SAAekS,EAA8B+I,GACzC/I,EAAQxU,eAAe,EAAGud,EAAY,EAC1C,GAEA,wBAIA,SAAkB/I,EAA8BgJ,GAC5ChJ,EAAQjV,aAAa,GAAIie,EAAS,EACtC,GAEA,gCAIA,SAA0BhJ,GAEtB,OADaA,EAAQ9T,WAEzB,GAAC,mCAED,SAA6B8T,EAA8BiG,EAAsB8C,EAAgCC,GAK7G,OAJAF,EAAgBG,qBAAqBjJ,GACrC8I,EAAgBzC,MAAMrG,EAASiG,GAC/B6C,EAAgBI,QAAQlJ,EAAS+I,GACjCD,EAAgBK,WAAWnJ,EAASgJ,GAC7BF,EAAgBM,mBAAmBpJ,EAC9C,KAAC,EAlGuB,GAAfd,kBAAe,CAoG/B,CArGiC,CAAAC,sBAAO,IAqGxC,CArG2B,CAAAC,kBAAK,IAqGhC,CArGoB,CAAAH,oBAAM,IAqG1B,CArGD,CAAiBA,QAAG,KAyGpB,SAAiBA,IAAI,SAAAG,IAAO,SAAAD,IAAM,SAAAD,GAAO,IACxBmK,EAAO,WAApB,uBACI,KAAA/gB,GAAoC,KAEpC,KAAA0G,OAAiB,CAsKrB,CADK,OApKD,yBAKA,SAAOlb,EAAWwU,GAGd,OAFAhS,KAAK0Y,OAASlb,EACdwC,KAAKgS,GAAKA,EACHhS,IACX,GAEA,qBAYA,WACI,IAAIoT,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAAkBpT,KAAKgS,GAAIoE,UAAUpW,KAAK0Y,OAAStF,GAAWwe,GAA0B9I,OAAOD,MAAMD,QAAQI,gBAAgBgK,EACxI,GAEA,wBAGA,WACI,IAAI5f,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAAkBpT,KAAKgS,GAAI4F,UAAU5X,KAAK0Y,OAAStF,GAAWuV,EAAIG,OAAOD,MAAMD,QAAQiJ,cAAc7vB,IAChH,GAEA,oBAIA,SAAoCkF,GAChC,IAAIkM,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,GAC5C,OAAOtF,EAASpT,KAAKgS,GAAI4G,QAAQ1R,EAAKlH,KAAK0Y,OAAStF,GAAU,IAClE,GAEA,wBAGA,WACI,IAAIA,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,IAC5C,OAAOtF,EAASpT,KAAKgS,GAAI+F,UAAU/X,KAAK0Y,OAAStF,GAAUpT,KAAKgS,GAAIwF,WAAW,EAAG,EACtF,GAEA,4BAKA,SAAe+L,EAAerc,GAC1B,IAAIkM,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,IAC5C,OAAOtF,GAAUlM,GAAO,IAAI0qB,GAA0B9I,OAAOD,MAAMD,QAAQuG,UAAU1F,OAAOzpB,KAAKgS,GAAIkH,WAAWlZ,KAAKgS,GAAImH,SAASnZ,KAAK0Y,OAAStF,GAAkB,EAARmQ,GAAYvjB,KAAKgS,IAAO,IACtL,GAEA,kCAGA,WACI,IAAIoB,EAASpT,KAAKgS,GAAIyG,SAASzY,KAAK0Y,OAAQ,IAC5C,OAAOtF,EAASpT,KAAKgS,GAAIoH,aAAapZ,KAAK0Y,OAAStF,GAAU,CAClE,IAEA,+BAvDA,SAAwBpB,EAA4B9K,GAChD,OAAQA,GAAO,IAAI6rB,GAAStJ,OAAOzX,EAAG+E,UAAU/E,EAAGmB,YAAcnB,EAAGmB,WAAYnB,EACpF,GAAC,0BAwDD,SAAoB0X,GAChBA,EAAQhU,YAAY,EACxB,GAEA,wBAIA,SAAkBgU,EAA8BuJ,GAC5CvJ,EAAQ7U,cAAc,EAAGoe,EAASrB,GAA0B9I,OAAOD,MAAMD,QAAQI,gBAAgBgK,GACrG,GAEA,2BAIA,SAAqBtJ,EAA8BwJ,GAC/CxJ,EAAQjV,aAAa,EAAGye,EAAYvK,EAAIG,OAAOD,MAAMD,QAAQiJ,cAAc7vB,KAC/E,GAEA,uBAIA,SAAiB0nB,EAA8ByJ,GAC3CzJ,EAAQxU,eAAe,EAAGie,EAAc,EAC5C,GAEA,2BAIA,SAAqBzJ,EAA8B0J,GAC/C1J,EAAQ3U,cAAc,EAAGqe,EAAY1J,EAAQlS,WAAW,EAAG,GAC/D,GAEA,+BAIA,SAAyBkS,EAA8BgH,GACnDhH,EAAQxU,eAAe,EAAGwb,EAAsB,EACpD,GAEA,wCAKA,SAAkChH,EAA8BnqB,GAC5DmqB,EAAQ1S,YAAY,EAAGzX,EAAKjB,OAAQ,GACpC,IAAK,IAAId,EAAI+B,EAAKjB,OAAS,EAAGd,GAAK,EAAGA,IAClCksB,EAAQvU,UAAU5V,EAAK/B,IAE3B,OAAOksB,EAAQtS,WACnB,GAEA,uCAIA,SAAiCsS,EAA8BwB,GAC3DxB,EAAQ1S,YAAY,EAAGkU,EAAU,EACrC,GAEA,wBAIA,SAAkBxB,GAEd,OADaA,EAAQ9T,WAEzB,GAEA,iCAIA,SAA2B8T,EAA8BtW,GACrDsW,EAAQzb,OAAOmF,EACnB,GAAC,2BAED,SAAqBsW,EAA8BuJ,EAAyEC,EAAoDC,EAAkCC,EAA8B1C,GAO5O,OANAqC,EAAQM,aAAa3J,GACrBqJ,EAAQO,WAAW5J,EAASuJ,GAC5BF,EAAQQ,cAAc7J,EAASwJ,GAC/BH,EAAQS,UAAU9J,EAASyJ,GAC3BJ,EAAQU,cAAc/J,EAAS0J,GAC/BL,EAAQ7B,kBAAkBxH,EAASgH,GAC5BqC,EAAQW,WAAWhK,EAC9B,KAAC,EAxKe,GAAPd,UAAO,CA0KvB,CA3KiC,CAAAC,sBAAO,IA2KxC,CA3K2B,CAAAC,kBAAK,IA2KhC,CA3KoB,CAAAH,oBAAM,IA2K1B,CA3KD,CAAiBA,QAAG,KCvVMgL,GAAY7K,OAAOD,MAAMD,QAAQU,KAArD,IAmCMA,GAmEAsK,GArGEzK,GAAWwK,GAAY7K,OAAOD,MAAMD,QAAQO,SAC5CC,GAAWuK,GAAY7K,OAAOD,MAAMD,QAAQQ,SAC5CF,GAAYyK,GAAY7K,OAAOD,MAAMD,QAAQM,UAC7CD,GAAY0K,GAAY7K,OAAOD,MAAMD,QAAQK,UAC7CI,GAAesK,GAAY7K,OAAOD,MAAMD,QAAQS,aAChDwI,GAAgBgC,GAAa/K,OAAOD,MAAMD,QAAQiJ,cAClD7I,GAAkB2K,GAAY7K,OAAOD,MAAMD,QAAQI,iBA4BjE,SAAYM,GAERA,mBAEAA,mBAEAA,iBAEAA,qBAEAA,uBAEAA,mBAEAA,mBAEAA,yBAEAA,mBAEAA,mBAEAA,8BAEAA,4BAEAA,oBAEAA,wBAEAA,sBAEAA,0CAEAA,sCAEAA,kBAGAA,gCACAA,oBACAA,sBACAA,sBACAA,sBACAA,sBACAA,wBACAA,wBACAA,wBACAA,2BACAA,2BACAA,2BACAA,2BACAA,2CACAA,2CACAA,qDACAA,qDACAA,mDACAA,iCACAA,2CACAA,2CACAA,yCACAA,iCACAA,mCACAA,2CACAA,8CACH,CAjED,CAAYA,QAAI,KAmEhB,SAAYsK,GAIRA,uBAKAA,mBAKAA,2BAKAA,kBACD,CApBH,CAAYA,QAAU,K,gBCxDLE,IAhDX,SAAUC,GAAQC,EAAYC,EAAgBC,EAAcC,GAC9D,OAA6B,KAArBD,EAAO,GAAKC,EACxB,CAGM,SAAUC,GAAOJ,EAAYC,EAAgBC,EAAcC,GAC7D,OAAQD,EAAO,GAAKC,IAAQA,CAChC,CAGM,SAAUE,GAAQphB,EAAmBsQ,EAAellB,GACtD,OAAOA,KACA4U,EAAMsQ,GAAS,IAAQ,GAAMA,EAAQ,KAAQ,IAC9CtQ,EAAMsQ,GAAS,MAAQ,GAAMA,EAAQ,MAAQ,CACvD,CAGM,SAAU+Q,GAAelhB,EAAgB9U,EAAgBi2B,GAC3D,IAAMC,EAAeD,EAAOxY,WAAa,GAAK,EAC9C,GAAI3I,EAAS,GAAKmhB,EAAOxY,WAAayY,EAAa,CAC/C,IAAMvhB,EAAQ,IAAI5B,WAAWmjB,GAK7B,OAHAvhB,EAAMlT,IAAIqT,EAAS,IAAM,EAAImhB,EAAOrhB,SAASE,GAAU,GAEnDqhB,GAAUX,GAAYS,EAAQnhB,EAAQ9U,EAAQ,KAAMy1B,KAAU7gB,SAAS,EAAGshB,IACvEvhB,C,CAEX,OAAOshB,CACX,CAGM,SAAUE,GAAU5qB,GACtB,IAE0B,EAFtB6qB,EAAe,GACfl3B,EAAI,EAAG22B,EAAM,EAAGD,EAAO,EAAE,IACTrqB,GAAM,IAA1B,IAAK,EAAL,qBAA4B,CAAZ,UACFqqB,GAAQ,GAAKC,GACT,MAARA,IACFO,EAAGl3B,KAAO02B,EACVA,EAAOC,EAAM,E,CAEpB,gCACS,IAAN32B,GAAW22B,EAAM,KAAKO,EAAGl3B,KAAO02B,GACpC,IAAIlb,EAAI,IAAI3H,WAAYqjB,EAAGp2B,OAAS,GAAK,GAEzC,OADA0a,EAAEjZ,IAAI20B,GACC1b,CACX,CAGM,SAAW8a,GAAe7gB,EAAmB0hB,EAAer2B,EAAgB6K,EAClDhK,GAAkE,+EAC1Fg1B,EAAMQ,EAAQ,EACdC,EAAYD,GAAS,EACrBpR,EAAQ,EAAGsR,EAAYv2B,EAAM,YAC1Bu2B,EAAY,GAAC,iBACZX,EAAOjhB,EAAM2hB,KAAY,OAEzB,OAFyB,SAEnBz1B,EAAIgK,EAASoa,IAAS2Q,EAAMC,GAAI,YAC/BU,EAAY,KAAOV,EAAM,EAAC,uBAJnBA,EAAM,EAAC,wDAe3B,SAAUW,GAAiBv1B,EAAkBw1B,EAAaC,GAC5D,GAAIA,EAAMD,GAAO,EAAK,OAAO,EAE7B,GAAIC,EAAMD,EAAM,EAAG,CACf,IACiE,EAD7DE,EAAM,EAAE,IACMnB,GAAYv0B,EAAMw1B,EAAKC,EAAMD,EAAKx1B,EAAM60B,KAAO,IAAjE,IAAK,EAAL,qBAAmE,CAC/Da,GADU,O,CAEb,+BACD,OAAOA,C,CAGX,IAAMC,EAAYF,GAAO,GAAK,EAExBG,EAAYJ,GAAOA,EAAM,IAAM,EAAI,EAAI,EAAIA,EAAM,GACvD,OAEID,GAAiBv1B,EAAMw1B,EAAKI,GAE5BL,GAAiBv1B,EAAM21B,EAAWF,GAElCI,GAAa71B,EAAM41B,GAAa,EAAID,EAAYC,GAAc,EAEtE,CAGM,SAAUC,GAAa73B,EAAsBue,EAAqBC,GAIpE,IAHA,IAAIsZ,EAAM,EAAGC,EAAoB,EAAdxZ,EACbyZ,EAAO,IAAIp5B,SAASoB,EAAIyT,OAAQzT,EAAIue,WAAYve,EAAIwe,YACpDhG,OAAsB,IAAfgG,EAAwBxe,EAAIwe,WAAauZ,EAAMvZ,EACrDhG,EAAMuf,GAAO,GAChBD,GAAOG,GAAcD,EAAKE,UAAUH,IACpCA,GAAO,EAEX,KAAOvf,EAAMuf,GAAO,GAChBD,GAAOG,GAAcD,EAAKG,UAAUJ,IACpCA,GAAO,EAEX,KAAOvf,EAAMuf,GAAO,GAChBD,GAAOG,GAAcD,EAAKI,SAASL,IACnCA,GAAO,EAEX,OAAOD,CACX,CAGM,SAAUG,GAAcI,GAC1B,IAAIp4B,EAAa,EAATo4B,EAGR,OAAyC,WADzCp4B,GAAS,WADTA,GAAUA,IAAM,EAAK,cACIA,IAAM,EAAK,aACrBA,IAAM,GAAM,aAA8B,EAC7D,C,YCpIe,SAASq4B,GAAmBt4B,GACzC,OCJa,SAA4BA,GACzC,GAAIjC,MAAMe,QAAQkB,GAAM,OAAO,OAAAu4B,GAAA,GAAiBv4B,EAClD,CDES,CAAkBA,IELZ,SAA0BwP,GACvC,GAAsB,qBAAXpR,QAAmD,MAAzBoR,EAAKpR,OAAO+B,WAA2C,MAAtBqP,EAAK,cAAuB,OAAOzR,MAAM2hB,KAAKlQ,EACtH,CFGmC,CAAgBxP,IAAQ,OAAAiB,EAAA,GAA2BjB,IGLvE,WACb,MAAM,IAAIkB,UAAU,uIACtB,CHG8F,EAC9F,CIgBO,IAAes3B,GAAO,kCA2BsD,OA3BtD,4BAClB,SAAUC,GAA8B,kCAAbnvB,EAAa,iCAAbA,EAAa,kBAC3C,OAAOmvB,EAAMlO,KAAI,SAACrkB,EAAMjG,GAAC,OAAK,EAAKy4B,MAAK,MAAV,EAAI,CAAOxyB,GAAI,UAAKoD,EAAKihB,KAAI,SAAC3kB,GAAC,OAAKA,EAAE3F,EAAE,MAAE,GAC5E,GAAC,mBACM,WAAoB,2BAAXqJ,EAAW,yBAAXA,EAAW,gBACvB,OAAO7G,KAAKk2B,WAAWrvB,EAAK,IAAI,GAAO/F,MAAMd,KAAM6G,EACvD,GAAC,wBACM,SAAWpD,GACd,OAuBR,SAAwC0yB,EAAkB1yB,GAAiC,IAAtB2yB,IAAkB,UAAH,+CAC5ExvB,EAAU,KACVyvB,EAAoB/M,GAAKtnB,KAEpByB,aAAgB6yB,IAChB7yB,aAAgB8yB,GADYF,EAAQG,GAAW/yB,EAAK5B,MAEpD4B,aAAgBgzB,GAAYJ,EAAQG,GAAW/yB,GACrB,kBAAlB4yB,EAAQ5yB,KAAsB4yB,EAAQ/M,GAAK7lB,IAE5D,OAAQ4yB,GACJ,KAAK/M,GAAKE,KAAsB5iB,EAAKuvB,EAAQO,UAAW,MACxD,KAAKpN,GAAK+D,KAAsBzmB,EAAKuvB,EAAQQ,UAAW,MACxD,KAAKrN,GAAKiC,IAAsB3kB,EAAKuvB,EAAQS,SAAU,MACvD,KAAKtN,GAAKuN,KAAsBjwB,EAAKuvB,EAAQW,WAAaX,EAAQS,SAAU,MAC5E,KAAKtN,GAAKyN,MAAsBnwB,EAAKuvB,EAAQa,YAAcb,EAAQS,SAAU,MAC7E,KAAKtN,GAAK2N,MAAsBrwB,EAAKuvB,EAAQe,YAAcf,EAAQS,SAAU,MAC7E,KAAKtN,GAAK6N,MAAsBvwB,EAAKuvB,EAAQiB,YAAcjB,EAAQS,SAAU,MAC7E,KAAKtN,GAAK+N,MAAsBzwB,EAAKuvB,EAAQmB,YAAcnB,EAAQS,SAAU,MAC7E,KAAKtN,GAAKiO,OAAsB3wB,EAAKuvB,EAAQqB,aAAerB,EAAQS,SAAU,MAC9E,KAAKtN,GAAKmO,OAAsB7wB,EAAKuvB,EAAQuB,aAAevB,EAAQS,SAAU,MAC9E,KAAKtN,GAAKqO,OAAsB/wB,EAAKuvB,EAAQyB,aAAezB,EAAQS,SAAU,MAC9E,KAAKtN,GAAKuO,MAAsBjxB,EAAKuvB,EAAQ2B,WAAY,MACzD,KAAKxO,GAAKyO,QAAsBnxB,EAAKuvB,EAAQ6B,cAAgB7B,EAAQ2B,WAAY,MACjF,KAAKxO,GAAK2O,QAAsBrxB,EAAKuvB,EAAQ+B,cAAgB/B,EAAQ2B,WAAY,MACjF,KAAKxO,GAAK6O,QAAsBvxB,EAAKuvB,EAAQiC,cAAgBjC,EAAQ2B,WAAY,MACjF,KAAKxO,GAAK8C,KAAsBxlB,EAAKuvB,EAAQkC,UAAW,MACxD,KAAK/O,GAAKiD,OAAsB3lB,EAAKuvB,EAAQmC,YAAa,MAC1D,KAAKhP,GAAK0D,gBAAsBpmB,EAAKuvB,EAAQoC,qBAAsB,MACnE,KAAKjP,GAAKhpB,KAAsBsG,EAAKuvB,EAAQqC,UAAW,MACxD,KAAKlP,GAAKmP,QAAsB7xB,EAAKuvB,EAAQuC,cAAgBvC,EAAQqC,UAAW,MAChF,KAAKlP,GAAKqP,gBAAsB/xB,EAAKuvB,EAAQyC,sBAAwBzC,EAAQqC,UAAW,MACxF,KAAKlP,GAAK+E,UAAsBznB,EAAKuvB,EAAQ0C,eAAgB,MAC7D,KAAKvP,GAAKwP,gBAAsBlyB,EAAKuvB,EAAQ4C,sBAAwB5C,EAAQ0C,eAAgB,MAC7F,KAAKvP,GAAK0P,qBAAsBpyB,EAAKuvB,EAAQ8C,2BAA6B9C,EAAQ0C,eAAgB,MAClG,KAAKvP,GAAK4P,qBAAsBtyB,EAAKuvB,EAAQgD,2BAA6BhD,EAAQ0C,eAAgB,MAClG,KAAKvP,GAAK8P,oBAAsBxyB,EAAKuvB,EAAQkD,0BAA4BlD,EAAQ0C,eAAgB,MACjG,KAAKvP,GAAK4E,KAAsBtnB,EAAKuvB,EAAQmD,UAAW,MACxD,KAAKhQ,GAAKiQ,WAAsB3yB,EAAKuvB,EAAQqD,iBAAmBrD,EAAQmD,UAAW,MACnF,KAAKhQ,GAAKmQ,gBAAsB7yB,EAAKuvB,EAAQuD,sBAAwBvD,EAAQmD,UAAW,MACxF,KAAKhQ,GAAKqQ,gBAAsB/yB,EAAKuvB,EAAQyD,sBAAwBzD,EAAQmD,UAAW,MACxF,KAAKhQ,GAAKuQ,eAAsBjzB,EAAKuvB,EAAQ2D,qBAAuB3D,EAAQmD,UAAW,MACvF,KAAKhQ,GAAKkE,QAAsB5mB,EAAKuvB,EAAQ4D,aAAc,MAC3D,KAAKzQ,GAAKU,KAAsBpjB,EAAKuvB,EAAQ6D,UAAW,MACxD,KAAK1Q,GAAK2Q,OAAsBrzB,EAAKuvB,EAAQ+D,YAAa,MAC1D,KAAK5Q,GAAKyB,MAAsBnkB,EAAKuvB,EAAQgE,WAAY,MACzD,KAAK7Q,GAAK8Q,WAAsBxzB,EAAKuvB,EAAQkE,iBAAmBlE,EAAQgE,WAAY,MACpF,KAAK7Q,GAAKgR,YAAsB1zB,EAAKuvB,EAAQoE,kBAAoBpE,EAAQgE,WAAY,MACrF,KAAK7Q,GAAKkR,WAAsB5zB,EAAKuvB,EAAQsE,gBAAiB,MAC9D,KAAKnR,GAAKsF,SAAsBhoB,EAAKuvB,EAAQuE,cAAe,MAC5D,KAAKpR,GAAKqR,gBAAsB/zB,EAAKuvB,EAAQyE,sBAAwBzE,EAAQuE,cAAe,MAC5F,KAAKpR,GAAKuR,kBAAsBj0B,EAAKuvB,EAAQ2E,wBAA0B3E,EAAQuE,cAAe,MAC9F,KAAKpR,GAAKgB,cAAsB1jB,EAAKuvB,EAAQ4E,mBAAoB,MACjE,KAAKzR,GAAK/kB,IAAsBqC,EAAKuvB,EAAQ6E,SAEjD,GAAkB,oBAAPp0B,EAAmB,OAAOA,EACrC,IAAKwvB,EAAiB,OAAO,kBAAM,IAAI,EACvC,MAAM,IAAIvrB,MAAM,sBAAD,OAAuBye,GAAK+M,GAAM,KACrD,CAhFeH,CAAWl2B,KAAMyD,IADmB,UAAH,+CAE5C,GAAC,uBACM,SAAsBw3B,GAAoC,OAAO,IAAM,GAAC,uBACxE,SAAsBA,GAAoC,OAAO,IAAM,GAAC,sBACxE,SAAsBA,GAAoC,OAAO,IAAM,GAAC,wBACxE,SAAsBA,GAAoC,OAAO,IAAM,GAAC,uBACxE,SAAsBA,GAAoC,OAAO,IAAM,GAAC,yBACxE,SAAsBA,GAAoC,OAAO,IAAM,GAAC,kCACxE,SAAsBA,GAAoC,OAAO,IAAM,GAAC,uBACxE,SAAsBA,GAAoC,OAAO,IAAM,GAAC,4BACxE,SAAsBA,GAAoC,OAAO,IAAM,GAAC,uBACxE,SAAsBA,GAAoC,OAAO,IAAM,GAAC,0BACxE,SAAsBA,GAAoC,OAAO,IAAM,GAAC,uBACxE,SAAsBA,GAAoC,OAAO,IAAM,GAAC,yBACxE,SAAsBA,GAAoC,OAAO,IAAM,GAAC,wBACxE,SAAsBA,GAAoC,OAAO,IAAM,GAAC,6BACxE,SAAsBA,GAAoC,OAAO,IAAM,GAAC,2BACxE,SAAsBA,GAAoC,OAAO,IAAM,GAAC,gCACxE,SAAsBA,GAAoC,OAAO,IAAM,GAAC,sBACxE,SAAsBA,GAAoC,OAAO,IAAM,KAAC,EA3BtD,GA2F7B,SAASzE,GAA+B30B,GACpC,OAAQA,EAAKq5B,QACT,KAAK5R,GAAKE,KAAM,OAAOF,GAAKE,KAC5B,KAAKF,GAAKiC,IACN,IAAQC,EAAwB3pB,EAAxB2pB,SAAUC,EAAc5pB,EAAd4pB,SAClB,OAAQD,GACJ,KAAM,EAAG,OAAOC,EAAWnC,GAAKuN,KAAQvN,GAAK+N,MAC7C,KAAK,GAAI,OAAO5L,EAAWnC,GAAKyN,MAAQzN,GAAKiO,OAC7C,KAAK,GAAI,OAAO9L,EAAWnC,GAAK2N,MAAQ3N,GAAKmO,OAC7C,KAAK,GAAI,OAAOhM,EAAWnC,GAAK6N,MAAQ7N,GAAKqO,OAEjD,OAAOrO,GAAKiC,IAChB,KAAKjC,GAAKuO,MACN,OAAQh2B,EAAsBmqB,WAC1B,KAAK9C,GAAU6C,KAAM,OAAOzC,GAAKyO,QACjC,KAAK7O,GAAUiS,OAAQ,OAAO7R,GAAK2O,QACnC,KAAK/O,GAAUkS,OAAQ,OAAO9R,GAAK6O,QAEvC,OAAO7O,GAAKuO,MAChB,KAAKvO,GAAKiD,OAAQ,OAAOjD,GAAKiD,OAC9B,KAAKjD,GAAK8C,KAAM,OAAO9C,GAAK8C,KAC5B,KAAK9C,GAAK+D,KAAM,OAAO/D,GAAK+D,KAC5B,KAAK/D,GAAKkE,QAAS,OAAOlE,GAAKkE,QAC/B,KAAKlE,GAAK4E,KACN,OAASrsB,EAAqBisB,MAC1B,KAAK1E,GAASkF,OAAQ,OAAOhF,GAAKiQ,WAClC,KAAKnQ,GAASyE,YAAa,OAAOvE,GAAKmQ,gBACvC,KAAKrQ,GAASiS,YAAa,OAAO/R,GAAKqQ,gBACvC,KAAKvQ,GAASkS,WAAY,OAAOhS,GAAKuQ,eAE1C,OAAOvQ,GAAK4E,KAChB,KAAK5E,GAAK+E,UACN,OAASxsB,EAA0BisB,MAC/B,KAAK1E,GAASkF,OAAQ,OAAOhF,GAAKwP,gBAClC,KAAK1P,GAASyE,YAAa,OAAOvE,GAAK0P,qBACvC,KAAK5P,GAASiS,YAAa,OAAO/R,GAAK4P,qBACvC,KAAK9P,GAASkS,WAAY,OAAOhS,GAAK8P,oBAE1C,OAAO9P,GAAK+E,UAChB,KAAK/E,GAAKhpB,KACN,OAASuB,EAAsBisB,MAC3B,KAAK3E,GAASoS,IAAK,OAAOjS,GAAKmP,QAC/B,KAAKtP,GAAS0E,YAAa,OAAOvE,GAAKqP,gBAE3C,OAAOrP,GAAKhpB,KAChB,KAAKgpB,GAAKsF,SACN,OAAS/sB,EAAyBisB,MAC9B,KAAKzE,GAAamS,SAAU,OAAOlS,GAAKqR,gBACxC,KAAKtR,GAAawF,WAAY,OAAOvF,GAAKuR,kBAE9C,OAAOvR,GAAKsF,SAChB,KAAKtF,GAAK/kB,IAAK,OAAO+kB,GAAK/kB,IAC3B,KAAK+kB,GAAKU,KAAM,OAAOV,GAAKU,KAC5B,KAAKV,GAAK2Q,OAAQ,OAAO3Q,GAAK2Q,OAC9B,KAAK3Q,GAAKyB,MACN,OAASlpB,EAAsBylB,MAC3B,KAAK2B,GAAUwS,MAAO,OAAOnS,GAAK8Q,WAClC,KAAKnR,GAAU+B,OAAQ,OAAO1B,GAAKgR,YAEvC,OAAOhR,GAAKyB,MAChB,KAAKzB,GAAK0D,gBAAiB,OAAO1D,GAAK0D,gBACvC,KAAK1D,GAAKgB,cAAe,OAAOhB,GAAKgB,cACrC,KAAKhB,GAAKkR,WAAY,OAAOlR,GAAKkR,WAEtC,MAAM,IAAI3vB,MAAM,sBAAD,OAAuBye,GAAKznB,EAAKq5B,QAAO,KAC3D,CAkDCnF,GAAQx6B,UAAkBu7B,UAAY,KACtCf,GAAQx6B,UAAkBy7B,WAAa,KACvCjB,GAAQx6B,UAAkB27B,WAAa,KACvCnB,GAAQx6B,UAAkB67B,WAAa,KACvCrB,GAAQx6B,UAAkB+7B,WAAa,KACvCvB,GAAQx6B,UAAkBi8B,YAAc,KACxCzB,GAAQx6B,UAAkBm8B,YAAc,KACxC3B,GAAQx6B,UAAkBq8B,YAAc,KACxC7B,GAAQx6B,UAAkBy8B,aAAe,KACzCjC,GAAQx6B,UAAkB28B,aAAe,KACzCnC,GAAQx6B,UAAkB68B,aAAe,KACzCrC,GAAQx6B,UAAkBm9B,aAAe,KACzC3C,GAAQx6B,UAAkBq9B,qBAAuB,KACjD7C,GAAQx6B,UAAkBw9B,qBAAuB,KACjDhD,GAAQx6B,UAAkB09B,0BAA4B,KACtDlD,GAAQx6B,UAAkB49B,0BAA4B,KACtDpD,GAAQx6B,UAAkB89B,yBAA2B,KACrDtD,GAAQx6B,UAAkBi+B,gBAAkB,KAC5CzD,GAAQx6B,UAAkBm+B,qBAAuB,KACjD3D,GAAQx6B,UAAkBq+B,qBAAuB,KACjD7D,GAAQx6B,UAAkBu+B,oBAAsB,KAChD/D,GAAQx6B,UAAkB8+B,gBAAkB,KAC5CtE,GAAQx6B,UAAkBg/B,iBAAmB,KAC7CxE,GAAQx6B,UAAkBq/B,qBAAuB,KACjD7E,GAAQx6B,UAAkBu/B,uBAAyB,KCxK7C,IAAMY,GAAe,sFAsBvB,OAtBuB,iCACxB,SAAsDC,EAAmB/pB,GACrE,OAAQ+pB,IAAW/pB,GACfA,aAAiB+pB,EAAOt6B,aACxB0F,GAAS60B,cAAcD,EAAOE,OAAQjqB,EAAMiqB,OAEpD,GAAC,2BACD,SAAqDA,EAA6BC,GAC9E,OAAQD,IAAWC,GACfxgC,MAAMe,QAAQw/B,IACdvgC,MAAMe,QAAQy/B,IACdD,EAAOv9B,SAAWw9B,EAAOx9B,QACzBu9B,EAAOE,OAAM,SAACn2B,EAAGpI,GAAC,OAAKuJ,GAASi1B,aAAap2B,EAAGk2B,EAAOt+B,GAAG,GAElE,GAAC,0BACD,SAAuCoZ,EAAiBhF,GACpD,OAAQgF,IAAUhF,GACdA,aAAiBgF,EAAMvV,aACvBuV,EAAMlK,OAASkF,EAAMlF,MACrBkK,EAAMyZ,WAAaze,EAAMye,UACzBtpB,GAASkvB,MAAMrf,EAAM/U,KAAM+P,EAAM/P,KAEzC,KAAC,EAtBuB,CAAQk0B,IAyBpC,SAASkG,GAAuCp6B,EAAS+P,GACrD,OAAOA,aAAiB/P,EAAKR,WACjC,CAEA,SAAS66B,GAA+Br6B,EAAS+P,GAC7C,OAAQ/P,IAAS+P,GAAUqqB,GAAmBp6B,EAAM+P,EACxD,CAEA,SAASuqB,GAA0Bt6B,EAAS+P,GACxC,OAAQ/P,IAAS+P,GACbqqB,GAAmBp6B,EAAM+P,IACzB/P,EAAK2pB,WAAa5Z,EAAM4Z,UACxB3pB,EAAK4pB,WAAa7Z,EAAM6Z,QAEhC,CAEA,SAAS2Q,GAA8Bv6B,EAAS+P,GAC5C,OAAQ/P,IAAS+P,GACbqqB,GAAmBp6B,EAAM+P,IACzB/P,EAAKmqB,YAAcpa,EAAMoa,SAEjC,CASA,SAASqQ,GAA6Bx6B,EAAS+P,GAC3C,OAAQ/P,IAAS+P,GACbqqB,GAAmBp6B,EAAM+P,IACzB/P,EAAKisB,OAASlc,EAAMkc,IAE5B,CAEA,SAASwO,GAAsCz6B,EAAS+P,GACpD,OAAQ/P,IAAS+P,GACbqqB,GAAmBp6B,EAAM+P,IACzB/P,EAAKisB,OAASlc,EAAMkc,MACpBjsB,EAAK06B,WAAa3qB,EAAM2qB,QAEhC,CAEA,SAASC,GAA4B36B,EAAS+P,GAC1C,OAAQ/P,IAAS+P,GACbqqB,GAAmBp6B,EAAM+P,IACzB/P,EAAKisB,OAASlc,EAAMkc,MACpBjsB,EAAK2pB,WAAa5Z,EAAM4Z,QAEhC,CAkBA,SAASiR,GAA8B56B,EAAS+P,GAC5C,OAAQ/P,IAAS+P,GACbqqB,GAAmBp6B,EAAM+P,IACzB/P,EAAKylB,OAAS1V,EAAM0V,MACpBzlB,EAAK66B,QAAQX,OAAM,SAAC54B,EAAG3F,GAAC,OAAK2F,IAAMyO,EAAM8qB,QAAQl/B,EAAE,KACnDuJ,GAAS60B,cAAc/5B,EAAK86B,SAAU/qB,EAAM+qB,SAEpD,CAYA,SAASC,GAAoC/6B,EAAS+P,GAClD,OAAQ/P,IAAS+P,GACbqqB,GAAmBp6B,EAAM+P,IACzB/P,EAAKisB,OAASlc,EAAMkc,IAE5B,CAoBA4N,GAAengC,UAAUm7B,UAAwCwF,GACjER,GAAengC,UAAUo7B,UAAwCuF,GACjER,GAAengC,UAAUq7B,SAAwCuF,GACjET,GAAengC,UAAUu7B,UAAwCqF,GACjET,GAAengC,UAAUy7B,WAAwCmF,GACjET,GAAengC,UAAU27B,WAAwCiF,GACjET,GAAengC,UAAU67B,WAAwC+E,GACjET,GAAengC,UAAU+7B,WAAwC6E,GACjET,GAAengC,UAAUi8B,YAAwC2E,GACjET,GAAengC,UAAUm8B,YAAwCyE,GACjET,GAAengC,UAAUq8B,YAAwCuE,GACjET,GAAengC,UAAUu8B,WAAsCsE,GAC/DV,GAAengC,UAAUy8B,aAAsCoE,GAC/DV,GAAengC,UAAU28B,aAAsCkE,GAC/DV,GAAengC,UAAU68B,aAAsCgE,GAC/DV,GAAengC,UAAU88B,UAAwC6D,GACjER,GAAengC,UAAU+8B,YAAwC4D,GACjER,GAAengC,UAAUg9B,qBA3GzB,SAA2D12B,EAAS+P,GAChE,OAAQ/P,IAAS+P,GACbqqB,GAAmBp6B,EAAM+P,IACzB/P,EAAKorB,YAAcrb,EAAMqb,SAEjC,EAuGAyO,GAAengC,UAAUi9B,UAAuC6D,GAChEX,GAAengC,UAAUm9B,aAAuC2D,GAChEX,GAAengC,UAAUq9B,qBAAuCyD,GAChEX,GAAengC,UAAUs9B,eAAkCyD,GAC3DZ,GAAengC,UAAUw9B,qBAAkCuD,GAC3DZ,GAAengC,UAAU09B,0BAAkCqD,GAC3DZ,GAAengC,UAAU49B,0BAAkCmD,GAC3DZ,GAAengC,UAAU89B,yBAAkCiD,GAC3DZ,GAAengC,UAAU+9B,UAAuCkD,GAChEd,GAAengC,UAAUi+B,gBAAuCgD,GAChEd,GAAengC,UAAUm+B,qBAAuC8C,GAChEd,GAAengC,UAAUq+B,qBAAuC4C,GAChEd,GAAengC,UAAUu+B,oBAAuC0C,GAChEd,GAAengC,UAAUw+B,aAAwCmC,GACjER,GAAengC,UAAUy+B,UA5FzB,SAAqCn4B,EAAS+P,GAC1C,OAAQ/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","file":"static/js/2.f372ff12.chunk.js","sourcesContent":["// Current version.\nexport var VERSION = '1.13.6';\n\n// Establish the root object, `window` (`self`) in the browser, `global`\n// on the server, or `this` in some virtual machines. We use `self`\n// instead of `window` for `WebWorker` support.\nexport var root = (typeof self == 'object' && self.self === self && self) ||\n          (typeof global == 'object' && global.global === global && global) ||\n          Function('return this')() ||\n          {};\n\n// Save bytes in the minified (but not gzipped) version:\nexport var ArrayProto = Array.prototype, ObjProto = Object.prototype;\nexport var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n// Create quick reference variables for speed access to core prototypes.\nexport var push = ArrayProto.push,\n    slice = ArrayProto.slice,\n    toString = ObjProto.toString,\n    hasOwnProperty = ObjProto.hasOwnProperty;\n\n// Modern feature detection.\nexport var supportsArrayBuffer = typeof ArrayBuffer !== 'undefined',\n    supportsDataView = typeof DataView !== 'undefined';\n\n// All **ECMAScript 5+** native function implementations that we hope to use\n// are declared here.\nexport var nativeIsArray = Array.isArray,\n    nativeKeys = Object.keys,\n    nativeCreate = Object.create,\n    nativeIsView = supportsArrayBuffer && ArrayBuffer.isView;\n\n// Create references to these builtin functions because we override them.\nexport var _isNaN = isNaN,\n    _isFinite = isFinite;\n\n// Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\nexport var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\nexport var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n  'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n// The largest integer that can be represented exactly.\nexport var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap()\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap()\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event)\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            )\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault()\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    })\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true })\n\n    // Define accessors\n    const keys = Object.keys(event)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key))\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation()\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        data.immediateStopped = true\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation()\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this))\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this))\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype)\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event)\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto)\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event)\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    })\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key)\n            const isFunc = typeof descriptor.value === \"function\"\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            )\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto)\n        wrappers.set(proto, wrapper)\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nexport function wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event))\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nexport function isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nexport function setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nexport function setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nexport function setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener\n}\n","import {\n    isStopped,\n    setCurrentTarget,\n    setEventPhase,\n    setPassiveListener,\n    wrapEvent,\n} from \"./event.mjs\"\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap()\n\n// Listener types\nconst CAPTURE = 1\nconst BUBBLE = 2\nconst ATTRIBUTE = 3\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget)\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this)\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this)\n\n            // Traverse to the tail while removing old value.\n            let prev = null\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next)\n                    } else {\n                        listeners.delete(eventName)\n                    }\n                } else {\n                    prev = node\n                }\n\n                node = node.next\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                }\n                if (prev === null) {\n                    listeners.set(eventName, newNode)\n                } else {\n                    prev.next = newNode\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    )\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this)\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    })\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i])\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map())\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length)\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i]\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this)\n        const optionsIsObj = isObject(options)\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        }\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName)\n        if (node === undefined) {\n            listeners.set(eventName, newNode)\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node\n            node = node.next\n        }\n\n        // Add it.\n        prev.next = newNode\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this)\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n\n        let prev = null\n        let node = listeners.get(eventName)\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n                return\n            }\n\n            prev = node\n            node = node.next\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this)\n        const eventName = event.type\n        let node = listeners.get(eventName)\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event)\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n            } else {\n                prev = node\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            )\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent)\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err)\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent)\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next\n        }\n        setPassiveListener(wrappedEvent, null)\n        setEventPhase(wrappedEvent, 0)\n        setCurrentTarget(wrappedEvent, null)\n\n        return !wrappedEvent.defaultPrevented\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype)\n}\n\nexport { defineEventAttribute, EventTarget }\nexport default EventTarget\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","export default function _OverloadYield(value, kind) {\n  this.v = value, this.k = kind;\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _awaitAsyncGenerator(value) {\n  return new OverloadYield(value, 0);\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg),\n        value = result.value,\n        overloaded = value instanceof OverloadYield;\n      Promise.resolve(overloaded ? value.v : value).then(function (arg) {\n        if (overloaded) {\n          var nextKey = \"return\" === key ? \"return\" : \"next\";\n          if (!value.k || arg.done) return resume(nextKey, arg);\n          arg = gen[nextKey](arg).value;\n        }\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: !0\n        });\n        break;\n      case \"throw\":\n        front.reject(value);\n        break;\n      default:\n        front.resolve({\n          value: value,\n          done: !1\n        });\n    }\n    (front = front.next) ? resume(front.key, front.arg) : back = null;\n  }\n  this._invoke = function (key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n      back ? back = back.next = request : (front = back = request, resume(key, arg));\n    });\n  }, \"function\" != typeof gen[\"return\"] && (this[\"return\"] = void 0);\n}\nAsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n}, AsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n}, AsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n}, AsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};","import AsyncGenerator from \"./AsyncGenerator.js\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _asyncGeneratorDelegate(inner) {\n  var iter = {},\n    waiting = !1;\n  function pump(key, value) {\n    return waiting = !0, value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    }), {\n      done: !1,\n      value: new OverloadYield(value, 1)\n    };\n  }\n  return iter[\"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  }, iter.next = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"next\", value);\n  }, \"function\" == typeof inner[\"throw\"] && (iter[\"throw\"] = function (value) {\n    if (waiting) throw waiting = !1, value;\n    return pump(\"throw\", value);\n  }), \"function\" == typeof inner[\"return\"] && (iter[\"return\"] = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"return\", value);\n  }), iter;\n}","export default function _asyncIterator(iterable) {\n  var method,\n    async,\n    sync,\n    retry = 2;\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from './buffer';\nimport {\n    TextDecoder as TextDecoderPolyfill,\n    TextEncoder as TextEncoderPolyfill,\n} from 'text-encoding-utf-8';\n\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n\n/** @ignore */\nexport const decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer?: ArrayBuffer | ArrayBufferView) => decoder.decode(buffer);\n    }\n    return (input: ArrayBufferLike | ArrayBufferView) => {\n        const { buffer, byteOffset, length } = toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : TextDecoderPolyfill);\n\n/** @ignore */\nexport const encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value?: string) => encoder.encode(value);\n    }\n    return (input = '') => toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : TextEncoderPolyfill);\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\n\n/** @ignore */\nexport const ITERATOR_DONE: any = Object.freeze({ done: true, value: void (0) });\n\n/** @ignore */\nexport type FileHandle = import('fs').promises.FileHandle;\n/** @ignore */\nexport type ArrowJSONLike = { schema: any; batches?: any[]; dictionaries?: any[]; };\n/** @ignore */\nexport type ReadableDOMStreamOptions = { type: 'bytes' | undefined, autoAllocateChunkSize?: number, highWaterMark?: number };\n\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(private _json: ArrowJSONLike) {}\n    public get schema(): any { return this._json['schema']; }\n    public get batches(): any[] { return (this._json['batches'] || []) as any[]; }\n    public get dictionaries(): any[] { return (this._json['dictionaries'] || []) as any[]; }\n}\n\n/** @ignore */\nexport interface Readable<T> {\n\n    readonly closed: Promise<void>;\n    cancel(reason?: any): Promise<void>;\n\n    read(size?: number | null): Promise<T | null>;\n    peek(size?: number | null): Promise<T | null>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(size?: number | null): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nexport interface Writable<T> {\n    readonly closed: Promise<void>;\n    close(): void;\n    write(chunk: T): void;\n    abort(reason?: any): void;\n}\n\n/** @ignore */\nexport interface ReadableWritable<TReadable, TWritable> extends Readable<TReadable>, Writable<TWritable> {\n    [Symbol.asyncIterator](): AsyncIterableIterator<TReadable>;\n    toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<TReadable>;\n    toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n}\n\n/** @ignore */\nexport abstract class ReadableInterop<T> {\n\n    public abstract toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<T>;\n    public abstract toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n\n    public tee(): [ReadableStream<T>, ReadableStream<T>] {\n        return this._getDOMStream().tee();\n    }\n    public pipe<R extends NodeJS.WritableStream>(writable: R, options?: { end?: boolean; }) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    public pipeTo(writable: WritableStream<T>, options?: PipeOptions) { return this._getDOMStream().pipeTo(writable, options); }\n    public pipeThrough<R extends ReadableStream<any>>(duplex: { writable: WritableStream<T>, readable: R }, options?: PipeOptions) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n\n    protected _DOMStream?: ReadableStream<T>;\n    private _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n\n    protected _nodeStream?: import('stream').Readable;\n    private _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n\n/** @ignore */\ntype Resolution<T> = { resolve: (value?: T | PromiseLike<T>) => void; reject: (reason?: any) => void; };\n\n/** @ignore */\nexport class AsyncQueue<TReadable = Uint8Array, TWritable = TReadable> extends ReadableInterop<TReadable>\n    implements AsyncIterableIterator<TReadable>, ReadableWritable<TReadable, TWritable> {\n\n    protected _values: TWritable[] = [];\n    protected _error?: { error: any; };\n    protected _closedPromise: Promise<void>;\n    protected _closedPromiseResolve?: (value?: any) => void;\n    protected resolvers: Resolution<IteratorResult<TReadable>>[] = [];\n\n    constructor() {\n        super();\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public write(value: TWritable) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift()!.resolve({ done: false, value } as any));\n        }\n    }\n    public abort(value?: any) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift()!.reject({ done: true, value }));\n        }\n    }\n    public close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift()!.resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n\n    public [Symbol.asyncIterator]() { return this; }\n    public toDOMStream(options?: ReadableDOMStreamOptions) {\n        return streamAdapters.toDOMStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public toNodeStream(options?: import('stream').ReadableOptions) {\n        return streamAdapters.toNodeStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public async throw(_?: any) { await this.abort(_); return ITERATOR_DONE; }\n    public async return(_?: any) { await this.close(); return ITERATOR_DONE; }\n\n    public async read(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'peek')).value; }\n    public next(..._args: any[]): Promise<IteratorResult<TReadable>> {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift()! } as any);\n        } else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        } else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        } else {\n            return new Promise<IteratorResult<TReadable>>((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n\n    protected _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ReadableInterop, ArrowJSONLike } from '../io/interfaces';\n\n/** @ignore */\ntype FSReadStream = import('fs').ReadStream;\n/** @ignore */\ntype FileHandle = import('fs').promises.FileHandle;\n\n/** @ignore */\nexport interface Subscription {\n    unsubscribe: () => void;\n}\n\n/** @ignore */\nexport interface Observer<T> {\n    closed?: boolean;\n    next: (value: T) => void;\n    error: (err: any) => void;\n    complete: () => void;\n}\n\n/** @ignore */\nexport interface Observable<T> {\n    subscribe: (observer: Observer<T>) => Subscription;\n}\n\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [<any> BigIntUnavailable, false];\n})() as [BigIntConstructor, boolean];\n\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [<any> BigInt64ArrayUnavailable, false];\n})() as [BigInt64ArrayConstructor, boolean];\n\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [<any> BigUint64ArrayUnavailable, false];\n})() as [BigUint64ArrayConstructor, boolean];\n\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n\n/** @ignore */ const isNumber = (x: any) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x: any) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x: any) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x: any): x is Object => x != null && Object(x) === x;\n\n/** @ignore */\nexport const isPromise = <T = any>(x: any): x is PromiseLike<T> => {\n    return isObject(x) && isFunction(x.then);\n};\n\n/** @ignore */\nexport const isObservable = <T = any>(x: any): x is Observable<T> => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n\n/** @ignore */\nexport const isIterable = <T = any>(x: any): x is Iterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n\n/** @ignore */\nexport const isAsyncIterable = <T = any>(x: any): x is AsyncIterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n\n/** @ignore */\nexport const isArrowJSON = (x: any): x is ArrowJSONLike  => {\n    return isObject(x) && isObject(x['schema']);\n};\n\n/** @ignore */\nexport const isArrayLike = <T = any>(x: any): x is ArrayLike<T> => {\n    return isObject(x) && isNumber(x['length']);\n};\n\n/** @ignore */\nexport const isIteratorResult = <T = any>(x: any): x is IteratorResult<T> => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n\n/** @ignore */\nexport const isUnderlyingSink = <T = any>(x: any): x is UnderlyingSink<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n\n/** @ignore */\nexport const isFileHandle = (x: any): x is FileHandle => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n\n/** @ignore */\nexport const isFSReadStream = (x: any): x is FSReadStream => {\n    return isReadableNodeStream(x) && isNumber((<any> x)['bytesRead']);\n};\n\n/** @ignore */\nexport const isFetchResponse = (x: any): x is Response => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n\n/** @ignore */\nexport const isWritableDOMStream = <T = any>(x: any): x is WritableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableDOMStream = <T = any>(x: any): x is ReadableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isWritableNodeStream = (x: any): x is NodeJS.WritableStream => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableNodeStream = (x: any): x is NodeJS.ReadableStream => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport { encodeUtf8 } from '../util/utf8';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks: Uint8Array[]) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset: number, yOffset: number, xLen: number, yLen: number;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n\n/** @ignore */\nexport function memcpy<TTarget extends ArrayBufferView, TSource extends ArrayBufferView>(target: TTarget, source: TSource, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n\n/** @ignore */\nexport function joinUint8Arrays(chunks: Uint8Array[], size?: number | null): [Uint8Array, Uint8Array[], number] {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source: Uint8Array, sliced: Uint8Array, buffer: Uint8Array | void;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            } else if (sliced.length === source.length) { index++; }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\n\n/** @ignore */\nexport type ArrayBufferViewInput = ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined  |\n                    IteratorResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> |\n          ReadableStreamReadResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> ;\n\n/** @ignore */\nexport function toArrayBufferView<T extends TypedArray>(ArrayBufferViewCtor: TypedArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView<T extends BigIntArray>(ArrayBufferViewCtor: BigIntArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView(ArrayBufferViewCtor: any, input: ArrayBufferViewInput) {\n\n    let value: any = isIteratorResult(input) ? input.value : input;\n\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) { return new ArrayBufferViewCtor(0); }\n    if (typeof value === 'string') { value = encodeUtf8(value); }\n    if (value instanceof ArrayBuffer) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof SharedArrayBuf) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof ByteBuffer) { return toArrayBufferView(ArrayBufferViewCtor, value.bytes()); }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n\n/** @ignore */ export const toInt8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewIteratorInput = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nexport function* toArrayBufferViewIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewIteratorInput) {\n\n    const wrap = function*<T>(x: T) { yield x; };\n    const buffers: Iterable<ArrayBufferViewInput> =\n                   (typeof source === 'string') ? wrap(source)\n                 : (ArrayBuffer.isView(source)) ? wrap(source)\n              : (source instanceof ArrayBuffer) ? wrap(source)\n           : (source instanceof SharedArrayBuf) ? wrap(source)\n    : !isIterable<ArrayBufferViewInput>(source) ? wrap(source) : source;\n\n    yield* pump((function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewAsyncIteratorInput = AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput> | PromiseLike<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewAsyncIteratorInput): AsyncIterableIterator<T> {\n\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise<ArrayBufferViewInput>(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n\n    const wrap = async function*<T>(x: T) { yield await x; };\n    const emit = async function* <T extends Iterable<any>>(source: T) {\n        yield* pump((function*(it: Iterator<any>) {\n            let r: IteratorResult<any> = <any> null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n\n    const buffers: AsyncIterable<ArrayBufferViewInput> =\n                        (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n                      : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n                   : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n          : isIterable<ArrayBufferViewInput>(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n    : !isAsyncIterable<ArrayBufferViewInput>(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                                                     : source; // otherwise if AsyncIterable, use it\n\n    yield* pump((async function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n\n/** @ignore */\nexport function rebaseValueOffsets(offset: number, length: number, valueOffsets: Int32Array) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n\n/** @ignore */\nexport function compareArrayLike<T extends ArrayLike<any>>(a: T, b: T) {\n    let i = 0, n = a.length;\n    if (n !== b.length) { return false; }\n    if (n > 0) {\n        do { if (a[i] !== b[i]) { return false; } } while (++i < n);\n    }\n    return true;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport {\n    toUint8Array,\n    joinUint8Arrays,\n    ArrayBufferViewInput,\n    toUint8ArrayIterator,\n    toUint8ArrayAsyncIterator\n} from '../util/buffer';\n\nimport { ReadableDOMStreamOptions } from './interfaces';\n\n/** @ignore */\nexport default {\n    fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n        return pump(fromIterable<T>(source));\n    },\n    fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromAsyncIterable<T>(source));\n    },\n    fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromDOMStream<T>(source));\n    },\n    fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: import('stream').ReadableOptions): import('stream').Readable {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nfunction* fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n\n/** @ignore */\nasync function* fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done = false, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    } finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n\n/** @ignore */\nclass AdaptiveByteReader<T extends ArrayBufferViewInput> {\n\n    private supportsBYOB: boolean;\n    private byobReader: ReadableStreamBYOBReader | null = null;\n    private defaultReader: ReadableStreamDefaultReader<T> | null = null;\n    private reader: ReadableStreamBYOBReader | ReadableStreamDefaultReader<T> | null;\n\n    constructor(private source: ReadableStream<T>) {\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        } catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n\n    get closed(): Promise<void> {\n        return this.reader ? this.reader['closed'].catch(() => {}) : Promise.resolve();\n    }\n\n    releaseLock(): void {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n\n    async cancel(reason?: any): Promise<void> {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => {}));\n        source && (source['locked'] && this.releaseLock());\n    }\n\n    async read(size?: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = toUint8Array(result as ReadableStreamReadResult<Uint8Array>));\n        return result as ReadableStreamReadResult<Uint8Array>;\n    }\n\n    private getDefaultReader() {\n        if (this.byobReader) { this.releaseLock(); }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.defaultReader);\n    }\n\n    private getBYOBReader() {\n        if (this.defaultReader) { this.releaseLock(); }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.byobReader);\n    }\n\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    private async readFromBYOBReader(size: number) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n\n/** @ignore */\nasync function readInto(reader: ReadableStreamBYOBReader, buffer: ArrayBufferLike, offset: number, size: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n\n/** @ignore */\ntype EventName = 'end' | 'error' | 'readable';\n/** @ignore */\ntype Event = [EventName, (_: any) => void, Promise<[EventName, Error | null]>];\n/** @ignore */\nconst onEvent = <T extends string>(stream: NodeJS.ReadableStream, event: T) => {\n    let handler = (_: any) => resolve([event, _]);\n    let resolve: (value?: [T, any] | PromiseLike<[T, any]>) => void;\n    return [event, handler, new Promise<[T, any]>(\n        (r) => (resolve = r) && stream['once'](event, handler)\n    )] as Event;\n};\n\n/** @ignore */\nasync function* fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n\n    let events: Event[] = [];\n    let event: EventName = 'error';\n    let done = false, err: Error | null = null;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array | Buffer | string;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield <any> null);\n\n    // ignore stdin if it's a TTY\n    if ((stream as any)['isTTY']) { return yield new Uint8Array(0); }\n\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n\n        do {\n            events[2] = onEvent(stream, 'readable');\n\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') { break; }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read'](undefined));\n                } else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n\n    function cleanup<T extends Error | null | void>(events: Event[], err?: T) {\n        buffer = buffers = <any> null;\n        return new Promise<T>(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = (stream as any)['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            } catch (e) { err = e || err; } finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { DataType } from './type';\nimport { Chunked } from './vector/chunked';\n\n/** @ignore */\nexport interface Clonable<R extends AbstractVector> {\n    clone(...args: any[]): R;\n}\n\n/** @ignore */\nexport interface Sliceable<R extends AbstractVector> {\n    slice(begin?: number, end?: number): R;\n}\n\n/** @ignore */\nexport interface Applicative<T extends DataType, R extends Chunked> {\n    concat(...others: Vector<T>[]): R;\n    readonly [Symbol.isConcatSpreadable]: boolean;\n}\n\nexport interface AbstractVector<T extends DataType = any>\n    extends Clonable<Vector<T>>,\n            Sliceable<Vector<T>>,\n            Applicative<T, Chunked<T>> {\n\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\nexport abstract class AbstractVector<T extends DataType = any> implements Iterable<T['TValue'] | null> {\n\n    public abstract readonly data: Data<T>;\n    public abstract readonly type: T;\n    public abstract readonly typeId: T['TType'];\n    public abstract readonly length: number;\n    public abstract readonly stride: number;\n    public abstract readonly nullCount: number;\n    public abstract readonly byteLength: number;\n    public abstract readonly numChildren: number;\n\n    public abstract readonly ArrayType: T['ArrayType'];\n\n    public abstract isValid(index: number): boolean;\n    public abstract get(index: number): T['TValue'] | null;\n    public abstract set(index: number, value: T['TValue'] | null): void;\n    public abstract indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n    public abstract [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n\n    public abstract toArray(): T['TArray'];\n    public abstract getChildAt<R extends DataType = any>(index: number): Vector<R> | null;\n}\n\nexport { AbstractVector as Vector };\n","/* tslint:disable:class-name */\n\n// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MetadataVersion {\n        /**\n         * 0.1.0\n         */\n        V1 = 0,\n\n        /**\n         * 0.2.0\n         */\n        V2 = 1,\n\n        /**\n         * 0.3.0 -> 0.7.1\n         */\n        V3 = 2,\n\n        /**\n         * >= 0.8.0\n         */\n        V4 = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum UnionMode {\n        Sparse = 0,\n        Dense = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Precision {\n        HALF = 0,\n        SINGLE = 1,\n        DOUBLE = 2\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum DateUnit {\n        DAY = 0,\n        MILLISECOND = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum TimeUnit {\n        SECOND = 0,\n        MILLISECOND = 1,\n        MICROSECOND = 2,\n        NANOSECOND = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum IntervalUnit {\n        YEAR_MONTH = 0,\n        DAY_TIME = 1\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Type {\n        NONE = 0,\n        Null = 1,\n        Int = 2,\n        FloatingPoint = 3,\n        Binary = 4,\n        Utf8 = 5,\n        Bool = 6,\n        Decimal = 7,\n        Date = 8,\n        Time = 9,\n        Timestamp = 10,\n        Interval = 11,\n        List = 12,\n        Struct_ = 13,\n        Union = 14,\n        FixedSizeBinary = 15,\n        FixedSizeList = 16,\n        Map = 17,\n        Duration = 18,\n        LargeBinary = 19,\n        LargeUtf8 = 20,\n        LargeList = 21\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Endianness {\n        Little = 0,\n        Big = 1\n    }\n}\n\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Null {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Null\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Null {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Null= obj\n         * @returns Null\n         */\n        static getRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n            return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startNull(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Null.startNull(builder);\n            return Null.endNull(builder);\n        }\n    }\n}\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Struct_ {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Struct_\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Struct_ {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Struct_= obj\n         * @returns Struct_\n         */\n        static getRootAsStruct_(bb: flatbuffers.ByteBuffer, obj?: Struct_): Struct_ {\n            return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startStruct_(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Struct_.startStruct_(builder);\n            return Struct_.endStruct_(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class List {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns List\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): List {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param List= obj\n         * @returns List\n         */\n        static getRootAsList(bb: flatbuffers.ByteBuffer, obj?: List): List {\n            return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            List.startList(builder);\n            return List.endList(builder);\n        }\n    }\n}\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeList= obj\n         * @returns LargeList\n         */\n        static getRootAsLargeList(bb: flatbuffers.ByteBuffer, obj?: LargeList): LargeList {\n            return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeList.startLargeList(builder);\n            return LargeList.endLargeList(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeList= obj\n         * @returns FixedSizeList\n         */\n        static getRootAsFixedSizeList(bb: flatbuffers.ByteBuffer, obj?: FixedSizeList): FixedSizeList {\n            return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of list items per value\n         *\n         * @returns number\n         */\n        listSize(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeList(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number listSize\n         */\n        static addListSize(builder: flatbuffers.Builder, listSize: number) {\n            builder.addFieldInt32(0, listSize, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeList(builder: flatbuffers.Builder, listSize: number): flatbuffers.Offset {\n            FixedSizeList.startFixedSizeList(builder);\n            FixedSizeList.addListSize(builder, listSize);\n            return FixedSizeList.endFixedSizeList(builder);\n        }\n    }\n}\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Map {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Map\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Map {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Map= obj\n         * @returns Map\n         */\n        static getRootAsMap(bb: flatbuffers.ByteBuffer, obj?: Map): Map {\n            return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Set to true if the keys within each value are sorted\n         *\n         * @returns boolean\n         */\n        keysSorted(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMap(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean keysSorted\n         */\n        static addKeysSorted(builder: flatbuffers.Builder, keysSorted: boolean) {\n            builder.addFieldInt8(0, +keysSorted, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMap(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createMap(builder: flatbuffers.Builder, keysSorted: boolean): flatbuffers.Offset {\n            Map.startMap(builder);\n            Map.addKeysSorted(builder, keysSorted);\n            return Map.endMap(builder);\n        }\n    }\n}\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Union {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Union\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Union {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Union= obj\n         * @returns Union\n         */\n        static getRootAsUnion(bb: flatbuffers.ByteBuffer, obj?: Union): Union {\n            return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.UnionMode\n         */\n        mode(): org.apache.arrow.flatbuf.UnionMode {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n        }\n\n        /**\n         * @param number index\n         * @returns number\n         */\n        typeIds(index: number): number | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n        }\n\n        /**\n         * @returns number\n         */\n        typeIdsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns Int32Array\n         */\n        typeIdsArray(): Int32Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUnion(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.UnionMode mode\n         */\n        static addMode(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode) {\n            builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeIdsOffset\n         */\n        static addTypeIds(builder: flatbuffers.Builder, typeIdsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, typeIdsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createTypeIdsVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addInt32(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startTypeIdsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUnion(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUnion(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode, typeIdsOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Union.startUnion(builder);\n            Union.addMode(builder, mode);\n            Union.addTypeIds(builder, typeIdsOffset);\n            return Union.endUnion(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Int {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Int\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Int {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Int= obj\n         * @returns Int\n         */\n        static getRootAsInt(bb: flatbuffers.ByteBuffer, obj?: Int): Int {\n            return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns boolean\n         */\n        isSigned(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInt(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(0, bitWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isSigned\n         */\n        static addIsSigned(builder: flatbuffers.Builder, isSigned: boolean) {\n            builder.addFieldInt8(1, +isSigned, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInt(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInt(builder: flatbuffers.Builder, bitWidth: number, isSigned: boolean): flatbuffers.Offset {\n            Int.startInt(builder);\n            Int.addBitWidth(builder, bitWidth);\n            Int.addIsSigned(builder, isSigned);\n            return Int.endInt(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FloatingPoint {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FloatingPoint\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FloatingPoint {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FloatingPoint= obj\n         * @returns FloatingPoint\n         */\n        static getRootAsFloatingPoint(bb: flatbuffers.ByteBuffer, obj?: FloatingPoint): FloatingPoint {\n            return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Precision\n         */\n        precision(): org.apache.arrow.flatbuf.Precision {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFloatingPoint(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Precision precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision) {\n            builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFloatingPoint(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFloatingPoint(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision): flatbuffers.Offset {\n            FloatingPoint.startFloatingPoint(builder);\n            FloatingPoint.addPrecision(builder, precision);\n            return FloatingPoint.endFloatingPoint(builder);\n        }\n    }\n}\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Utf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Utf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Utf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Utf8= obj\n         * @returns Utf8\n         */\n        static getRootAsUtf8(bb: flatbuffers.ByteBuffer, obj?: Utf8): Utf8 {\n            return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Utf8.startUtf8(builder);\n            return Utf8.endUtf8(builder);\n        }\n    }\n}\n/**\n * Opaque binary data\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Binary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Binary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Binary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Binary= obj\n         * @returns Binary\n         */\n        static getRootAsBinary(bb: flatbuffers.ByteBuffer, obj?: Binary): Binary {\n            return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Binary.startBinary(builder);\n            return Binary.endBinary(builder);\n        }\n    }\n}\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeUtf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeUtf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeUtf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeUtf8= obj\n         * @returns LargeUtf8\n         */\n        static getRootAsLargeUtf8(bb: flatbuffers.ByteBuffer, obj?: LargeUtf8): LargeUtf8 {\n            return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeUtf8.startLargeUtf8(builder);\n            return LargeUtf8.endLargeUtf8(builder);\n        }\n    }\n}\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeBinary= obj\n         * @returns LargeBinary\n         */\n        static getRootAsLargeBinary(bb: flatbuffers.ByteBuffer, obj?: LargeBinary): LargeBinary {\n            return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeBinary.startLargeBinary(builder);\n            return LargeBinary.endLargeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeBinary= obj\n         * @returns FixedSizeBinary\n         */\n        static getRootAsFixedSizeBinary(bb: flatbuffers.ByteBuffer, obj?: FixedSizeBinary): FixedSizeBinary {\n            return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of bytes per value\n         *\n         * @returns number\n         */\n        byteWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number byteWidth\n         */\n        static addByteWidth(builder: flatbuffers.Builder, byteWidth: number) {\n            builder.addFieldInt32(0, byteWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeBinary(builder: flatbuffers.Builder, byteWidth: number): flatbuffers.Offset {\n            FixedSizeBinary.startFixedSizeBinary(builder);\n            FixedSizeBinary.addByteWidth(builder, byteWidth);\n            return FixedSizeBinary.endFixedSizeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Bool {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Bool\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Bool {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Bool= obj\n         * @returns Bool\n         */\n        static getRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {\n            return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBool(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Bool.startBool(builder);\n            return Bool.endBool(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Decimal {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Decimal\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Decimal {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Decimal= obj\n         * @returns Decimal\n         */\n        static getRootAsDecimal(bb: flatbuffers.ByteBuffer, obj?: Decimal): Decimal {\n            return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Total number of decimal digits\n         *\n         * @returns number\n         */\n        precision(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Number of digits after the decimal point \".\"\n         *\n         * @returns number\n         */\n        scale(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDecimal(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: number) {\n            builder.addFieldInt32(0, precision, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number scale\n         */\n        static addScale(builder: flatbuffers.Builder, scale: number) {\n            builder.addFieldInt32(1, scale, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDecimal(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDecimal(builder: flatbuffers.Builder, precision: number, scale: number): flatbuffers.Offset {\n            Decimal.startDecimal(builder);\n            Decimal.addPrecision(builder, precision);\n            Decimal.addScale(builder, scale);\n            return Decimal.endDecimal(builder);\n        }\n    }\n}\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Date {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Date\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Date {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Date= obj\n         * @returns Date\n         */\n        static getRootAsDate(bb: flatbuffers.ByteBuffer, obj?: Date): Date {\n            return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.DateUnit\n         */\n        unit(): org.apache.arrow.flatbuf.DateUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDate(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.DateUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDate(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDate(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit): flatbuffers.Offset {\n            Date.startDate(builder);\n            Date.addUnit(builder, unit);\n            return Date.endDate(builder);\n        }\n    }\n}\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Time {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Time\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Time {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Time= obj\n         * @returns Time\n         */\n        static getRootAsTime(bb: flatbuffers.ByteBuffer, obj?: Time): Time {\n            return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 32;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTime(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(1, bitWidth, 32);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTime(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTime(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, bitWidth: number): flatbuffers.Offset {\n            Time.startTime(builder);\n            Time.addUnit(builder, unit);\n            Time.addBitWidth(builder, bitWidth);\n            return Time.endTime(builder);\n        }\n    }\n}\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Timestamp {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Timestamp\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Timestamp {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Timestamp= obj\n         * @returns Timestamp\n         */\n        static getRootAsTimestamp(bb: flatbuffers.ByteBuffer, obj?: Timestamp): Timestamp {\n            return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n        }\n\n        /**\n         * The time zone is a string indicating the name of a time zone, one of:\n         *\n         * * As used in the Olson time zone database (the \"tz database\" or\n         *   \"tzdata\"), such as \"America/New_York\"\n         * * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n         *\n         * Whether a timezone string is present indicates different semantics about\n         * the data:\n         *\n         * * If the time zone is null or equal to an empty string, the data is \"time\n         *   zone naive\" and shall be displayed *as is* to the user, not localized\n         *   to the locale of the user. This data can be though of as UTC but\n         *   without having \"UTC\" as the time zone, it is not considered to be\n         *   localized to any time zone\n         *\n         * * If the time zone is set to a valid value, values can be displayed as\n         *   \"localized\" to that time zone, even though the underlying 64-bit\n         *   integers are identical to the same data stored in UTC. Converting\n         *   between time zones is a metadata-only operation and does not change the\n         *   underlying values\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        timezone(): string | null;\n        timezone(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        timezone(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTimestamp(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset timezoneOffset\n         */\n        static addTimezone(builder: flatbuffers.Builder, timezoneOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, timezoneOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTimestamp(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTimestamp(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, timezoneOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Timestamp.startTimestamp(builder);\n            Timestamp.addUnit(builder, unit);\n            Timestamp.addTimezone(builder, timezoneOffset);\n            return Timestamp.endTimestamp(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Interval {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Interval\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Interval {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Interval= obj\n         * @returns Interval\n         */\n        static getRootAsInterval(bb: flatbuffers.ByteBuffer, obj?: Interval): Interval {\n            return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.IntervalUnit\n         */\n        unit(): org.apache.arrow.flatbuf.IntervalUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInterval(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.IntervalUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInterval(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInterval(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit): flatbuffers.Offset {\n            Interval.startInterval(builder);\n            Interval.addUnit(builder, unit);\n            return Interval.endInterval(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Duration {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Duration\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Duration {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Duration= obj\n         * @returns Duration\n         */\n        static getRootAsDuration(bb: flatbuffers.ByteBuffer, obj?: Duration): Duration {\n            return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDuration(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDuration(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDuration(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit): flatbuffers.Offset {\n            Duration.startDuration(builder);\n            Duration.addUnit(builder, unit);\n            return Duration.endDuration(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class KeyValue {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns KeyValue\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): KeyValue {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param KeyValue= obj\n         * @returns KeyValue\n         */\n        static getRootAsKeyValue(bb: flatbuffers.ByteBuffer, obj?: KeyValue): KeyValue {\n            return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        key(): string | null;\n        key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        key(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        value(): string | null;\n        value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        value(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startKeyValue(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset keyOffset\n         */\n        static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, keyOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset valueOffset\n         */\n        static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, valueOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endKeyValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createKeyValue(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n            KeyValue.startKeyValue(builder);\n            KeyValue.addKey(builder, keyOffset);\n            KeyValue.addValue(builder, valueOffset);\n            return KeyValue.endKeyValue(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryEncoding {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryEncoding\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryEncoding {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryEncoding= obj\n         * @returns DictionaryEncoding\n         */\n        static getRootAsDictionaryEncoding(bb: flatbuffers.ByteBuffer, obj?: DictionaryEncoding): DictionaryEncoding {\n            return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * The known dictionary id in the application where this data is used. In\n         * the file or streaming formats, the dictionary ids are found in the\n         * DictionaryBatch messages\n         *\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * The dictionary indices are constrained to be positive integers. If this\n         * field is null, the indices must be signed int32\n         *\n         * @param org.apache.arrow.flatbuf.Int= obj\n         * @returns org.apache.arrow.flatbuf.Int|null\n         */\n        indexType(obj?: org.apache.arrow.flatbuf.Int): org.apache.arrow.flatbuf.Int | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * By default, dictionaries are not ordered, or the order does not have\n         * semantic meaning. In some statistical, applications, dictionary-encoding\n         * is used to represent ordered categorical data, and we provide a way to\n         * preserve that metadata here\n         *\n         * @returns boolean\n         */\n        isOrdered(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryEncoding(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset indexTypeOffset\n         */\n        static addIndexType(builder: flatbuffers.Builder, indexTypeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, indexTypeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isOrdered\n         */\n        static addIsOrdered(builder: flatbuffers.Builder, isOrdered: boolean) {\n            builder.addFieldInt8(2, +isOrdered, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryEncoding(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryEncoding(builder: flatbuffers.Builder, id: flatbuffers.Long, indexTypeOffset: flatbuffers.Offset, isOrdered: boolean): flatbuffers.Offset {\n            DictionaryEncoding.startDictionaryEncoding(builder);\n            DictionaryEncoding.addId(builder, id);\n            DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n            DictionaryEncoding.addIsOrdered(builder, isOrdered);\n            return DictionaryEncoding.endDictionaryEncoding(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Field {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Field\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Field {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Field= obj\n         * @returns Field\n         */\n        static getRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n            return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Name is not required, in i.e. a List\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        name(): string | null;\n        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        name(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * Whether or not this field can contain nulls. Should be true in general.\n         *\n         * @returns boolean\n         */\n        nullable(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Type\n         */\n        typeType(): org.apache.arrow.flatbuf.Type {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n        }\n\n        /**\n         * This is the type of the decoded value if the field is dictionary encoded.\n         *\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        type<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * Present only if the field is dictionary encoded.\n         *\n         * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n         * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n         */\n        dictionary(obj?: org.apache.arrow.flatbuf.DictionaryEncoding): org.apache.arrow.flatbuf.DictionaryEncoding | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * children apply only to nested data types like Struct, List and Union. For\n         * primitive types children will have length 0.\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        children(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        childrenLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * User-defined metadata\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startField(builder: flatbuffers.Builder) {\n            builder.startObject(7);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nameOffset\n         */\n        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, nameOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean nullable\n         */\n        static addNullable(builder: flatbuffers.Builder, nullable: boolean) {\n            builder.addFieldInt8(1, +nullable, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Type typeType\n         */\n        static addTypeType(builder: flatbuffers.Builder, typeType: org.apache.arrow.flatbuf.Type) {\n            builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeOffset\n         */\n        static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, typeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionaryOffset\n         */\n        static addDictionary(builder: flatbuffers.Builder, dictionaryOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, dictionaryOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset childrenOffset\n         */\n        static addChildren(builder: flatbuffers.Builder, childrenOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(5, childrenOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createChildrenVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startChildrenVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(6, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endField(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createField(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, nullable: boolean, typeType: org.apache.arrow.flatbuf.Type, typeOffset: flatbuffers.Offset, dictionaryOffset: flatbuffers.Offset, childrenOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Field.startField(builder);\n            Field.addName(builder, nameOffset);\n            Field.addNullable(builder, nullable);\n            Field.addTypeType(builder, typeType);\n            Field.addType(builder, typeOffset);\n            Field.addDictionary(builder, dictionaryOffset);\n            Field.addChildren(builder, childrenOffset);\n            Field.addCustomMetadata(builder, customMetadataOffset);\n            return Field.endField(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Buffer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Buffer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Buffer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The relative offset into the shared memory page where the bytes for this\n         * buffer starts\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The absolute length (in bytes) of the memory buffer. The memory is found\n         * from offset (inclusive) to offset + length (non-inclusive).\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param flatbuffers.Long length\n         * @returns flatbuffers.Offset\n         */\n        static createBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(length);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Schema {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Schema\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Schema {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Schema= obj\n         * @returns Schema\n         */\n        static getRootAsSchema(bb: flatbuffers.ByteBuffer, obj?: Schema): Schema {\n            return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * endianness of the buffer\n         * it is Little Endian by default\n         * if endianness doesn't match the underlying system then the vectors need to be converted\n         *\n         * @returns org.apache.arrow.flatbuf.Endianness\n         */\n        endianness(): org.apache.arrow.flatbuf.Endianness {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        fields(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        fieldsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startSchema(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Endianness endianness\n         */\n        static addEndianness(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness) {\n            builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset fieldsOffset\n         */\n        static addFields(builder: flatbuffers.Builder, fieldsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, fieldsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createFieldsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endSchema(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishSchemaBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createSchema(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness, fieldsOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Schema.startSchema(builder);\n            Schema.addEndianness(builder, endianness);\n            Schema.addFields(builder, fieldsOffset);\n            Schema.addCustomMetadata(builder, customMetadataOffset);\n            return Schema.endSchema(builder);\n        }\n    }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\nexport namespace org.apache.arrow.flatbuf {\n    export import Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n}\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MessageHeader {\n        NONE = 0,\n        Schema = 1,\n        DictionaryBatch = 2,\n        RecordBatch = 3,\n        Tensor = 4,\n        SparseTensor = 5\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FieldNode {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FieldNode\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FieldNode {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The number of value slots in the Arrow array at this level of a nested\n         * tree\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The number of observed nulls. Fields with null_count == 0 may choose not\n         * to write their physical validity bitmap out as a materialized buffer,\n         * instead setting the length of the bitmap buffer to 0.\n         *\n         * @returns flatbuffers.Long\n         */\n        nullCount(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         * @param flatbuffers.Long null_count\n         * @returns flatbuffers.Offset\n         */\n        static createFieldNode(builder: flatbuffers.Builder, length: flatbuffers.Long, null_count: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(null_count);\n            builder.writeInt64(length);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class RecordBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns RecordBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): RecordBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param RecordBatch= obj\n         * @returns RecordBatch\n         */\n        static getRootAsRecordBatch(bb: flatbuffers.ByteBuffer, obj?: RecordBatch): RecordBatch {\n            return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * number of records / rows. The arrays in the batch should all have this\n         * length\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * Nodes correspond to the pre-ordered flattened logical schema\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.FieldNode= obj\n         * @returns org.apache.arrow.flatbuf.FieldNode\n         */\n        nodes(index: number, obj?: org.apache.arrow.flatbuf.FieldNode): org.apache.arrow.flatbuf.FieldNode | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        nodesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Buffers correspond to the pre-ordered flattened buffer tree\n         *\n         * The number of buffers appended to this list depends on the schema. For\n         * example, most primitive arrays will have 2 buffers, 1 for the validity\n         * bitmap and 1 for the values. For struct arrays, there will only be a\n         * single buffer for the validity (nulls) bitmap\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Buffer= obj\n         * @returns org.apache.arrow.flatbuf.Buffer\n         */\n        buffers(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Buffer): NS7624605610262437867.org.apache.arrow.flatbuf.Buffer | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        buffersLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startRecordBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         */\n        static addLength(builder: flatbuffers.Builder, length: flatbuffers.Long) {\n            builder.addFieldInt64(0, length, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nodesOffset\n         */\n        static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, nodesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset buffersOffset\n         */\n        static addBuffers(builder: flatbuffers.Builder, buffersOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, buffersOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startBuffersVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endRecordBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createRecordBatch(builder: flatbuffers.Builder, length: flatbuffers.Long, nodesOffset: flatbuffers.Offset, buffersOffset: flatbuffers.Offset): flatbuffers.Offset {\n            RecordBatch.startRecordBatch(builder);\n            RecordBatch.addLength(builder, length);\n            RecordBatch.addNodes(builder, nodesOffset);\n            RecordBatch.addBuffers(builder, buffersOffset);\n            return RecordBatch.endRecordBatch(builder);\n        }\n    }\n}\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryBatch= obj\n         * @returns DictionaryBatch\n         */\n        static getRootAsDictionaryBatch(bb: flatbuffers.ByteBuffer, obj?: DictionaryBatch): DictionaryBatch {\n            return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.RecordBatch= obj\n         * @returns org.apache.arrow.flatbuf.RecordBatch|null\n         */\n        data(obj?: org.apache.arrow.flatbuf.RecordBatch): org.apache.arrow.flatbuf.RecordBatch | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * If isDelta is true the values in the dictionary are to be appended to a\n         * dictionary with the indicated id\n         *\n         * @returns boolean\n         */\n        isDelta(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dataOffset\n         */\n        static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, dataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isDelta\n         */\n        static addIsDelta(builder: flatbuffers.Builder, isDelta: boolean) {\n            builder.addFieldInt8(2, +isDelta, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryBatch(builder: flatbuffers.Builder, id: flatbuffers.Long, dataOffset: flatbuffers.Offset, isDelta: boolean): flatbuffers.Offset {\n            DictionaryBatch.startDictionaryBatch(builder);\n            DictionaryBatch.addId(builder, id);\n            DictionaryBatch.addData(builder, dataOffset);\n            DictionaryBatch.addIsDelta(builder, isDelta);\n            return DictionaryBatch.endDictionaryBatch(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Message {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Message\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Message {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Message= obj\n         * @returns Message\n         */\n        static getRootAsMessage(bb: flatbuffers.ByteBuffer, obj?: Message): Message {\n            return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MessageHeader\n         */\n        headerType(): org.apache.arrow.flatbuf.MessageHeader {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n        }\n\n        /**\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        header<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue): NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMessage(builder: flatbuffers.Builder) {\n            builder.startObject(5);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MessageHeader headerType\n         */\n        static addHeaderType(builder: flatbuffers.Builder, headerType: org.apache.arrow.flatbuf.MessageHeader) {\n            builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset headerOffset\n         */\n        static addHeader(builder: flatbuffers.Builder, headerOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, headerOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long bodyLength\n         */\n        static addBodyLength(builder: flatbuffers.Builder, bodyLength: flatbuffers.Long) {\n            builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMessage(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishMessageBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createMessage(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, headerType: org.apache.arrow.flatbuf.MessageHeader, headerOffset: flatbuffers.Offset, bodyLength: flatbuffers.Long, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Message.startMessage(builder);\n            Message.addVersion(builder, version);\n            Message.addHeaderType(builder, headerType);\n            Message.addHeader(builder, headerOffset);\n            Message.addBodyLength(builder, bodyLength);\n            Message.addCustomMetadata(builder, customMetadataOffset);\n            return Message.endMessage(builder);\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as Schema_ from './fb/Schema';\nimport * as Message_ from './fb/Message';\n\nexport import ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexport import DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexport import TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexport import Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexport import UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexport import IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexport import MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport import MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n    /** The default placeholder type */\n    NONE            =  0,\n    /** A NULL type having no physical storage */\n    Null            =  1,\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Int             =  2,\n    /** 2, 4, or 8-byte floating point value */\n    Float           =  3,\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Binary          =  4,\n    /** UTF8 variable-length string as List<Char> */\n    Utf8            =  5,\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Bool            =  6,\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Decimal         =  7,\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Date            =  8,\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Time            =  9,\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Timestamp       = 10,\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Interval        = 11,\n    /** A list of some logical data type */\n    List            = 12,\n    /** Struct of logical types */\n    Struct          = 13,\n    /** Union of logical types */\n    Union           = 14,\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    FixedSizeBinary = 15,\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    FixedSizeList   = 16,\n    /** Map of named logical types */\n    Map             = 17,\n\n    /** Dictionary aka Category type */\n    Dictionary            = -1,\n    Int8                  = -2,\n    Int16                 = -3,\n    Int32                 = -4,\n    Int64                 = -5,\n    Uint8                 = -6,\n    Uint16                = -7,\n    Uint32                = -8,\n    Uint64                = -9,\n    Float16               = -10,\n    Float32               = -11,\n    Float64               = -12,\n    DateDay               = -13,\n    DateMillisecond       = -14,\n    TimestampSecond       = -15,\n    TimestampMillisecond  = -16,\n    TimestampMicrosecond  = -17,\n    TimestampNanosecond   = -18,\n    TimeSecond            = -19,\n    TimeMillisecond       = -20,\n    TimeMicrosecond       = -21,\n    TimeNanosecond        = -22,\n    DenseUnion            = -23,\n    SparseUnion           = -24,\n    IntervalDayTime       = -25,\n    IntervalYearMonth     = -26,\n}\n\nexport enum BufferType {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    OFFSET = 0,\n\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    DATA = 1,\n\n    /**\n     * Bit vector indicating if each value is null\n     */\n    VALIDITY = 2,\n\n    /**\n     * Type vector used in Union type\n     */\n    TYPE = 3\n  }\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function getBool(_data: any, _index: number, byte: number, bit: number) {\n    return (byte & 1 << bit) !== 0;\n}\n\n/** @ignore */\nexport function getBit(_data: any, _index: number, byte: number, bit: number): 0 | 1 {\n    return (byte & 1 << bit) >> bit as (0 | 1);\n}\n\n/** @ignore */\nexport function setBool(bytes: Uint8Array, index: number, value: any) {\n    return value ?\n        !!(bytes[index >> 3] |=  (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false ;\n}\n\n/** @ignore */\nexport function truncateBitmap(offset: number, length: number, bitmap: Uint8Array) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n\n/** @ignore */\nexport function packBools(values: Iterable<any>) {\n    let xs: number[] = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) { xs[i++] = byte; }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n\n/** @ignore */\nexport function* iterateBits<T>(bytes: Uint8Array, begin: number, length: number, context: any,\n                                get: (context: any, index: number, byte: number, bit: number) => T) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\n\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data: Uint8Array, lhs: number, rhs: number): number {\n    if (rhs - lhs <= 0) { return 0; }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n        // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n        popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3)\n    );\n}\n\n/** @ignore */\nexport function popcnt_array(arr: ArrayBufferView, byteOffset?: number, byteLength?: number) {\n    let cnt = 0, pos = byteOffset! | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len =  byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n\n/** @ignore */\nexport function popcnt_uint32(uint32: number): number {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum';\nimport { DataType, Float, Int, Date_, Interval, Time, Timestamp, Union, } from './type';\n\nexport abstract class Visitor {\n    public visitMany(nodes: any[], ...args: any[][]) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    public visit(...args: any[]) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    public getVisitFn(node: any, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    public visitNull            (_node: any, ..._args: any[]): any { return null; }\n    public visitBool            (_node: any, ..._args: any[]): any { return null; }\n    public visitInt             (_node: any, ..._args: any[]): any { return null; }\n    public visitFloat           (_node: any, ..._args: any[]): any { return null; }\n    public visitUtf8            (_node: any, ..._args: any[]): any { return null; }\n    public visitBinary          (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeBinary (_node: any, ..._args: any[]): any { return null; }\n    public visitDate            (_node: any, ..._args: any[]): any { return null; }\n    public visitTimestamp       (_node: any, ..._args: any[]): any { return null; }\n    public visitTime            (_node: any, ..._args: any[]): any { return null; }\n    public visitDecimal         (_node: any, ..._args: any[]): any { return null; }\n    public visitList            (_node: any, ..._args: any[]): any { return null; }\n    public visitStruct          (_node: any, ..._args: any[]): any { return null; }\n    public visitUnion           (_node: any, ..._args: any[]): any { return null; }\n    public visitDictionary      (_node: any, ..._args: any[]): any { return null; }\n    public visitInterval        (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeList   (_node: any, ..._args: any[]): any { return null; }\n    public visitMap             (_node: any, ..._args: any[]): any { return null; }\n}\n\n/** @ignore */\nfunction getVisitFn<T extends DataType>(visitor: Visitor, node: any, throwIfNotFound = true) {\n    let fn: any = null;\n    let dtype: T['TType'] = Type.NONE;\n    // tslint:disable\n    if      (node instanceof Data    ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof Vector  ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof DataType) { dtype = inferDType(node      as T); }\n    else if (typeof (dtype = node) !== 'number') { dtype = Type[node] as any as T['TType']; }\n\n    switch (dtype) {\n        case Type.Null:                 fn = visitor.visitNull; break;\n        case Type.Bool:                 fn = visitor.visitBool; break;\n        case Type.Int:                  fn = visitor.visitInt; break;\n        case Type.Int8:                 fn = visitor.visitInt8 || visitor.visitInt; break;\n        case Type.Int16:                fn = visitor.visitInt16 || visitor.visitInt; break;\n        case Type.Int32:                fn = visitor.visitInt32 || visitor.visitInt; break;\n        case Type.Int64:                fn = visitor.visitInt64 || visitor.visitInt; break;\n        case Type.Uint8:                fn = visitor.visitUint8 || visitor.visitInt; break;\n        case Type.Uint16:               fn = visitor.visitUint16 || visitor.visitInt; break;\n        case Type.Uint32:               fn = visitor.visitUint32 || visitor.visitInt; break;\n        case Type.Uint64:               fn = visitor.visitUint64 || visitor.visitInt; break;\n        case Type.Float:                fn = visitor.visitFloat; break;\n        case Type.Float16:              fn = visitor.visitFloat16 || visitor.visitFloat; break;\n        case Type.Float32:              fn = visitor.visitFloat32 || visitor.visitFloat; break;\n        case Type.Float64:              fn = visitor.visitFloat64 || visitor.visitFloat; break;\n        case Type.Utf8:                 fn = visitor.visitUtf8; break;\n        case Type.Binary:               fn = visitor.visitBinary; break;\n        case Type.FixedSizeBinary:      fn = visitor.visitFixedSizeBinary; break;\n        case Type.Date:                 fn = visitor.visitDate; break;\n        case Type.DateDay:              fn = visitor.visitDateDay || visitor.visitDate; break;\n        case Type.DateMillisecond:      fn = visitor.visitDateMillisecond || visitor.visitDate; break;\n        case Type.Timestamp:            fn = visitor.visitTimestamp; break;\n        case Type.TimestampSecond:      fn = visitor.visitTimestampSecond || visitor.visitTimestamp; break;\n        case Type.TimestampMillisecond: fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp; break;\n        case Type.TimestampMicrosecond: fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp; break;\n        case Type.TimestampNanosecond:  fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp; break;\n        case Type.Time:                 fn = visitor.visitTime; break;\n        case Type.TimeSecond:           fn = visitor.visitTimeSecond || visitor.visitTime; break;\n        case Type.TimeMillisecond:      fn = visitor.visitTimeMillisecond || visitor.visitTime; break;\n        case Type.TimeMicrosecond:      fn = visitor.visitTimeMicrosecond || visitor.visitTime; break;\n        case Type.TimeNanosecond:       fn = visitor.visitTimeNanosecond || visitor.visitTime; break;\n        case Type.Decimal:              fn = visitor.visitDecimal; break;\n        case Type.List:                 fn = visitor.visitList; break;\n        case Type.Struct:               fn = visitor.visitStruct; break;\n        case Type.Union:                fn = visitor.visitUnion; break;\n        case Type.DenseUnion:           fn = visitor.visitDenseUnion || visitor.visitUnion; break;\n        case Type.SparseUnion:          fn = visitor.visitSparseUnion || visitor.visitUnion; break;\n        case Type.Dictionary:           fn = visitor.visitDictionary; break;\n        case Type.Interval:             fn = visitor.visitInterval; break;\n        case Type.IntervalDayTime:      fn = visitor.visitIntervalDayTime || visitor.visitInterval; break;\n        case Type.IntervalYearMonth:    fn = visitor.visitIntervalYearMonth || visitor.visitInterval; break;\n        case Type.FixedSizeList:        fn = visitor.visitFixedSizeList; break;\n        case Type.Map:                  fn = visitor.visitMap; break;\n    }\n    if (typeof fn === 'function') return fn;\n    if (!throwIfNotFound) return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n\n/** @ignore */\nfunction inferDType<T extends DataType>(type: T): Type {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int:\n            const { bitWidth, isSigned } = (type as any as Int);\n            switch (bitWidth) {\n                case  8: return isSigned ? Type.Int8  : Type.Uint8 ;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            return Type.Int;\n        case Type.Float:\n            switch((type as any as Float).precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch ((type as any as Time).unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            return Type.Time;\n        case Type.Timestamp:\n            switch ((type as any as Timestamp).unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            return Type.Timestamp;\n        case Type.Date:\n            switch ((type as any as Date_).unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            return Type.Date;\n        case Type.Interval:\n            switch ((type as any as Interval).unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch ((type as any as Union).mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n\nexport interface Visitor {\n    visitNull                  (node: any, ...args: any[]): any;\n    visitBool                  (node: any, ...args: any[]): any;\n    visitInt                   (node: any, ...args: any[]): any;\n    visitInt8?                 (node: any, ...args: any[]): any;\n    visitInt16?                (node: any, ...args: any[]): any;\n    visitInt32?                (node: any, ...args: any[]): any;\n    visitInt64?                (node: any, ...args: any[]): any;\n    visitUint8?                (node: any, ...args: any[]): any;\n    visitUint16?               (node: any, ...args: any[]): any;\n    visitUint32?               (node: any, ...args: any[]): any;\n    visitUint64?               (node: any, ...args: any[]): any;\n    visitFloat                 (node: any, ...args: any[]): any;\n    visitFloat16?              (node: any, ...args: any[]): any;\n    visitFloat32?              (node: any, ...args: any[]): any;\n    visitFloat64?              (node: any, ...args: any[]): any;\n    visitUtf8                  (node: any, ...args: any[]): any;\n    visitBinary                (node: any, ...args: any[]): any;\n    visitFixedSizeBinary       (node: any, ...args: any[]): any;\n    visitDate                  (node: any, ...args: any[]): any;\n    visitDateDay?              (node: any, ...args: any[]): any;\n    visitDateMillisecond?      (node: any, ...args: any[]): any;\n    visitTimestamp             (node: any, ...args: any[]): any;\n    visitTimestampSecond?      (node: any, ...args: any[]): any;\n    visitTimestampMillisecond? (node: any, ...args: any[]): any;\n    visitTimestampMicrosecond? (node: any, ...args: any[]): any;\n    visitTimestampNanosecond?  (node: any, ...args: any[]): any;\n    visitTime                  (node: any, ...args: any[]): any;\n    visitTimeSecond?           (node: any, ...args: any[]): any;\n    visitTimeMillisecond?      (node: any, ...args: any[]): any;\n    visitTimeMicrosecond?      (node: any, ...args: any[]): any;\n    visitTimeNanosecond?       (node: any, ...args: any[]): any;\n    visitDecimal               (node: any, ...args: any[]): any;\n    visitList                  (node: any, ...args: any[]): any;\n    visitStruct                (node: any, ...args: any[]): any;\n    visitUnion                 (node: any, ...args: any[]): any;\n    visitDenseUnion?           (node: any, ...args: any[]): any;\n    visitSparseUnion?          (node: any, ...args: any[]): any;\n    visitDictionary            (node: any, ...args: any[]): any;\n    visitInterval              (node: any, ...args: any[]): any;\n    visitIntervalDayTime?      (node: any, ...args: any[]): any;\n    visitIntervalYearMonth?    (node: any, ...args: any[]): any;\n    visitFixedSizeList         (node: any, ...args: any[]): any;\n    visitMap                   (node: any, ...args: any[]): any;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Visitor.prototype as any).visitInt8 = null;\n(Visitor.prototype as any).visitInt16 = null;\n(Visitor.prototype as any).visitInt32 = null;\n(Visitor.prototype as any).visitInt64 = null;\n(Visitor.prototype as any).visitUint8 = null;\n(Visitor.prototype as any).visitUint16 = null;\n(Visitor.prototype as any).visitUint32 = null;\n(Visitor.prototype as any).visitUint64 = null;\n(Visitor.prototype as any).visitFloat16 = null;\n(Visitor.prototype as any).visitFloat32 = null;\n(Visitor.prototype as any).visitFloat64 = null;\n(Visitor.prototype as any).visitDateDay = null;\n(Visitor.prototype as any).visitDateMillisecond = null;\n(Visitor.prototype as any).visitTimestampSecond = null;\n(Visitor.prototype as any).visitTimestampMillisecond = null;\n(Visitor.prototype as any).visitTimestampMicrosecond = null;\n(Visitor.prototype as any).visitTimestampNanosecond = null;\n(Visitor.prototype as any).visitTimeSecond = null;\n(Visitor.prototype as any).visitTimeMillisecond = null;\n(Visitor.prototype as any).visitTimeMicrosecond = null;\n(Visitor.prototype as any).visitTimeNanosecond = null;\n(Visitor.prototype as any).visitDenseUnion = null;\n(Visitor.prototype as any).visitSparseUnion = null;\n(Visitor.prototype as any).visitIntervalDayTime = null;\n(Visitor.prototype as any).visitIntervalYearMonth = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface TypeComparator extends Visitor {\n    visit<T extends DataType>(type: T, other?: DataType | null): other is T;\n    visitMany<T extends DataType>(nodes: T[], others?: DataType[] | null): boolean[];\n    getVisitFn<T extends DataType>(node: VectorType<T> |  Data<T> | T): (other?: DataType | null) => other is T;\n    visitNull                 <T extends Null>                 (type: T, other?: DataType | null): other is T;\n    visitBool                 <T extends Bool>                 (type: T, other?: DataType | null): other is T;\n    visitInt                  <T extends Int>                  (type: T, other?: DataType | null): other is T;\n    visitInt8                 <T extends Int8>                 (type: T, other?: DataType | null): other is T;\n    visitInt16                <T extends Int16>                (type: T, other?: DataType | null): other is T;\n    visitInt32                <T extends Int32>                (type: T, other?: DataType | null): other is T;\n    visitInt64                <T extends Int64>                (type: T, other?: DataType | null): other is T;\n    visitUint8                <T extends Uint8>                (type: T, other?: DataType | null): other is T;\n    visitUint16               <T extends Uint16>               (type: T, other?: DataType | null): other is T;\n    visitUint32               <T extends Uint32>               (type: T, other?: DataType | null): other is T;\n    visitUint64               <T extends Uint64>               (type: T, other?: DataType | null): other is T;\n    visitFloat                <T extends Float>                (type: T, other?: DataType | null): other is T;\n    visitFloat16              <T extends Float16>              (type: T, other?: DataType | null): other is T;\n    visitFloat32              <T extends Float32>              (type: T, other?: DataType | null): other is T;\n    visitFloat64              <T extends Float64>              (type: T, other?: DataType | null): other is T;\n    visitUtf8                 <T extends Utf8>                 (type: T, other?: DataType | null): other is T;\n    visitBinary               <T extends Binary>               (type: T, other?: DataType | null): other is T;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (type: T, other?: DataType | null): other is T;\n    visitDate                 <T extends Date_>                (type: T, other?: DataType | null): other is T;\n    visitDateDay              <T extends DateDay>              (type: T, other?: DataType | null): other is T;\n    visitDateMillisecond      <T extends DateMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestamp            <T extends Timestamp>            (type: T, other?: DataType | null): other is T;\n    visitTimestampSecond      <T extends TimestampSecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (type: T, other?: DataType | null): other is T;\n    visitTime                 <T extends Time>                 (type: T, other?: DataType | null): other is T;\n    visitTimeSecond           <T extends TimeSecond>           (type: T, other?: DataType | null): other is T;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (type: T, other?: DataType | null): other is T;\n    visitDecimal              <T extends Decimal>              (type: T, other?: DataType | null): other is T;\n    visitList                 <T extends List>                 (type: T, other?: DataType | null): other is T;\n    visitStruct               <T extends Struct>               (type: T, other?: DataType | null): other is T;\n    visitUnion                <T extends Union>                (type: T, other?: DataType | null): other is T;\n    visitDenseUnion           <T extends DenseUnion>           (type: T, other?: DataType | null): other is T;\n    visitSparseUnion          <T extends SparseUnion>          (type: T, other?: DataType | null): other is T;\n    visitDictionary           <T extends Dictionary>           (type: T, other?: DataType | null): other is T;\n    visitInterval             <T extends Interval>             (type: T, other?: DataType | null): other is T;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (type: T, other?: DataType | null): other is T;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (type: T, other?: DataType | null): other is T;\n    visitFixedSizeList        <T extends FixedSizeList>        (type: T, other?: DataType | null): other is T;\n    visitMap                  <T extends Map_>                 (type: T, other?: DataType | null): other is T;\n}\n\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas<T extends { [key: string]: DataType }>(schema: Schema<T>, other?: Schema | null): other is Schema<T> {\n        return (schema === other) || (\n            other instanceof schema.constructor &&\n            instance.compareFields(schema.fields, other.fields)\n        );\n    }\n    compareFields<T extends { [key: string]: DataType }>(fields: Field<T[keyof T]>[], others?: Field[] | null): others is Field<T[keyof T]>[] {\n        return (fields === others) || (\n            Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => instance.compareField(f, others[i]))\n        );\n    }\n    compareField<T extends DataType = any>(field: Field<T>, other?: Field | null): other is Field<T> {\n        return (field === other) || (\n            other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            instance.visit(field.type, other.type)\n        );\n    }\n}\n\nfunction compareConstructor<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return other instanceof type.constructor;\n}\n\nfunction compareAny<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return (type === other) || compareConstructor(type, other);\n}\n\nfunction compareInt<T extends Int>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned\n    );\n}\n\nfunction compareFloat<T extends Float>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.precision === other.precision\n    );\n}\n\nfunction compareFixedSizeBinary<T extends FixedSizeBinary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth\n    );\n}\n\nfunction compareDate<T extends Date_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareTimestamp<T extends Timestamp>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone\n    );\n}\n\nfunction compareTime<T extends Time>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth\n    );\n}\n\nfunction compareList<T extends List>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareStruct<T extends Struct>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareUnion<T extends Union>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareDictionary<T extends Dictionary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(<any> type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary)\n    );\n}\n\nfunction compareInterval<T extends Interval>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareFixedSizeList<T extends FixedSizeList>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareMap<T extends Map_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nTypeComparator.prototype.visitNull                 =             compareAny;\nTypeComparator.prototype.visitBool                 =             compareAny;\nTypeComparator.prototype.visitInt                  =             compareInt;\nTypeComparator.prototype.visitInt8                 =             compareInt;\nTypeComparator.prototype.visitInt16                =             compareInt;\nTypeComparator.prototype.visitInt32                =             compareInt;\nTypeComparator.prototype.visitInt64                =             compareInt;\nTypeComparator.prototype.visitUint8                =             compareInt;\nTypeComparator.prototype.visitUint16               =             compareInt;\nTypeComparator.prototype.visitUint32               =             compareInt;\nTypeComparator.prototype.visitUint64               =             compareInt;\nTypeComparator.prototype.visitFloat                =           compareFloat;\nTypeComparator.prototype.visitFloat16              =           compareFloat;\nTypeComparator.prototype.visitFloat32              =           compareFloat;\nTypeComparator.prototype.visitFloat64              =           compareFloat;\nTypeComparator.prototype.visitUtf8                 =             compareAny;\nTypeComparator.prototype.visitBinary               =             compareAny;\nTypeComparator.prototype.visitFixedSizeBinary      = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate                 =            compareDate;\nTypeComparator.prototype.visitDateDay              =            compareDate;\nTypeComparator.prototype.visitDateMillisecond      =            compareDate;\nTypeComparator.prototype.visitTimestamp            =       compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond      =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond  =       compareTimestamp;\nTypeComparator.prototype.visitTime                 =            compareTime;\nTypeComparator.prototype.visitTimeSecond           =            compareTime;\nTypeComparator.prototype.visitTimeMillisecond      =            compareTime;\nTypeComparator.prototype.visitTimeMicrosecond      =            compareTime;\nTypeComparator.prototype.visitTimeNanosecond       =            compareTime;\nTypeComparator.prototype.visitDecimal              =             compareAny;\nTypeComparator.prototype.visitList                 =            compareList;\nTypeComparator.prototype.visitStruct               =          compareStruct;\nTypeComparator.prototype.visitUnion                =           compareUnion;\nTypeComparator.prototype.visitDenseUnion           =           compareUnion;\nTypeComparator.prototype.visitSparseUnion          =           compareUnion;\nTypeComparator.prototype.visitDictionary           =      compareDictionary;\nTypeComparator.prototype.visitInterval             =        compareInterval;\nTypeComparator.prototype.visitIntervalDayTime      =        compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth    =        compareInterval;\nTypeComparator.prototype.visitFixedSizeList        =   compareFixedSizeList;\nTypeComparator.prototype.visitMap                  =             compareMap;\n\n/** @ignore */\nexport const instance = new TypeComparator();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport { Field } from './schema';\nimport { flatbuffers } from 'flatbuffers';\nimport { TypedArrayConstructor } from './interfaces';\nimport { VectorType as V, TypeToDataType } from './interfaces';\nimport { instance as comparer } from './visitor/typecomparator';\n\nimport Long = flatbuffers.Long;\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n/** @ignore */\nexport type RowLike<T extends { [key: string]: DataType }> =\n      ( Iterable<[string, T[keyof T]['TValue'] | null]> )\n    & { [P in keyof T]: T[P]['TValue'] | null }\n    & { get<K extends keyof T>(key: K): T[K]['TValue'] | null; }\n    & { set<K extends keyof T>(key: K, val: T[K]['TValue'] | null): void; }\n    ;\n\n/** @ignore */\nexport type MapLike<K extends DataType = any, V extends DataType = any> =\n      { [P in K['TValue']]: V['TValue'] | null }\n    & ( Map<K['TValue'], V['TValue'] | null> )\n    ;\n\nexport interface DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n\n    // @ts-ignore\n    public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static            isNull (x: any): x is Null            { return x && x.typeId === Type.Null;            }\n    /** @nocollapse */ static             isInt (x: any): x is Int_            { return x && x.typeId === Type.Int;             }\n    /** @nocollapse */ static           isFloat (x: any): x is Float           { return x && x.typeId === Type.Float;           }\n    /** @nocollapse */ static          isBinary (x: any): x is Binary          { return x && x.typeId === Type.Binary;          }\n    /** @nocollapse */ static            isUtf8 (x: any): x is Utf8            { return x && x.typeId === Type.Utf8;            }\n    /** @nocollapse */ static            isBool (x: any): x is Bool            { return x && x.typeId === Type.Bool;            }\n    /** @nocollapse */ static         isDecimal (x: any): x is Decimal         { return x && x.typeId === Type.Decimal;         }\n    /** @nocollapse */ static            isDate (x: any): x is Date_           { return x && x.typeId === Type.Date;            }\n    /** @nocollapse */ static            isTime (x: any): x is Time_           { return x && x.typeId === Type.Time;            }\n    /** @nocollapse */ static       isTimestamp (x: any): x is Timestamp_      { return x && x.typeId === Type.Timestamp;       }\n    /** @nocollapse */ static        isInterval (x: any): x is Interval_       { return x && x.typeId === Type.Interval;        }\n    /** @nocollapse */ static            isList (x: any): x is List            { return x && x.typeId === Type.List;            }\n    /** @nocollapse */ static          isStruct (x: any): x is Struct          { return x && x.typeId === Type.Struct;          }\n    /** @nocollapse */ static           isUnion (x: any): x is Union_          { return x && x.typeId === Type.Union;           }\n    /** @nocollapse */ static isFixedSizeBinary (x: any): x is FixedSizeBinary { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static   isFixedSizeList (x: any): x is FixedSizeList   { return x && x.typeId === Type.FixedSizeList;   }\n    /** @nocollapse */ static             isMap (x: any): x is Map_            { return x && x.typeId === Type.Map;             }\n    /** @nocollapse */ static      isDictionary (x: any): x is Dictionary      { return x && x.typeId === Type.Dictionary;      }\n\n    public get typeId(): TType { return <any> Type.NONE; }\n    public compareTo(other: DataType): other is TypeToDataType<TType> {\n        return comparer.visit(this, other);\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any> proto).children = null;\n        (<any> proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null; }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => {\n        return proto[Symbol.toStringTag] = 'Null';\n    })(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int   ]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray;    TValue: number | bigint | Int32Array | Uint32Array; };\n    [Type.Int8  ]: { bitWidth:           8; isSigned: true;         TArray: Int8Array;   TValue: number; };\n    [Type.Int16 ]: { bitWidth:          16; isSigned: true;         TArray: Int16Array;  TValue: number; };\n    [Type.Int32 ]: { bitWidth:          32; isSigned: true;         TArray: Int32Array;  TValue: number; };\n    [Type.Int64 ]: { bitWidth:          64; isSigned: true;         TArray: Int32Array;  TValue: bigint | Int32Array | Uint32Array; };\n    [Type.Uint8 ]: { bitWidth:           8; isSigned: false;        TArray: Uint8Array;  TValue: number; };\n    [Type.Uint16]: { bitWidth:          16; isSigned: false;        TArray: Uint16Array; TValue: number; };\n    [Type.Uint32]: { bitWidth:          32; isSigned: false;        TArray: Uint32Array; TValue: number; };\n    [Type.Uint64]: { bitWidth:          64; isSigned: false;        TArray: Uint32Array; TValue: bigint | Int32Array | Uint32Array; };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue']; }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n                public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType(): TypedArrayConstructor<IType[T]['TArray']> {\n        switch (this.bitWidth) {\n            case  8: return this.isSigned ?  Int8Array :  Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any> proto).isSigned = null;\n        (<any> proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> { constructor() { super(true, 8); } }\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> { constructor() { super(true, 16); } }\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> { constructor() { super(true, 32); } }\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> { constructor() { super(true, 64); } }\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> { constructor() { super(false, 8); } }\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> { constructor() { super(false, 16); } }\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> { constructor() { super(false, 32); } }\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> { constructor() { super(false, 64); } }\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float  ]: { precision: Precision;        TArray: FloatArray;    TValue: number; };\n    [Type.Float16]: { precision: Precision.HALF;   TArray: Uint16Array;   TValue: number; };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array;  TValue: number; };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array;  TValue: number; };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number; }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any> proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array>; }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n                public readonly precision: number) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any> proto).scale = null;\n        (<any> proto).precision = null;\n        (<any> proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time           ]: { unit: TimeUnit;             TValue: number | Int32Array };\n    [Type.TimeSecond     ]: { unit: TimeUnit.SECOND;      TValue: number;             };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number;             };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: Int32Array;         };\n    [Type.TimeNanosecond ]: { unit: TimeUnit.NANOSECOND;  TValue: Int32Array;         };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> { TArray: Int32Array; TValue: TimesType[T]['TValue']; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n                public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any> proto).unit = null;\n        (<any> proto).bitWidth = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> { TArray: Int32Array; TValue: number; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n                public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any> proto).unit = null;\n        (<any> proto).timezone = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> { TArray: Int32Array; TValue: Int32Array; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }>  { TArray: IterableArrayLike<T>; TValue: V<T>; }\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct> { TArray: IterableArrayLike<RowLike<T>>; TValue: RowLike<T>; dataTypes: T; }\n/** @ignore */\nexport class Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct, T> {\n    public readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array>; }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public readonly mode: UnionMode;\n    public readonly typeIds: Int32Array;\n    public readonly children: Field<any>[];\n    public readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n                typeIds: number[] | Int32Array,\n                children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() { return `${this[Symbol.toStringTag]}<${\n        this.children.map((x) => `${x.type}`).join(` | `)\n    }>`; }\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any> proto).mode = null;\n        (<any> proto).typeIds = null;\n        (<any> proto).children = null;\n        (<any> proto).typeIdToChildIndex = null;\n        (<any> proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any> proto).byteWidth = null;\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList> { TArray: IterableArrayLike<T['TArray']>; TValue: V<T>; }\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any> proto).children = null;\n        (<any> proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    TArray: IterableArrayLike<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey, value: TValue }>;\n    TValue: MapLike<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    constructor(child: Field<Struct<{ key: TKey, value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public readonly keysSorted: boolean;\n    public readonly children: Field<Struct<{ key: TKey, value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any> proto).children = null;\n        (<any> proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> { TArray: TKey['TArray']; TValue: T['TValue']; }\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public readonly id: number;\n    public readonly indices: TKey;\n    public readonly dictionary: T;\n    public readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any> proto).id = null;\n        (<any> proto).indices = null;\n        (<any> proto).isOrdered = null;\n        (<any> proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport interface IterableArrayLike<T = any> extends ArrayLike<T>, Iterable<T> {}\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    let t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { truncateBitmap } from './util/bit';\nimport { popcnt_bit_range } from './util/bit';\nimport { BufferType, UnionMode, Type } from './enum';\nimport { DataType, SparseUnion, DenseUnion, strideForType } from './type';\nimport { toArrayBufferView, toUint8Array, toInt32Array } from './util/buffer';\nimport {\n    Dictionary,\n    Null, Int, Float,\n    Binary, Bool, Utf8, Decimal,\n    Date_, Time, Timestamp, Interval,\n    List, Struct, Union, FixedSizeBinary, FixedSizeList, Map_,\n} from './type';\n\n// When slicing, we do not know the null count of the sliced range without\n// doing some computation. To avoid doing this eagerly, we set the null count\n// to -1 (any negative number will do). When Vector.nullCount is called the\n// first time, the null count will be computed. See ARROW-33\n/** @ignore */ export type kUnknownNullCount = -1;\n/** @ignore */ export const kUnknownNullCount = -1;\n\n/** @ignore */ export type NullBuffer = Uint8Array | null | undefined;\n/** @ignore */ export type TypeIdsBuffer = Int8Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type ValueOffsetsBuffer = Int32Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type DataBuffer<T extends DataType> = T['TArray'] | ArrayLike<number> | Iterable<number> | undefined;\n\n/** @ignore */\nexport interface Buffers<T extends DataType> {\n      [BufferType.OFFSET]: Int32Array;\n        [BufferType.DATA]: T['TArray'];\n    [BufferType.VALIDITY]: Uint8Array;\n        [BufferType.TYPE]: T['TArray'];\n}\n\n/** @ignore */\nexport interface Data<T extends DataType = DataType> {\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\n/** @ignore */\nexport class Data<T extends DataType = DataType> {\n\n    public readonly type: T;\n    public readonly length: number;\n    public readonly offset: number;\n    public readonly stride: number;\n    public readonly childData: Data[];\n\n    /**\n     * The dictionary for this Vector, if any. Only used for Dictionary type.\n     */\n    public dictionary?: Vector;\n\n    public readonly values: Buffers<T>[BufferType.DATA];\n    // @ts-ignore\n    public readonly typeIds: Buffers<T>[BufferType.TYPE];\n    // @ts-ignore\n    public readonly nullBitmap: Buffers<T>[BufferType.VALIDITY];\n    // @ts-ignore\n    public readonly valueOffsets: Buffers<T>[BufferType.OFFSET];\n\n    public get typeId(): T['TType'] { return this.type.typeId; }\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n    public get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds] as Buffers<T>;\n    }\n    public get byteLength(): number {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values       && (byteLength += values.byteLength);\n        nullBitmap   && (byteLength += nullBitmap.byteLength);\n        typeIds      && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n\n    protected _nullCount: number | kUnknownNullCount;\n\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap: Uint8Array | undefined;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n\n    constructor(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data) as Data[];\n        let buffer: Buffers<T>[keyof Buffers<T>];\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        } else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = (buffers as Buffers<T>)[0]) && (this.valueOffsets = buffer);\n                (buffer = (buffers as Buffers<T>)[1]) && (this.values = buffer);\n                (buffer = (buffers as Buffers<T>)[2]) && (this.nullBitmap = buffer);\n                (buffer = (buffers as Buffers<T>)[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n\n    public clone<R extends DataType>(type: R, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers: Buffers<R> = <any> this, childData: (Data | Vector)[] = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n\n    public slice(offset: number, length: number): Data<T> {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone<T>(this.type, this.offset + offset, length, nullCount, buffers,\n            // Don't slice children if we have value offsets (the variable-width types)\n            (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n\n    public _changeLengthAndBackfillNullBitmap(newLength: number): Data<T> {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n\n    protected _sliceBuffers(offset: number, length: number, stride: number, typeId: T['TType']): Buffers<T> {\n        let arr: any, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n        // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n        (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n\n    protected _sliceChildren(childData: Data[], offset: number, length: number): Data[] {\n        return childData.map((child) => child.slice(offset, length));\n    }\n\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    public static new<T extends DataType>(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector): Data<T> {\n        if (buffers instanceof Data) { buffers = buffers.buffers; } else if (!buffers) { buffers = [] as Partial<Buffers<T>>; }\n        switch (type.typeId) {\n            case Type.Null:            return <unknown> Data.Null(            <unknown> type as Null,            offset, length) as Data<T>;\n            case Type.Int:             return <unknown> Data.Int(             <unknown> type as Int,             offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Dictionary:      return <unknown> Data.Dictionary(      <unknown> type as Dictionary,      offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary!) as Data<T>;\n            case Type.Float:           return <unknown> Data.Float(           <unknown> type as Float,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Bool:            return <unknown> Data.Bool(            <unknown> type as Bool,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Decimal:         return <unknown> Data.Decimal(         <unknown> type as Decimal,         offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Date:            return <unknown> Data.Date(            <unknown> type as Date_,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Time:            return <unknown> Data.Time(            <unknown> type as Time,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Timestamp:       return <unknown> Data.Timestamp(       <unknown> type as Timestamp,       offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Interval:        return <unknown> Data.Interval(        <unknown> type as Interval,        offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.FixedSizeBinary: return <unknown> Data.FixedSizeBinary( <unknown> type as FixedSizeBinary, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Binary:          return <unknown> Data.Binary(          <unknown> type as Binary,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Utf8:            return <unknown> Data.Utf8(            <unknown> type as Utf8,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.List:            return <unknown> Data.List(            <unknown> type as List,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.FixedSizeList:   return <unknown> Data.FixedSizeList(   <unknown> type as FixedSizeList,   offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]) as Data<T>;\n            case Type.Struct:          return <unknown> Data.Struct(          <unknown> type as Struct,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []) as Data<T>;\n            case Type.Map:             return <unknown> Data.Map(             <unknown> type as Map_,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.Union:           return <unknown> Data.Union(           <unknown> type as Union,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData) as Data<T>;\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n\n    /** @nocollapse */\n    public static Null<T extends Null>(type: T, offset: number, length: number) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    public static Int<T extends Int>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Dictionary<T extends Dictionary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>, dictionary: Vector<T['dictionary']>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView<T['TArray']>(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    public static Float<T extends Float>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Bool<T extends Bool>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Decimal<T extends Decimal>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Date<T extends Date_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Time<T extends Time>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Timestamp<T extends Timestamp>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Interval<T extends Interval>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static FixedSizeBinary<T extends FixedSizeBinary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Binary<T extends Binary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Utf8<T extends Utf8>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static List<T extends List>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static FixedSizeList<T extends FixedSizeList>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static Struct<T extends Struct>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, children: (Data | Vector)[]) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    public static Map<T extends Map_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: (Data | Vector)) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    public static Union<T extends SparseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, children: (Data | Vector)[], _?: any): Data<T>;\n    public static Union<T extends DenseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsets: ValueOffsetsBuffer, children: (Data | Vector)[]): Data<T>;\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]): Data<T>;\n    /** @nocollapse */\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]) {\n        const buffers = <unknown> [\n            undefined, undefined,\n            toUint8Array(nullBitmap),\n            toArrayBufferView(type.ArrayType, typeIds)\n        ] as Partial<Buffers<T>>;\n        if (type.mode === UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren as (Data | Vector)[]);\n        }\n        buffers[BufferType.OFFSET] = toInt32Array(<ValueOffsetsBuffer> valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\n\n(Data.prototype as any).childData = Object.freeze([]);\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */ const undf = void (0);\n\n/** @ignore */\nexport function valueToString(x: any) {\n    if (x === null) { return 'null'; }\n    if (x === undf) { return 'undefined'; }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../type';\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction<T extends DataType = any, TNull = any>(nullValues?: ReadonlyArray<TNull>) {\n\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value: any) { return true; };\n    }\n\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n\n    return new Function(`x`, `${fnBody}\\nreturn true;`) as (value: T['TValue'] | TNull) => boolean;\n}\n\n/** @ignore */\nfunction valueToCase(x: any) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    } else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { memcpy } from '../util/buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from '../util/compat';\nimport {\n    TypedArray, TypedArrayConstructor,\n    BigIntArray, BigIntArrayConstructor\n} from '../interfaces';\n\n/** @ignore */ type DataValue<T> = T extends TypedArray ? number : T extends BigIntArray ? WideValue<T> : T;\n/** @ignore */ type WideValue<T extends BigIntArray> = T extends BigIntArray ? bigint | Int32Array | Uint32Array : never;\n/** @ignore */ type ArrayCtor<T extends TypedArray | BigIntArray> =\n    T extends TypedArray  ? TypedArrayConstructor<T>  :\n    T extends BigIntArray ? BigIntArrayConstructor<T> :\n    any;\n\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len: number, BPE: number) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = <T extends TypedArray | BigIntArray>(arr: T, len = 0) => (\n    arr.length >= len ? arr.subarray(0, len) : memcpy(new (arr.constructor as any)(len), arr, 0)\n) as T;\n\n/** @ignore */\nexport interface BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n    readonly offset: number;\n}\n\n/** @ignore */\nexport class BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n\n    constructor(buffer: T, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor as ArrayCtor<T>;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n\n    public buffer: T;\n    public length: number;\n    public readonly stride: number;\n    public readonly ArrayType: ArrayCtor<T>;\n    public readonly BYTES_PER_ELEMENT: number;\n\n    public get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    public get reservedLength() { return this.buffer.length / this.stride; }\n    public get reservedByteLength() { return this.buffer.byteLength; }\n\n    // @ts-ignore\n    public set(index: number, value: TValue) { return this; }\n    public append(value: TValue) { return this.set(this.length, value); }\n    public reserve(extra: number) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT)\n                );\n            }\n        }\n        return this;\n    }\n    public flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray<T>(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    public clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    protected _resize(newLength: number) {\n        return this.buffer = <T> memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\n\n(BufferBuilder.prototype as any).offset = 0;\n\n/** @ignore */\nexport class DataBufferBuilder<T extends TypedArray> extends BufferBuilder<T, number> {\n    public last() { return this.get(this.length - 1); }\n    public get(index: number) { return this.buffer[index]; }\n    public set(index: number, value: number) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\n\n/** @ignore */\nexport class BitmapBufferBuilder extends DataBufferBuilder<Uint8Array> {\n\n    constructor(data = new Uint8Array(0)) { super(data, 1 / 8); }\n\n    public numValid = 0;\n    public get numInvalid() { return this.length - this.numValid; }\n    public get(idx: number) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    public set(idx: number, val: number) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |=  (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    public clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\n\n/** @ignore */\nexport class OffsetsBufferBuilder extends DataBufferBuilder<Int32Array> {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    public append(value: number) {\n        return this.set(this.length - 1, value);\n    }\n    public set(index: number, value: number) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    public flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\n\n/** @ignore */\nexport class WideBufferBuilder<T extends TypedArray, R extends BigIntArray> extends BufferBuilder<T, DataValue<T>> {\n    // @ts-ignore\n    public buffer64: R;\n    // @ts-ignore\n    protected _ArrayType64: BigIntArrayConstructor<R>;\n    public get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = <BigIntArrayConstructor<R>> (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n    }\n    public set(index: number, value: DataValue<T>) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint': this.buffer64[index] = value; break;\n            case 'number': this.buffer[index * this.stride] = value; break;\n            default: this.buffer.set(value as TypedArray, index * this.stride);\n        }\n        return this;\n    }\n    protected _resize(newLength: number) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data, Buffers } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BuilderType as B, VectorType as V} from './interfaces';\nimport { BufferBuilder, BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport {\n    DataType, strideForType,\n    Float, Int, Decimal, FixedSizeBinary,\n    Date_, Time, Timestamp, Interval,\n    Utf8, Binary, List, Map_\n} from './type';\n\n/**\n * A set of options required to create a `Builder` instance for a given `DataType`.\n * @see {@link Builder}\n */\nexport interface BuilderOptions<T extends DataType = any, TNull = any> {\n    type: T;\n    nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n    children?: { [key: string]: BuilderOptions; } | BuilderOptions[];\n}\n\n/**\n * A set of options to create an Iterable or AsyncIterable `Builder` transform function.\n * @see {@link Builder.throughIterable}\n * @see {@link Builder.throughAsyncIterable}\n */\n\nexport interface IterableBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    highWaterMark?: number;\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport abstract class Builder<T extends DataType = any, TNull = any> {\n\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    public static new<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {}\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode<T extends DataType = any, TNull = any>(options: import('./io/node/builder').BuilderDuplexOptions<T, TNull>): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughDOM<T extends DataType = any, TNull = any>(options: import('./io/whatwg/builder').BuilderTransformOptions<T, TNull>): import('./io/whatwg/builder').BuilderTransform<T, TNull> {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    public static throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughIterable(options);\n    }\n\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    public static throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughAsyncIterable(options);\n    }\n\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }: BuilderOptions<T, TNull>) {\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n\n    /**\n     * The Builder's `DataType` instance.\n     * @readonly\n     */\n    public type: T;\n    /**\n     * The number of values written to the `Builder` that haven't been flushed yet.\n     * @readonly\n     */\n    public length = 0;\n    /**\n     * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n     * @readonly\n     */\n    public finished = false;\n    /**\n     * The number of elements in the underlying values TypedArray that\n     * represent a single logical element, determined by this Builder's\n     * `DataType`. This is 1 for most types, but is larger when the `DataType`\n     * is `Int64`, `Uint64`, `Decimal`, `DateMillisecond`, certain variants of\n     * `Interval`, `Time`, or `Timestamp`, `FixedSizeBinary`, and `FixedSizeList`.\n     * @readonly\n     */\n    public readonly stride: number;\n    public readonly children: Builder[];\n    /**\n     * The list of null-value sentinels for this `Builder`. When one of these values\n     * is written to the `Builder` (either via `Builder.prototype.set()` or `Builder.prototype.append()`),\n     * a 1-bit is written to this Builder's underlying null BitmapBufferBuilder.\n     * @readonly\n     */\n    public readonly nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    public toVector() { return Vector.new(this.flush()); }\n\n    public get ArrayType() { return this.type.ArrayType; }\n    public get nullCount() { return this._nulls.numInvalid; }\n    public get numChildren() { return this.children.length; }\n\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    public get byteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    public get reservedLength(): number {\n        return this._nulls.reservedLength;\n    }\n\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    public get reservedByteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n\n    // @ts-ignore\n    protected _offsets: DataBufferBuilder<Int32Array>;\n    public get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n\n    // @ts-ignore\n    protected _values: BufferBuilder<T['TArray'], any>;\n    public get values() { return this._values ? this._values.buffer : null; }\n\n    protected _nulls: BitmapBufferBuilder;\n    public get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n\n    // @ts-ignore\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n    public get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n\n    // @ts-ignore\n    protected _isValid: (value: T['TValue'] | TNull) => boolean;\n    // @ts-ignore\n    protected _setValue: (inst: Builder<T>, index: number, value: T['TValue']) => void;\n\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    public append(value: T['TValue'] | TNull) { return this.set(this.length, value); }\n\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    public isValid(value: T['TValue'] | TNull): boolean { return this._isValid(value); }\n\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    public set(index: number, value: T['TValue'] | TNull) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue']) { this._setValue(this, index, value); }\n    public setValid(index: number, valid: boolean) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    public getChildAt<R extends DataType = any>(index: number): Builder<R> | null {\n        return this.children[index] || null;\n    }\n\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    public flush() {\n\n        const buffers: any = [];\n        const values =  this._values;\n        const offsets =  this._offsets;\n        const typeIds =  this._typeIds;\n        const { length, nullCount } = this;\n\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        } else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        } else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n\n        const data = Data.new<T>(\n            this.type, 0, length, nullCount, buffers as Buffers<T>,\n            this.children.map((child) => child.flush())) as Data<T>;\n\n        this.clear();\n\n        return data;\n    }\n\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    public finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    public clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\n\n(Builder.prototype as any).length = 1;\n(Builder.prototype as any).stride = 1;\n(Builder.prototype as any).children = null;\n(Builder.prototype as any).finished = false;\n(Builder.prototype as any).nullValues = null;\n(Builder.prototype as any)._isValid = () => true;\n\n/** @ignore */\nexport abstract class FixedWidthBuilder<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval = any, TNull = any> extends Builder<T, TNull> {\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n\n/** @ignore */\nexport abstract class VariableWidthBuilder<T extends Binary | Utf8 | List | Map_, TNull = any> extends Builder<T, TNull> {\n    protected _pendingLength: number = 0;\n    protected _offsets: OffsetsBufferBuilder;\n    protected _pending: Map<number, any> | undefined;\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    public setValid(index: number, isValid: boolean) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    public clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    public flush() {\n        this._flush();\n        return super.flush();\n    }\n    public finish() {\n        this._flush();\n        return super.finish();\n    }\n    protected _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n    protected abstract _flushPending(pending: Map<number, any>, pendingLength: number): void;\n}\n\n/** @ignore */\ntype ThroughIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull>) => IterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function*(source: Iterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n/** @ignore */\ntype ThroughAsyncIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) => AsyncIterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughAsyncIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BoolBuilder<TNull = any> extends Builder<Bool, TNull> {\n    constructor(options: BuilderOptions<Bool, TNull>) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    public setValue(index: number, value: boolean) {\n        this._values.set(index, +value);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { Builder } from '../builder';\n\n/** @ignore */\nexport class NullBuilder<TNull = any> extends Builder<Null, TNull> {\n    // @ts-ignore\n    public setValue(index: number, value: null) {}\n    public setValid(index: number, valid: boolean) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Date_, DateDay, DateMillisecond } from '../type';\n\n/** @ignore */\nexport class DateBuilder<T extends Date_ = Date_, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class DateDayBuilder<TNull = any> extends DateBuilder<DateDay, TNull> {}\n/** @ignore */\nexport class DateMillisecondBuilder<TNull = any> extends DateBuilder<DateMillisecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class DecimalBuilder<TNull = any> extends FixedWidthBuilder<Decimal, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { IntBuilder } from './int';\nimport { Dictionary, DataType } from '../type';\nimport { Builder, BuilderOptions } from '../builder';\n\ntype DictionaryHashFunction = (x: any) => string | number;\n\nexport interface DictionaryBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    dictionaryHashFunction?: DictionaryHashFunction;\n}\n\n/** @ignore */\nexport class DictionaryBuilder<T extends Dictionary, TNull = any> extends Builder<T, TNull> {\n\n    protected _dictionaryOffset: number;\n    protected _dictionary?: Vector<T['dictionary']>;\n    protected _keysToIndices: { [key: string]: number };\n    public readonly indices: IntBuilder<T['indices']>;\n    public readonly dictionary: Builder<T['dictionary']>;\n\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }: DictionaryBuilderOptions<T, TNull>) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) as T });\n        this._nulls = <any> null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls }) as IntBuilder<T['indices']>;\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null }) as Builder<T['dictionary']>;\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n\n    public get values() { return this.indices.values; }\n    public get nullCount() { return this.indices.nullCount; }\n    public get nullBitmap() { return this.indices.nullBitmap; }\n    public get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    public get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    public get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    public isValid(value: T['TValue'] | TNull) { return this.indices.isValid(value); }\n    public setValid(index: number, valid: boolean) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    public setValue(index: number, value: T['TValue']) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    public flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary as Vector<T['dictionary']>;\n        this.clear();\n        return data;\n    }\n    public finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    public clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    public valueToKey(val: any): string | number {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedSizeBinary } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class FixedSizeBinaryBuilder<TNull = any> extends FixedWidthBuilder<FixedSizeBinary, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h: number) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d: number) {\n\n    if (d !== d) { return 0x7E00; } // NaN\n\n    f64[0] = d;\n\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        } else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    } else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    } else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n\n    return sign | expo | sigf & 0xFFFF;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\nimport { Float, Float16, Float32, Float64 } from '../type';\n\n/** @ignore */\nexport class FloatBuilder<T extends Float = Float, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n\n/** @ignore */\nexport class Float16Builder<TNull = any> extends FloatBuilder<Float16, TNull> {\n    public setValue(index: number, value: number) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n\n/** @ignore */\nexport class Float32Builder<TNull = any> extends FloatBuilder<Float32, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Float64Builder<TNull = any> extends FloatBuilder<Float64, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ArrayBufferViewInput, toArrayBufferView } from './buffer';\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n\n/** @ignore */ type BigNumArray = IntArray | UintArray;\n/** @ignore */ type IntArray = Int8Array | Int16Array | Int32Array;\n/** @ignore */ type UintArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray;\n\n/** @ignore */\nfunction BigNum(this: any, x: any, ...xs: any) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\n\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function<T extends BN<BigNumArray>>(this: T) { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function<T extends BN<BigNumArray>>(this: T) { return bignumToNumber(this); };\nBigNum.prototype.toString = function<T extends BN<BigNumArray>>(this: T) { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function<T extends BN<BigNumArray>>(this: T, hint: 'string' | 'number' | 'default' = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    return bignumToString(this);\n};\n\n/** @ignore */\ntype TypedArrayConstructorArgs =\n    [number | void] |\n    [Iterable<number> | Iterable<bigint>] |\n    [ArrayBufferLike, number | void, number | void] ;\n\n/** @ignore */\nfunction SignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n\nObject.setPrototypeOf(SignedBigNum.prototype,   Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype,  Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype,   BigNum.prototype, { 'constructor': SignedBigNum,   'signed': true,  'TypedArray': Int32Array,  'BigIntArray': BigInt64Array  });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype,  BigNum.prototype, { 'constructor': DecimalBigNum,  'signed': true,  'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n\n/** @ignore */\nfunction bignumToNumber<T extends BN<BigNumArray>>(bn: T) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\n\n/** @ignore */\nexport let bignumToString: { <T extends BN<BigNumArray>>(a: T): string; };\n/** @ignore */\nexport let bignumToBigInt: { <T extends BN<BigNumArray>>(a: T): bigint; };\n\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = <any> bignumToString;\n} else {\n    bignumToBigInt = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : <any>decimalToString(a));\n    bignumToString = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n\n/** @ignore */\nfunction decimalToString<T extends BN<BigNumArray>>(a: T) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n\n/** @ignore */\nexport class BN<T extends BigNumArray> {\n    /** @nocollapse */\n    public static new<T extends BigNumArray>(num: T, isSigned?: boolean): (T & BN<T>) {\n        switch (isSigned) {\n            case true: return new (<any> SignedBigNum)(num) as (T & BN<T>);\n            case false: return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new (<any> SignedBigNum)(num) as (T & BN<T>);\n        }\n        if (num.byteLength === 16) {\n            return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n        }\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static signed<T extends IntArray>(num: T): (T & BN<T>) {\n        return new (<any> SignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static unsigned<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static decimal<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n    }\n    constructor(num: T, isSigned?: boolean) {\n        return BN.new(num, isSigned) as any;\n    }\n}\n\n/** @ignore */\nexport interface BN<T extends BigNumArray> extends TypedArrayLike<T> {\n\n    new<T extends ArrayBufferViewInput>(buffer: T, signed?: boolean): T;\n\n    readonly signed: boolean;\n    readonly TypedArray: TypedArrayConstructor<TypedArray>;\n    readonly BigIntArray: BigIntArrayConstructor<BigIntArray>;\n\n    [Symbol.toStringTag]:\n        'Int8Array'         |\n        'Int16Array'        |\n        'Int32Array'        |\n        'Uint8Array'        |\n        'Uint16Array'       |\n        'Uint32Array'       |\n        'Uint8ClampedArray';\n\n    /**\n     * Convert the bytes to their (positive) decimal representation for printing\n     */\n    toString(): string;\n    /**\n     * Down-convert the bytes to a 53-bit precision integer. Invoked by JS for\n     * arithmetic operators, like `+`. Easy (and unsafe) way to convert BN to\n     * number via `+bn_inst`\n     */\n    valueOf(): number;\n    /**\n     * Return the JSON representation of the bytes. Must be wrapped in double-quotes,\n     * so it's compatible with JSON.stringify().\n     */\n    toJSON(): string;\n    [Symbol.toPrimitive](hint?: any): number | string | bigint;\n}\n\n/** @ignore */\ninterface TypedArrayLike<T extends BigNumArray> {\n\n    readonly length: number;\n    readonly buffer: ArrayBuffer;\n    readonly byteLength: number;\n    readonly byteOffset: number;\n    readonly BYTES_PER_ELEMENT: number;\n\n    includes(searchElement: number, fromIndex?: number | undefined): boolean;\n    copyWithin(target: number, start: number, end?: number | undefined): this;\n    every(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    fill(value: number, start?: number | undefined, end?: number | undefined): this;\n    filter(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): T;\n    find(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number | undefined;\n    findIndex(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number;\n    forEach(callbackfn: (value: number, index: number, array: T) => void, thisArg?: any): void;\n    indexOf(searchElement: number, fromIndex?: number | undefined): number;\n    join(separator?: string | undefined): string;\n    lastIndexOf(searchElement: number, fromIndex?: number | undefined): number;\n    map(callbackfn: (value: number, index: number, array: T) => number, thisArg?: any): T;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reverse(): T;\n    set(array: ArrayLike<number>, offset?: number | undefined): void;\n    slice(start?: number | undefined, end?: number | undefined): T;\n    some(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    sort(compareFn?: ((a: number, b: number) => number) | undefined): this;\n    subarray(begin: number, end?: number | undefined): T;\n    toLocaleString(): string;\n    entries(): IterableIterator<[number, number]>;\n    keys(): IterableIterator<number>;\n    values(): IterableIterator<number>;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder, BuilderOptions } from '../builder';\nimport { Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64 } from '../type';\n\n/** @ignore */\nexport class IntBuilder<T extends Int = Int, TNull = any> extends FixedWidthBuilder<T, TNull> {\n    public setValue(index: number, value: T['TValue']) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Int8Builder<TNull = any> extends IntBuilder<Int8, TNull> {}\n/** @ignore */\nexport class Int16Builder<TNull = any> extends IntBuilder<Int16, TNull> {}\n/** @ignore */\nexport class Int32Builder<TNull = any> extends IntBuilder<Int32, TNull> {}\n/** @ignore */\nexport class Int64Builder<TNull = any> extends IntBuilder<Int64, TNull> {\n    protected _values: WideBufferBuilder<Int32Array, BigInt64Array>;\n    constructor(options: BuilderOptions<Int64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Int32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\n/** @ignore */\nexport class Uint8Builder<TNull = any> extends IntBuilder<Uint8, TNull> {}\n/** @ignore */\nexport class Uint16Builder<TNull = any> extends IntBuilder<Uint16, TNull> {}\n/** @ignore */\nexport class Uint32Builder<TNull = any> extends IntBuilder<Uint32, TNull> {}\n/** @ignore */\nexport class Uint64Builder<TNull = any> extends IntBuilder<Uint64, TNull> {\n    protected _values: WideBufferBuilder<Uint32Array, BigUint64Array>;\n    constructor(options: BuilderOptions<Uint64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Uint32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\nconst toBigInt = ((memo: any) => (value: any) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeBuilder<T extends Time = Time, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimeSecondBuilder<TNull = any> extends TimeBuilder<TimeSecond, TNull> {}\n/** @ignore */\nexport class TimeMillisecondBuilder<TNull = any> extends TimeBuilder<TimeMillisecond, TNull> {}\n/** @ignore */\nexport class TimeMicrosecondBuilder<TNull = any> extends TimeBuilder<TimeMicrosecond, TNull> {}\n/** @ignore */\nexport class TimeNanosecondBuilder<TNull = any> extends TimeBuilder<TimeNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampBuilder<T extends Timestamp = Timestamp, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimestampSecondBuilder<TNull = any> extends TimestampBuilder<TimestampSecond, TNull> {}\n/** @ignore */\nexport class TimestampMillisecondBuilder<TNull = any> extends TimestampBuilder<TimestampMillisecond, TNull> {}\n/** @ignore */\nexport class TimestampMicrosecondBuilder<TNull = any> extends TimestampBuilder<TimestampMicrosecond, TNull> {}\n/** @ignore */\nexport class TimestampNanosecondBuilder<TNull = any> extends TimestampBuilder<TimestampNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalBuilder<T extends Interval = Interval, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class IntervalDayTimeBuilder<TNull = any> extends IntervalBuilder<IntervalDayTime, TNull> {}\n/** @ignore */\nexport class IntervalYearMonthBuilder<TNull = any> extends IntervalBuilder<IntervalYearMonth, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Binary } from '../type';\nimport { toUint8Array } from '../util/buffer';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BinaryBuilder<TNull = any> extends VariableWidthBuilder<Binary, TNull> {\n    constructor(opts: BuilderOptions<Binary, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: Uint8Array) {\n        return super.setValue(index, toUint8Array(value));\n    }\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Utf8 } from '../type';\nimport { encodeUtf8 } from '../util/utf8';\nimport { BinaryBuilder } from './binary';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class Utf8Builder<TNull = any> extends VariableWidthBuilder<Utf8, TNull> {\n    constructor(opts: BuilderOptions<Utf8, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: string) {\n        return super.setValue(index, encodeUtf8(value) as any);\n    }\n    // @ts-ignore\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number): void {}\n}\n\n(Utf8Builder.prototype as any)._flushPending = (BinaryBuilder.prototype as any)._flushPending;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\n\n/** @ignore */\nexport class Run<T extends DataType = any, TNull = any> {\n    // @ts-ignore\n    protected _values: ArrayLike<T['TValue'] | TNull>;\n    public get length() { return this._values.length; }\n    public get(index: number) { return this._values[index]; }\n    public clear() { this._values = <any> null; return this; }\n    public bind(values: Vector<T> | ArrayLike<T['TValue'] | TNull>) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this as any;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { StructVector } from './struct';\nimport { valueToString } from '../util/pretty';\nimport { DataType, Struct, RowLike } from '../type';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\n\n    public readonly size: number;\n    public readonly [Symbol.toStringTag]: string;\n\n    protected [kRowIndex]: number;\n    protected [kParent]: Vector<Struct>;\n    protected [kKeyToIdx]: Map<K, number>;\n    protected [kIdxToVal]: V[];\n\n    constructor(parent: Vector<Struct>, numKeys: number) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n\n    public abstract keys(): IterableIterator<K>;\n    public abstract values(): IterableIterator<V>;\n    public abstract getKey(idx: number): K;\n    public abstract getIndex(key: K): number;\n    public abstract getValue(idx: number): V;\n    public abstract setValue(idx: number, val: V): void;\n\n    public entries() { return this[Symbol.iterator](); }\n\n    public has(key: K) { return this.get(key) !== undefined; }\n\n    public get(key: K) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            } else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n\n    public set(key: K, val: V) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = <any> this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n\n    public toArray() { return [...this.values()]; }\n    public toJSON() {\n        const obj = {} as any;\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n\n    public inspect() { return this.toString(); }\n    public [kCustomInspect]() { return this.toString(); }\n    public toString() {\n        const str: string[] = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\n        Object.defineProperties(proto, {\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n        });\n        return (proto as any)[Symbol.toStringTag] = 'Row';\n    })(Row.prototype);\n}\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    public keys() {\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\n    }\n    public values() {\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\n    }\n    public getKey(idx: number): K['TValue'] {\n        return this[kParent].getChildAt(0)!.get(idx);\n    }\n    public getIndex(key: K['TValue']): number {\n        return this[kParent].getChildAt(0)!.indexOf(key);\n    }\n    public getValue(index: number): V['TValue'] | null {\n        return this[kParent].getChildAt(1)!.get(index);\n    }\n    public setValue(index: number, value: V['TValue'] | null): void {\n        this[kParent].getChildAt(1)!.set(index, value);\n    }\n}\n\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\n    constructor(parent: StructVector<T>) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    public *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name as keyof T;\n        }\n    }\n    public *values() {\n        for (const field of this[kParent].type.children) {\n            yield (this as RowLike<T>)[field.name];\n        }\n    }\n    public getKey(idx: number): keyof T {\n        return this[kParent].type.children[idx].name as keyof T;\n    }\n    public getIndex(key: keyof T): number {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    public getValue(index: number): T[keyof T]['TValue'] | null {\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\n    }\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\n    }\n}\n\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\n    return <T extends Row>(row: T) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key: any) => function(this: T) { return this.get(key); };\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler: ProxyHandler<Row> = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row: Row, key: PropertyKey) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row: Row, key: PropertyKey, receiver: any) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\n            switch (key) {\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\n})();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n\n/** @ignore */\ntype RangeLike = { length: number; stride?: number };\n/** @ignore */\ntype ClampThen<T extends RangeLike> = (source: T, index: number) => any;\n/** @ignore */\ntype ClampRangeThen<T extends RangeLike> = (source: T, offset: number, length: number) => any;\n\nexport function clampIndex<T extends RangeLike>(source: T, index: number): number;\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then?: N) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n\n/** @ignore */\nlet tmp: number;\nexport function clampRange<T extends RangeLike>(source: T, begin: number | undefined, end: number | undefined): [number, number];\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then?: N) {\n\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n     // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\n\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value: any) => value !== value;\n\n/** @ignore */\nexport function createElementComparator(search: any) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value: any) => value === search\n            : (value: any) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value: any) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value: any) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) { return creatMapComparator(search); }\n    // Compare Array-likes\n    if (Array.isArray(search)) { return createArrayLikeComparator(search); }\n    // Compare Vectors\n    if (search instanceof Vector) { return createVectorComparator(search); }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n\n/** @ignore */\nfunction createArrayLikeComparator(lhs: ArrayLike<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction creatMapComparator(lhs: Map<any, any>) {\n    let i = -1;\n    const comparators = [] as ((x: any) => boolean)[];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createVectorComparator(lhs: Vector<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createObjectComparator(lhs: any) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) { return () => false; }\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\n\nfunction createSubElementsComparator(comparators: ((x: any) => boolean)[], keys?: Iterable<string>) {\n    return (rhs: any) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\n\nfunction compareArray(comparators: ((x: any) => boolean)[], arr: any[]) {\n    const n = comparators.length;\n    if (arr.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) { return false; }\n    }\n    return true;\n}\n\nfunction compareVector(comparators: ((x: any) => boolean)[], vec: Vector) {\n    const n = comparators.length;\n    if (vec.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) { return false; }\n    }\n    return true;\n}\n\nfunction compareObject(comparators: ((x: any) => boolean)[], obj: Map<any, any>, keys: Iterable<string>) {\n\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done;\n         ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { clampRange } from '../util/vector';\nimport { DataType, Dictionary } from '../type';\nimport { selectChunkArgs } from '../util/args';\nimport { DictionaryVector } from './dictionary';\nimport { AbstractVector, Vector } from '../vector';\nimport { Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\ntype ChunkedDict<T extends DataType> = T extends Dictionary ? Vector<T['dictionary']> : null | never;\n/** @ignore */\ntype ChunkedKeys<T extends DataType> = T extends Dictionary ? Vector<T['indices']> | Chunked<T['indices']> : null | never;\n\n/** @ignore */\nexport type SearchContinuation<T extends Chunked> = (column: T, chunkIndex: number, valueIndex: number) => any;\n\n/** @ignore */\nexport class Chunked<T extends DataType = any>\n    extends AbstractVector<T>\n    implements Clonable<Chunked<T>>,\n               Sliceable<Chunked<T>>,\n               Applicative<T, Chunked<T>> {\n\n    /** @nocollapse */\n    public static flatten<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        return selectChunkArgs<Vector<T>>(Vector, vectors);\n    }\n\n    /** @nocollapse */\n    public static concat<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        const chunks = Chunked.flatten<T>(...vectors);\n        return new Chunked<T>(chunks[0].type, chunks);\n    }\n\n    protected _type: T;\n    protected _length: number;\n    protected _chunks: Vector<T>[];\n    protected _numChildren: number;\n    protected _children?: Chunked[];\n    protected _nullCount: number = -1;\n    protected _chunkOffsets: Uint32Array;\n\n    constructor(type: T, chunks: Vector<T>[] = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n\n    public get type() { return this._type; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get typeId(): T['TType'] { return this._type.typeId; }\n    public get VectorName() { return `Chunked<${this._type}>`; }\n    public get data(): Data<T> {\n        return this._chunks[0] ? this._chunks[0].data : <any> null;\n    }\n\n    public get ArrayType() { return this._type.ArrayType; }\n    public get numChildren() { return this._numChildren; }\n    public get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    public get byteLength(): number {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n\n    protected _indices?: ChunkedKeys<T>;\n    public get indices(): ChunkedKeys<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = (<any> this._chunks) as DictionaryVector<T, any>[];\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices))) as ChunkedKeys<T>;\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    public get dictionary(): ChunkedDict<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary as ChunkedDict<T>;\n        }\n        return null;\n    }\n\n    public *[Symbol.iterator](): IterableIterator<T['TValue'] | null> {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n\n    public clone(chunks = this._chunks): Chunked<T> {\n        return new Chunked(this._type, chunks);\n    }\n\n    public concat(...others: Vector<T>[]): Chunked<T> {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n\n    public slice(begin?: number, end?: number): Chunked<T> {\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Chunked<R> | null {\n\n        if (index < 0 || index >= this._numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let child: Chunked<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (child = columns[index]) { return child; }\n        if (field = ((this._type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked<R>(field.type, chunks));\n            }\n        }\n\n        return null;\n    }\n\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0            ) { return null; }\n        if (idx >= offsets[rhs]) { return null; }\n        if (rhs <= 1           ) { return then ? then(this, 0, idx) : [0, idx]; }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n\n    public isValid(index: number): boolean {\n        return !!this.search(index, this.isValidInternal);\n    }\n\n    public get(index: number): T['TValue'] | null {\n        return this.search(index, this.getInternal);\n    }\n\n    public set(index: number, value: T['TValue'] | null): void {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n\n    public indexOf(element: T['TValue'], offset?: number): number {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element))!;\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n\n    public toArray(): T['TArray'] {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType: any = this._type.ArrayType;\n        if (n <= 0) { return new ArrayType(0); }\n        if (n <= 1) { return chunks[0].toArray(); }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set: any = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n\n    protected getInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].get(j); }\n    protected isValidInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].isValid(j); }\n    protected indexOfInternal({ _chunks }: Chunked<T>, chunkIndex: number, fromIndex: number, element: T['TValue']) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n\n    protected _sliceInternal(self: Chunked<T>, begin: number, end: number) {\n        const slices: Vector<T>[] = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) { break; }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) { continue; }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to) as Vector<T>);\n        }\n        return self.clone(slices);\n    }\n}\n\n/** @ignore */\nfunction calculateOffsets<T extends DataType>(vectors: Vector<T>[]) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n\n/** @ignore */\nconst typedSet = (src: TypedArray, dst: TypedArray, offset: number) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n\n/** @ignore */\nconst arraySet = (src: any[], dst: any[], offset: number) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n/** @ignore */\ninterface TypedArray extends ArrayBufferView {\n    readonly length: number;\n    readonly [n: number]: number;\n    set(array: ArrayLike<number>, offset?: number): void;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Field } from './schema';\nimport { DataType } from './type';\nimport { Vector } from './vector';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { VectorCtorArgs, VectorType as V } from './interfaces';\nimport { Chunked, SearchContinuation } from './vector/chunked';\n\nexport interface Column<T extends DataType = any> {\n    typeId: T['TType'];\n    concat(...others: Vector<T>[]): Column<T>;\n    slice(begin?: number, end?: number): Column<T>;\n    clone(chunks?: Vector<T>[], offsets?: Uint32Array): Column<T>;\n}\n\nexport class Column<T extends DataType = any>\n    extends Chunked<T>\n    implements Clonable<Column<T>>,\n               Sliceable<Column<T>>,\n               Applicative<T, Column<T>> {\n\n    public static new<T extends DataType>(field: string | Field<T>, ...chunks: (Vector<T> | Vector<T>[])[]): Column<T>;\n    public static new<T extends DataType>(field: string | Field<T>, data: Data<T>, ...args: VectorCtorArgs<V<T>>): Column<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(field: string | Field<T>, data: Data<T> | Vector<T> | (Data<T> | Vector<T>)[], ...rest: any[]) {\n\n        const chunks = Chunked.flatten<T>(\n            Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n            [Vector.new(data, ...rest)]\n        );\n\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        } else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n\n    constructor(field: Field<T>, vectors: Vector<T>[] = [], offsets?: Uint32Array) {\n        vectors = Chunked.flatten<T>(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n\n    protected _field: Field<T>;\n    protected _children?: Column[];\n\n    public get field() { return this._field; }\n    public get name() { return this._field.name; }\n    public get nullable() { return this._field.nullable; }\n    public get metadata() { return this._field.metadata; }\n\n    public clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n\n        if (index < 0 || index >= this.numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let column: Column<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (column = columns[index]) { return column; }\n        if (field = ((this.type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n\n        return null;\n    }\n}\n\n/** @ignore */\nclass SingleChunkColumn<T extends DataType = any> extends Column<T> {\n    protected _chunk: Vector<T>;\n    constructor(field: Field<T>, vector: Vector<T>, offsets?: Uint32Array) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    public isValid(index: number): boolean {\n        return this._chunk.isValid(index);\n    }\n    public get(index: number): T['TValue'] | null {\n        return this._chunk.get(index);\n    }\n    public set(index: number, value: T['TValue'] | null): void {\n        this._chunk.set(index, value);\n    }\n    public indexOf(element: T['TValue'], offset?: number): number {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from '../vector/chunked';\n\ntype RecordBatchCtor = typeof import('../recordbatch').RecordBatch;\n\nconst isArray = Array.isArray;\n\n/** @ignore */\nexport const selectArgs = <T>(Ctor: any, vals: any[]) => _selectArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnArgs = <T extends { [key: string]: DataType }>(args: any[]) => {\n    const [fields, values] = _selectFieldArgs<T>(args, [[], []]);\n    return values.map((x, i) =>\n        x instanceof Column ? Column.new(x.field.clone(fields[i]), x) :\n        x instanceof Vector ? Column.new(fields[i], x) as Column<T[keyof T]> :\n                              Column.new(fields[i], [] as Vector<T[keyof T]>[]));\n};\n\n/** @ignore */\nexport const selectFieldArgs = <T extends { [key: string]: DataType }>(args: any[]) => _selectFieldArgs<T>(args, [[], []]);\n/** @ignore */\nexport const selectChunkArgs = <T>(Ctor: any, vals: any[]) => _selectChunkArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectVectorChildrenArgs = <T extends Vector>(Ctor: RecordBatchCtor, vals: any[]) => _selectVectorChildrenArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnChildrenArgs = <T extends Column>(Ctor: RecordBatchCtor, vals: any[]) => _selectColumnChildrenArgs(Ctor, vals, [], 0) as T[];\n\n/** @ignore */\nfunction _selectArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectChunkArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectVectorChildrenArgs<T extends Vector>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Vector, value.schema.fields.map((_, i) => value.getChildAt(i)!), res, j).length;\n        } else if (value instanceof Vector) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectColumnChildrenArgs<T extends Column>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Column, value.schema.fields.map((f, i) => Column.new(f, value.getChildAt(i)!)), res, j).length;\n        } else if (value instanceof Column) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nconst toKeysAndValues = (xs: [any[], any[]], [k, v]: [any, any], i: number) => (xs[0][i] = k, xs[1][i] = v, xs);\n\n/** @ignore */\nfunction _selectFieldArgs<T extends { [key: string]: DataType }>(vals: any[], ret: [Field<T[keyof T]>[], Vector<T[keyof T]>[]]): [Field<T[keyof T]>[], (T[keyof T] | Vector<T[keyof T]>)[]] {\n    let keys: any[], n: number;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) { return ret; }\n            if (isArray(vals[0])) { return _selectFieldArgs(vals[0], ret); }\n            if (!(vals[0] instanceof Data || vals[0] instanceof Vector || vals[0] instanceof DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field: number | string | Field<T[keyof T]>;\n    let val: Vector<T[keyof T]> | Data<T[keyof T]>;\n    let [fields, values] = ret as [Field<T[keyof T]>[], any[]];\n\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        } else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = Field.new(field, val as DataType, true) as Field<T[keyof T]>;\n            } else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof Data && (values[valueIndex] = val = Vector.new(val) as Vector);\n                fields[++fieldIndex] = Field.new(field, val.type, true) as Field<T[keyof T]>;\n            }\n        }\n    }\n    return ret;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { DataType } from './type';\nimport { selectArgs } from './util/args';\nimport { selectFieldArgs } from './util/args';\nimport { instance as comparer } from './visitor/typecomparator';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = T[keyof T][] | Data<T[keyof T]>[] | Vector<T[keyof T]>[];\n\nexport class Schema<T extends { [key: string]: DataType } = any> {\n\n    public static from<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static from<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static from<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static from(...args: any[]) {\n        return Schema.new(args[0], args[1]);\n    }\n\n    public static new<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static new<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static new(...args: any[]) {\n        return new Schema(selectFieldArgs(args)[0]);\n    }\n\n    public readonly fields: Field<T[keyof T]>[];\n    public readonly metadata: Map<string, string>;\n    public readonly dictionaries: Map<number, DataType>;\n\n    constructor(fields: Field[] = [],\n                metadata?: Map<string, string> | null,\n                dictionaries?: Map<number, DataType> | null) {\n        this.fields = (fields || []) as Field<T[keyof T]>[];\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    public get [Symbol.toStringTag]() { return 'Schema'; }\n    public toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n\n    public compareTo(other?: Schema | null): other is Schema<T> {\n        return comparer.compareSchemas(this, other);\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema<{ [P in K]: T[P] }>(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        return new Schema<{ [key: string]: K }>(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n\n    public assign<R extends { [key: string]: DataType } = any>(schema: Schema<R>): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...fields: (Field<R[keyof R]> | Field<R[keyof R]>[])[]): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...args: (Schema<R> | Field<R[keyof R]> | Field<R[keyof R]>[])[]) {\n\n        const other = args[0] instanceof Schema ? args[0] as Schema<R>\n            : new Schema<R>(selectArgs<Field<R[keyof R]>>(Field, args));\n\n        const curFields = [...this.fields] as Field[];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        }) as Field[];\n\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n\n        return new Schema<T & R>(\n            [...curFields, ...newFields], metadata,\n            new Map([...this.dictionaries, ...newDictionaries])\n        );\n    }\n}\n\nexport class Field<T extends DataType = any> {\n\n    public static new<T extends DataType = any>(props: { name: string | number, type: T, nullable?: boolean, metadata?: Map<string, string> | null }): Field<T>;\n    public static new<T extends DataType = any>(name: string | number | Field<T>, type: T, nullable?: boolean, metadata?: Map<string, string> | null): Field<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field<T>(`${name}`, type, nullable, metadata);\n    }\n\n    public readonly type: T;\n    public readonly name: string;\n    public readonly nullable: boolean;\n    public readonly metadata: Map<string, string>;\n\n    constructor(name: string, type: T, nullable = false, metadata?: Map<string, string> | null) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n\n    public get typeId() { return this.type.typeId; }\n    public get [Symbol.toStringTag]() { return 'Field'; }\n    public toString() { return `${this.name}: ${this.type}`; }\n    public compareTo(other?: Field | null): other is Field<T> {\n        return comparer.compareField(this, other);\n    }\n    public clone<R extends DataType = T>(props: { name?: string | number, type?: R, nullable?: boolean, metadata?: Map<string, string> | null }): Field<R>;\n    public clone<R extends DataType = T>(name?: string | number | Field<T>, type?: R, nullable?: boolean, metadata?: Map<string, string> | null): Field<R>;\n    public clone<R extends DataType = T>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata} = args[0]);\n        return Field.new<R>(name, type, nullable, metadata);\n    }\n}\n\n/** @ignore */\nfunction mergeMaps<TKey, TVal>(m1?: Map<TKey, TVal> | null, m2?: Map<TKey, TVal> | null): Map<TKey, TVal> {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n\n/** @ignore */\nfunction generateDictionaryMap(fields: Field[], dictionaries = new Map<number, DataType>()): Map<number, DataType> {\n\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            } else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n\n    return dictionaries;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Schema.prototype as any).fields = null;\n(Schema.prototype as any).metadata = null;\n(Schema.prototype as any).dictionaries = null;\n\n(Field.prototype as any).type = null;\n(Field.prototype as any).name = null;\n(Field.prototype as any).nullable = null;\n(Field.prototype as any).metadata = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { DataType, List } from '../type';\nimport { OffsetsBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions, VariableWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class ListBuilder<T extends DataType = any, TNull = any> extends VariableWidthBuilder<List<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    protected _offsets: OffsetsBufferBuilder;\n    constructor(opts: BuilderOptions<List<T>, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    protected _flushPending(pending: Map<number, T['TValue'] | undefined>) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListBuilder<T extends DataType = any, TNull = any> extends Builder<FixedSizeList<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    public setValue(index: number, value: T['TValue']) {\n        super.setValue(index, this._run.bind(value));\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataType, Map_, Struct } from '../type';\nimport { Builder, VariableWidthBuilder } from '../builder';\n\n/** @ignore */ type MapValue<K extends DataType = any, V extends DataType = any> = Map_<K, V>['TValue'];\n/** @ignore */ type MapValues<K extends DataType = any, V extends DataType = any> = Map<number, MapValue<K, V> | undefined>;\n/** @ignore */ type MapValueExt<K extends DataType = any, V extends DataType = any> = MapValue<K, V> | { [key: string]: V } | { [key: number]: V } ;\n\n/** @ignore */\nexport class MapBuilder<K extends DataType = any, V extends DataType = any, TNull = any> extends VariableWidthBuilder<Map_<K, V>, TNull> {\n\n    protected _pending: MapValues<K, V> | undefined;\n    public set(index: number, value: MapValueExt<K, V> | TNull) {\n        return super.set(index, value as MapValue<K, V> | TNull);\n    }\n\n    public setValue(index: number, value: MapValueExt<K, V>) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map() as MapValues<K, V>);\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n\n    public addChild(child: Builder<Struct<{ key: K, value: V }>>, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_<K, V>(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n\n    protected _flushPending(pending: MapValues<K, V>) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */\nexport class StructBuilder<T extends { [key: string]: DataType } = any, TNull = any> extends Builder<Struct<T>, TNull> {\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\nimport { Union, SparseUnion, DenseUnion } from '../type';\n\nexport interface UnionBuilderOptions<T extends Union = any, TNull = any> extends BuilderOptions<T, TNull> {\n    valueToChildTypeId?: (builder: UnionBuilder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport abstract class UnionBuilder<T extends Union, TNull = any> extends Builder<T, TNull> {\n\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n\n    public get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n\n    public append(value: T['TValue'] | TNull, childTypeId?: number) {\n        return this.set(this.length, value, childTypeId);\n    }\n\n    public set(index: number, value: T['TValue'] | TNull, childTypeId?: number) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        this._typeIds.set(index, childTypeId!);\n        super.setValue(index, value);\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = <T> new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n\n    /** @ignore */\n    // @ts-ignore\n    protected _valueToChildTypeId(builder: UnionBuilder<T, TNull>, value: any, offset: number): number {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n\n/** @ignore */\nexport class SparseUnionBuilder<T extends SparseUnion, TNull = any> extends UnionBuilder<T, TNull> {}\n/** @ignore */\nexport class DenseUnionBuilder<T extends DenseUnion, TNull = any> extends UnionBuilder<T, TNull> {\n\n    protected _offsets: DataBufferBuilder<Int32Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n\n    /** @ignore */\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId!];\n        this._offsets.set(index, this.getChildAt(childIndex)!.length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { encodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { float64ToUint16 } from '../util/math';\nimport { toArrayBufferView } from '../util/buffer';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface SetVisitor extends Visitor {\n    visit<T extends VectorType>(node: T, index: number, value: T['TValue']): void;\n    visitMany<T extends VectorType>(nodes: T[], indices: number[], values: T['TValue'][]): void[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitList                 <T extends List>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n}\n\n/** @ignore */\nexport class SetVisitor extends Visitor {}\n\n/** @ignore */\nconst setEpochMsToDays = (data: Int32Array, index: number, epochMs: number) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n\n/** @ignore */\nconst setVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number, value: Uint8Array) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n\n/** @ignore */\nconst setBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number, val: boolean) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |=  (1 << (idx % 8)))  // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n\n};\n\n/** @ignore */ type Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */ type Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst setDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2       = <T extends Numeric2X>      (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (typeof value) {\n        case 'bigint': vector.values64[index] = value; break;\n        case 'number': vector.values[index * vector.stride] = value; break;\n        default:\n            const val = value as T['TArray'];\n            const { stride, ArrayType } = vector;\n            const long = toArrayBufferView<T['TArray']>(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, stride), stride * index); };\n\n/** @ignore */\nconst setBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = <T extends Int>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value as Numeric1X['TValue'])\n        : setNumericX2(vector as VectorType<Numeric2X>, index, value as Numeric2X['TValue']);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = <T extends Float>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.precision !== Precision.HALF\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value)\n        : setFloat16(vector as VectorType<Float16>, index, value);\n};\n\n/* istanbul ignore next */\nconst setDate = <T extends Date_> (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.unit === DateUnit.DAY\n        ? setDateDay(vector as VectorType<DateDay>, index, value)\n        : setDateMillisecond(vector as VectorType<DateMillisecond>, index, value);\n};\n\n/** @ignore */\nconst setTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimestampSecond(vector as VectorType<TimestampSecond>, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index, value);\n        case TimeUnit.NANOSECOND:  return  setTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index, value);\n    }\n};\n\n/** @ignore */\nconst setTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime            = <T extends Time>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimeSecond(vector as VectorType<TimeSecond>, index, value as TimeSecond['TValue']);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(vector as VectorType<TimeMillisecond>, index, value as TimeMillisecond['TValue']);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index, value as TimeMicrosecond['TValue']);\n        case TimeUnit.NANOSECOND:  return  setTimeNanosecond(vector as VectorType<TimeNanosecond>, index, value as TimeNanosecond['TValue']);\n    }\n};\n\n/** @ignore */\nconst setDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 4), 4 * index); };\n\n/** @ignore */\nconst setList = <T extends List>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n\n/** @ignore */\nconst setMap = <T extends Map_>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n\n/** @ignore */ const _setStructArrayValue = (o: number, v: any[]) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o: number, v: Vector) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o: number, v: Map<string, any>) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o: number, v: { [key: string]: any }) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = <T extends Struct>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n\n    const setValue = value instanceof Map    ? _setStructMapValue(index, value)    :\n                     value instanceof Vector ? _setStructVectorValue(index, value) :\n                     Array.isArray(value)    ? _setStructArrayValue(index, value)  :\n                                               _setStructObjectValue(index, value) ;\n\n    vector.type.children.forEach((f: Field, i: number) => setValue(vector.getChildAt(i), f, i));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number, value: V['TValue']) => {\n    vector.type.mode === UnionMode.Dense ?\n        setDenseUnion(vector as VectorType<DenseUnion>, index, value) :\n        setSparseUnion(vector as VectorType<SparseUnion>, index, value);\n};\n\n/** @ignore */\nconst setDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n\n/** @ignore */\nconst setSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n\n/** @ignore */\nconst setDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = <T extends Interval>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector as VectorType<IntervalDayTime>, index, value)\n        : setIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index, value);\n};\n\n/** @ignore */\nconst setIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values[index] = (value[0] * 12) + (value[1] % 12); };\n\n/** @ignore */\nconst setFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\n\nSetVisitor.prototype.visitBool                 =                 setBool;\nSetVisitor.prototype.visitInt                  =                  setInt;\nSetVisitor.prototype.visitInt8                 =              setNumeric;\nSetVisitor.prototype.visitInt16                =              setNumeric;\nSetVisitor.prototype.visitInt32                =              setNumeric;\nSetVisitor.prototype.visitInt64                =            setNumericX2;\nSetVisitor.prototype.visitUint8                =              setNumeric;\nSetVisitor.prototype.visitUint16               =              setNumeric;\nSetVisitor.prototype.visitUint32               =              setNumeric;\nSetVisitor.prototype.visitUint64               =            setNumericX2;\nSetVisitor.prototype.visitFloat                =                setFloat;\nSetVisitor.prototype.visitFloat16              =              setFloat16;\nSetVisitor.prototype.visitFloat32              =              setNumeric;\nSetVisitor.prototype.visitFloat64              =              setNumeric;\nSetVisitor.prototype.visitUtf8                 =                 setUtf8;\nSetVisitor.prototype.visitBinary               =               setBinary;\nSetVisitor.prototype.visitFixedSizeBinary      =      setFixedSizeBinary;\nSetVisitor.prototype.visitDate                 =                 setDate;\nSetVisitor.prototype.visitDateDay              =              setDateDay;\nSetVisitor.prototype.visitDateMillisecond      =      setDateMillisecond;\nSetVisitor.prototype.visitTimestamp            =            setTimestamp;\nSetVisitor.prototype.visitTimestampSecond      =      setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond  =  setTimestampNanosecond;\nSetVisitor.prototype.visitTime                 =                 setTime;\nSetVisitor.prototype.visitTimeSecond           =           setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond      =      setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond      =      setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond       =       setTimeNanosecond;\nSetVisitor.prototype.visitDecimal              =              setDecimal;\nSetVisitor.prototype.visitList                 =                 setList;\nSetVisitor.prototype.visitStruct               =               setStruct;\nSetVisitor.prototype.visitUnion                =                setUnion;\nSetVisitor.prototype.visitDenseUnion           =           setDenseUnion;\nSetVisitor.prototype.visitSparseUnion          =          setSparseUnion;\nSetVisitor.prototype.visitDictionary           =           setDictionary;\nSetVisitor.prototype.visitInterval             =        setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime      =      setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth    =    setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList        =        setFixedSizeList;\nSetVisitor.prototype.visitMap                  =                  setMap;\n\n/** @ignore */\nexport const instance = new SetVisitor();\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, BuilderCtor } from '../interfaces';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n\n/** @ignore */\nexport interface GetBuilderCtor extends Visitor {\n    visit<T extends Type>(type: T): BuilderCtor<T>;\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => BuilderCtor<T>;\n}\n\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    public visitNull                 () { return NullBuilder;                 }\n    public visitBool                 () { return BoolBuilder;                 }\n    public visitInt                  () { return IntBuilder;                  }\n    public visitInt8                 () { return Int8Builder;                 }\n    public visitInt16                () { return Int16Builder;                }\n    public visitInt32                () { return Int32Builder;                }\n    public visitInt64                () { return Int64Builder;                }\n    public visitUint8                () { return Uint8Builder;                }\n    public visitUint16               () { return Uint16Builder;               }\n    public visitUint32               () { return Uint32Builder;               }\n    public visitUint64               () { return Uint64Builder;               }\n    public visitFloat                () { return FloatBuilder;                }\n    public visitFloat16              () { return Float16Builder;              }\n    public visitFloat32              () { return Float32Builder;              }\n    public visitFloat64              () { return Float64Builder;              }\n    public visitUtf8                 () { return Utf8Builder;                 }\n    public visitBinary               () { return BinaryBuilder;               }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryBuilder;      }\n    public visitDate                 () { return DateBuilder;                 }\n    public visitDateDay              () { return DateDayBuilder;              }\n    public visitDateMillisecond      () { return DateMillisecondBuilder;      }\n    public visitTimestamp            () { return TimestampBuilder;            }\n    public visitTimestampSecond      () { return TimestampSecondBuilder;      }\n    public visitTimestampMillisecond () { return TimestampMillisecondBuilder; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondBuilder; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondBuilder;  }\n    public visitTime                 () { return TimeBuilder;                 }\n    public visitTimeSecond           () { return TimeSecondBuilder;           }\n    public visitTimeMillisecond      () { return TimeMillisecondBuilder;      }\n    public visitTimeMicrosecond      () { return TimeMicrosecondBuilder;      }\n    public visitTimeNanosecond       () { return TimeNanosecondBuilder;       }\n    public visitDecimal              () { return DecimalBuilder;              }\n    public visitList                 () { return ListBuilder;                 }\n    public visitStruct               () { return StructBuilder;               }\n    public visitUnion                () { return UnionBuilder;                }\n    public visitDenseUnion           () { return DenseUnionBuilder;           }\n    public visitSparseUnion          () { return SparseUnionBuilder;          }\n    public visitDictionary           () { return DictionaryBuilder;           }\n    public visitInterval             () { return IntervalBuilder;             }\n    public visitIntervalDayTime      () { return IntervalDayTimeBuilder;      }\n    public visitIntervalYearMonth    () { return IntervalYearMonthBuilder;    }\n    public visitFixedSizeList        () { return FixedSizeListBuilder;        }\n    public visitMap                  () { return MapBuilder;                  }\n}\n\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder, BuilderOptions } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\n\nimport { Type } from '../enum';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Utf8Builder } from './utf8';\nimport { BuilderType as B } from '../interfaces';\nimport { Builder, BuilderOptions } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n\n/** @nocollapse */\nBuilder.new = newBuilder;\n\nfunction newBuilder<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {\n\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn<T>(type)())(options) as Builder<T, TNull>;\n\n    if (type.children && type.children.length > 0) {\n\n        const children = options['children'] || [] as BuilderOptions[];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_: Field, i: number) => children[i] || defaultOptions)\n            : (({ name }: Field) => children[name] || defaultOptions);\n\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n\n    return builder as B<T, TNull>;\n}\n\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n        const BuilderCtor = getBuilderConstructor.visit(typeId);\n        BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n    });\n\n(Utf8Builder.prototype as any)._setValue = setVisitor.visitBinary;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Block = File_.org.apache.arrow.flatbuf.Block;\nimport _Footer = File_.org.apache.arrow.flatbuf.Footer;\n\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\n\n/** @ignore */\nclass Footer_ {\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema()!);\n        return new OffHeapFooter(schema, footer) as Footer_;\n    }\n\n    /** @nocollapse */\n    public static encode(footer: Footer_) {\n\n        const b: Builder = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n\n        const dictionaryBatchesOffset = b.endVector();\n\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n\n        return b.asUint8Array();\n    }\n\n    // @ts-ignore\n    protected _recordBatches: FileBlock[];\n    // @ts-ignore\n    protected _dictionaryBatches: FileBlock[];\n    public get numRecordBatches() { return this._recordBatches.length; }\n    public get numDictionaries() { return this._dictionaryBatches.length; }\n\n    constructor(public schema: Schema,\n                public version: MetadataVersion = MetadataVersion.V4,\n                recordBatches?: FileBlock[], dictionaryBatches?: FileBlock[]) {\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n\n    public *recordBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) { yield block; }\n        }\n    }\n\n    public *dictionaryBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) { yield block; }\n        }\n    }\n\n    public getRecordBatch(index: number) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\n\nexport { Footer_ as Footer };\n\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n\n    public get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    public get numDictionaries() { return this._footer.dictionariesLength(); }\n\n    constructor(schema: Schema, protected _footer: _Footer) {\n        super(schema, _footer.version());\n    }\n\n    public getRecordBatch(index: number) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nexport class FileBlock {\n\n    /** @nocollapse */\n    public static decode(block: _Block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n\n    /** @nocollapse */\n    public static encode(b: Builder, fileBlock: FileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n\n    public offset: number;\n    public bodyLength: number;\n    public metaDataLength: number;\n\n    constructor(metaDataLength: number, bodyLength: Long | number, offset: Long | number) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, Readable, Writable, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays, ArrayBufferViewInput } from '../util/buffer';\n\nimport {\n    isPromise, isFetchResponse,\n    isIterable, isAsyncIterable,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */\nexport type WritableSink<T> = Writable<T> | WritableStream<T> | NodeJS.WritableStream | null;\n/** @ignore */\nexport type ReadableSource<T> = Readable<T> | PromiseLike<T> | AsyncIterable<T> | ReadableStream<T> | NodeJS.ReadableStream | null;\n\n/** @ignore */\nexport class AsyncByteQueue<T extends ArrayBufferViewInput = Uint8Array> extends AsyncQueue<Uint8Array, T> {\n    public write(value: ArrayBufferViewInput | Uint8Array) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value as T);\n        }\n    }\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values as any[])[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n\n/** @ignore */\nexport class ByteStream implements IterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: ByteStreamSource<Uint8Array>;\n    constructor(source?: Iterable<ArrayBufferViewInput> | ArrayBufferViewInput) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\nexport class AsyncByteStream implements Readable<Uint8Array>, AsyncIterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: AsyncByteStreamSource<Uint8Array>;\n    constructor(source?: PromiseLike<ArrayBufferViewInput> | Response | ReadableStream<ArrayBufferViewInput> | NodeJS.ReadableStream | AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput>) {\n        if (source instanceof AsyncByteStream) {\n            this.source = (source as AsyncByteStream).source;\n        } else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        } else if (isReadableDOMStream<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        } else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body!));\n        } else if (isIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        } else if (isPromise<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isAsyncIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public get closed(): Promise<void> { return this.source.closed; }\n    public cancel(reason?: any) { return this.source.cancel(reason); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\ninterface ByteStreamSourceIterator<T> extends IterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): IteratorResult<T>;\n}\n\n/** @ignore */\ninterface AsyncByteStreamSourceIterator<T> extends AsyncIterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nclass ByteStreamSource<T> {\n    constructor(protected source: ByteStreamSourceIterator<T>) {}\n    public cancel(reason?: any) { this.return(reason); }\n    public peek(size?: number | null): T | null { return this.next(size, 'peek').value; }\n    public read(size?: number | null): T | null { return this.next(size, 'read').value; }\n    public next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return this.source.next({ cmd, size }); }\n    public throw(value?: any) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    public return(value?: any) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n\n/** @ignore */\nclass AsyncByteStreamSource<T> implements Readable<T> {\n\n    private _closedPromise: Promise<void>;\n    private _closedPromiseResolve?: (value?: any) => void;\n    constructor (protected source: ByteStreamSourceIterator<T> | AsyncByteStreamSourceIterator<T>) {\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async read(size?: number | null): Promise<T | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<T | null> { return (await this.next(size, 'peek')).value; }\n    public async next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return (await this.source.next({ cmd, size })); }\n    public async throw(value?: any) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    public async return(value?: any) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FileHandle } from './interfaces';\nimport { ByteStream, AsyncByteStream } from './stream';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\n\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    public size: number;\n    public position: number = 0;\n    protected buffer: Uint8Array | null;\n    constructor(buffer: ArrayBufferViewInput, byteLength?: number) {\n        super();\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    public readInt32(position: number) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public seek(position: number) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public read(nBytes?: number | null) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            this.position = Math.min(size,\n                 position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    public readAt(position: number, nBytes: number) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    public close() { this.buffer && (this.buffer = null); }\n    public throw(value?: any) { this.close(); return { done: true, value }; }\n    public return(value?: any) { this.close(); return { done: true, value }; }\n}\n\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    // @ts-ignore\n    public size: number;\n    public position: number = 0;\n    public _pending?: Promise<void>;\n    protected _handle: FileHandle | null;\n    constructor(file: FileHandle, byteLength?: number) {\n        super();\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        } else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    public async readInt32(position: number) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public async seek(position: number) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public async read(nBytes?: number | null) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    public async readAt(position: number, nBytes: number) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    public async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    public async throw(value?: any) { await this.close(); return { done: true, value }; }\n    public async return(value?: any) { await this.close(); return { done: true, value }; }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nconst carryBit16 = 1 << 16;\n\n/** @ignore */\nfunction intAsHex(value: number): string {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n                      10,\n                      100,\n                      1000,\n                      10000,\n                      100000,\n                      1000000,\n                      10000000,\n                      100000000];\n\n/** @ignore */\nexport class BaseInt64 {\n    constructor (protected buffer: Uint32Array) {}\n\n    public high(): number { return this.buffer[1]; }\n    public low (): number { return this.buffer[0]; }\n\n    protected _times(other: BaseInt64) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n\n        let sum = product >>> 16;\n\n        product = L[2] * R[3];\n        sum += product;\n\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n\n        this.buffer[0] += sum << 16;\n\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n\n        return this;\n      }\n\n    protected _plus(other: BaseInt64) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n          ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n\n    public lessThan(other: BaseInt64): boolean {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n\n    public equals(other: BaseInt64): boolean {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n\n    public greaterThan(other: BaseInt64): boolean {\n        return other.lessThan(this);\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    public times(other: Uint64): Uint64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Uint64): Uint64 {\n        this._plus(other);\n        return this;\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Uint64 {\n        return Uint64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Uint64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Uint64 {\n        const length = str.length;\n\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    public negate(): Int64 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        return this;\n    }\n\n    public times(other: Int64): Int64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Int64): Int64 {\n        this._plus(other);\n        return this;\n    }\n\n    public lessThan(other: Int64): boolean {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Int64 {\n        return Int64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Int64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Int64 {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int128 {\n    constructor (private buffer: Uint32Array) {\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n\n    public high(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n\n    public low(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n\n    public negate(): Int128 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        if (this.buffer[1] == 0) { ++this.buffer[2]; }\n        if (this.buffer[2] == 0) { ++this.buffer[3]; }\n        return this;\n    }\n\n    public times(other: Int128): Int128 {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3],  0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2],  0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1],  0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0],  0]));\n\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n\n        this.buffer[1] = sum.low();\n\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n                        .plus(Uint64.multiply(L1, R2))\n                        .plus(Uint64.multiply(L2, R1))\n                        .plus(Uint64.multiply(L3, R0)).low();\n\n        return this;\n    }\n\n    public plus(other: Int128): Int128 {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n\n        return this;\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(4)): Int128 {\n        return Int128.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(4)): Int128 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(4)): Int128 {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport * as type from '../type';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { packBools } from '../util/bit';\nimport { encodeUtf8 } from '../util/utf8';\nimport { Int64, Int128 } from '../util/int';\nimport { UnionMode, DateUnit } from '../enum';\nimport { toArrayBufferView } from '../util/buffer';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\n\n/** @ignore */\nexport interface VectorLoader extends Visitor {\n    visit<T extends DataType>(node: Field<T> | T): Data<T>;\n    visitMany<T extends DataType>(nodes: (Field<T> | T)[]): Data<T>[];\n}\n\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    private bytes: Uint8Array;\n    private nodes: FieldNode[];\n    private nodesIndex: number = -1;\n    private buffers: BufferRegion[];\n    private buffersIndex: number = -1;\n    private dictionaries: Map<number, Vector<any>>;\n    constructor(bytes: Uint8Array, nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super();\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n\n    public visit<T extends DataType>(node: Field<T> | T): Data<T> {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n\n    public visitNull            <T extends type.Null>            (type: T, { length,           } = this.nextFieldNode()) { return            Data.Null(type, 0, length);                                                                                                                                 }\n    public visitBool            <T extends type.Bool>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitInt             <T extends type.Int>             (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFloat           <T extends type.Float>           (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitUtf8            <T extends type.Utf8>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitBinary          <T extends type.Binary>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitFixedSizeBinary <T extends type.FixedSizeBinary> (type: T, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDate            <T extends type.Date_>           (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTimestamp       <T extends type.Timestamp>       (type: T, { length, nullCount } = this.nextFieldNode()) { return       Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTime            <T extends type.Time>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDecimal         <T extends type.Decimal>         (type: T, { length, nullCount } = this.nextFieldNode()) { return         Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitList            <T extends type.List>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n    public visitStruct          <T extends type.Struct>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children));                                                 }\n    public visitUnion           <T extends type.Union>           (type: T                                              ) { return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type as type.SparseUnion) : this.visitDenseUnion(type as type.DenseUnion);                                      }\n    public visitDenseUnion      <T extends type.DenseUnion>      (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    public visitSparseUnion     <T extends type.SparseUnion>     (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children));                         }\n    public visitDictionary      <T extends type.Dictionary>      (type: T, { length, nullCount } = this.nextFieldNode()) { return      Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type));                        }\n    public visitInterval        <T extends type.Interval>        (type: T, { length, nullCount } = this.nextFieldNode()) { return        Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFixedSizeList   <T extends type.FixedSizeList>   (type: T, { length, nullCount } = this.nextFieldNode()) { return   Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0]));                                                  }\n    public visitMap             <T extends type.Map_>            (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n\n    protected nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    protected nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    protected readNullBitmap<T extends DataType>(type: T, nullCount: number, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    protected readOffsets<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readTypeIds<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readData<T extends DataType>(_type: T, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    protected readDictionary<T extends type.Dictionary>(type: T): Vector<T['dictionary']> {\n        return this.dictionaries.get(type.id)!;\n    }\n}\n\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    private sources: any[][];\n    constructor(sources: any[][], nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    protected readNullBitmap<T extends DataType>(_type: T, nullCount: number, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    protected readOffsets<T extends DataType>(_type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    protected readTypeIds<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    protected readData<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset] as string[]));\n        } else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset] as string[]);\n        } else if (DataType.isBool(type)) {\n            return packBools(sources[offset] as number[]);\n        } else if (DataType.isUtf8(type)) {\n            return encodeUtf8((sources[offset] as string[]).join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n\n/** @ignore */\nfunction binaryDataFromJSON(values: string[]) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport * as Schema_ from '../fb/Schema';\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\n\nimport Null = Schema_.org.apache.arrow.flatbuf.Null;\nimport Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nimport Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nimport Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nimport Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nimport Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nimport Date = Schema_.org.apache.arrow.flatbuf.Date;\nimport Time = Schema_.org.apache.arrow.flatbuf.Time;\nimport Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nimport Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nimport List = Schema_.org.apache.arrow.flatbuf.List;\nimport Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nimport Union = Schema_.org.apache.arrow.flatbuf.Union;\nimport DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nimport FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nimport FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nimport Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n\n/** @ignore */\nexport interface TypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T, builder: Builder): number | undefined;\n}\n\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T, builder: Builder): number | undefined {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    public visitNull<T extends type.Null>(_node: T, b: Builder) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    public visitInt<T extends type.Int>(node: T, b: Builder) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    public visitFloat<T extends type.Float>(node: T, b: Builder) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    public visitBinary<T extends type.Binary>(_node: T, b: Builder) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    public visitBool<T extends type.Bool>(_node: T, b: Builder) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    public visitUtf8<T extends type.Utf8>(_node: T, b: Builder) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    public visitDecimal<T extends type.Decimal>(node: T, b: Builder) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    public visitDate<T extends type.Date_>(node: T, b: Builder) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    public visitTime<T extends type.Time>(node: T, b: Builder) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    public visitTimestamp<T extends type.Timestamp>(node: T, b: Builder) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    public visitInterval<T extends type.Interval>(node: T, b: Builder) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    public visitList<T extends type.List>(_node: T, b: Builder) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    public visitStruct<T extends type.Struct>(_node: T, b: Builder) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    public visitUnion<T extends type.Union>(node: T, b: Builder) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T, b: Builder) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(node: T, b: Builder) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(node: T, b: Builder) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    public visitMap<T extends type.Map_>(node: T, b: Builder) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n\n/** @ignore */\nexport const instance = new TypeAssembler();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Schema, Field } from '../../schema';\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum';\n\n/** @ignore */\nexport function schemaFromJSON(_schema: any, dictionaries: Map<number, DataType> = new Map()) {\n    return new Schema(\n        schemaFieldsFromJSON(_schema, dictionaries),\n        customMetadataFromJSON(_schema['customMetadata']),\n        dictionaries\n    );\n}\n\n/** @ignore */\nexport function recordBatchFromJSON(b: any) {\n    return new RecordBatch(\n        b['count'],\n        fieldNodesFromJSON(b['columns']),\n        buffersFromJSON(b['columns'])\n    );\n}\n\n/** @ignore */\nexport function dictionaryBatchFromJSON(b: any) {\n    return new DictionaryBatch(\n        recordBatchFromJSON(b['data']),\n        b['id'], b['isDelta']\n    );\n}\n\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema: any, dictionaries?: Map<number, DataType>) {\n    return (_schema['fields'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldChildrenFromJSON(_field: any, dictionaries?: Map<number, DataType>): Field[] {\n    return (_field['children'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldNodesFromJSON(xs: any[]): FieldNode[] {\n    return (xs || []).reduce<FieldNode[]>((fieldNodes, column: any) => [\n        ...fieldNodes,\n        new FieldNode(\n            column['count'],\n            nullCountFromJSON(column['VALIDITY'])\n        ),\n        ...fieldNodesFromJSON(column['children'])\n    ], [] as FieldNode[]);\n}\n\n/** @ignore */\nfunction buffersFromJSON(xs: any[], buffers: BufferRegion[] = []): BufferRegion[] {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n\n/** @ignore */\nfunction nullCountFromJSON(validity: number[]) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n\n/** @ignore */\nexport function fieldFromJSON(_field: any, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let keys: TKeys | null;\n    let field: Field | void;\n    let dictMeta: any;\n    let type: DataType<any>;\n    let dictType: Dictionary;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction customMetadataFromJSON(_metadata?: object) {\n    return new Map<string, string>(Object.entries(_metadata || {}));\n}\n\n/** @ignore */\nfunction indexTypeFromJSON(_type: any) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n\n/** @ignore */\nfunction typeFromJSON(f: any, children?: Field[]): DataType<any> {\n\n    const typeId = f['type']['name'];\n\n    switch (typeId) {\n        case 'NONE':   return new Null();\n        case 'null':   return new Null();\n        case 'binary': return new Binary();\n        case 'utf8':   return new Utf8();\n        case 'bool':   return new Bool();\n        case 'list':   return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth'] as IntBitWidth);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']] as any);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']] as any);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']] as any, t['bitWidth'] as TimeBitWidth);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']] as any, t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']] as any);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']] as any, (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../../fb/Schema';\nimport * as Message_ from '../../fb/Message';\n\nimport { Schema, Field } from '../../schema';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\nimport { MessageHeader, MetadataVersion } from '../../enum';\nimport { instance as typeAssembler } from '../../visitor/typeassembler';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport Type = Schema_.org.apache.arrow.flatbuf.Type;\nimport _Field = Schema_.org.apache.arrow.flatbuf.Field;\nimport _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nimport _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nimport _Message = Message_.org.apache.arrow.flatbuf.Message;\nimport _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nimport _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nimport _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nimport _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nimport _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nimport _DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\n\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\n/**\n * @ignore\n * @private\n **/\nexport class Message<T extends MessageHeader = any> {\n\n    /** @nocollapse */\n    public static fromJSON<T extends MessageHeader>(msg: any, headerType: T): Message<T> {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength: Long = _message.bodyLength()!;\n        const version: MetadataVersion = _message.version();\n        const headerType: MessageHeader = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static encode<T extends MessageHeader>(message: Message<T>) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header() as Schema);\n        } else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header() as RecordBatch);\n        } else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header() as DictionaryBatch);\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n\n    /** @nocollapse */\n    public static from(header: Schema | RecordBatch | DictionaryBatch, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n\n    // @ts-ignore\n    public body: Uint8Array;\n    protected _headerType: T;\n    protected _bodyLength: number;\n    protected _version: MetadataVersion;\n    public get type() { return this.headerType; }\n    public get version() { return this._version; }\n    public get headerType() { return this._headerType; }\n    public get bodyLength() { return this._bodyLength; }\n    // @ts-ignore\n    protected _createHeader: MessageHeaderDecoder;\n    public header() { return this._createHeader<T>(); }\n    public isSchema(): this is Message<MessageHeader.Schema> { return this.headerType === MessageHeader.Schema; }\n    public isRecordBatch(): this is Message<MessageHeader.RecordBatch> { return this.headerType === MessageHeader.RecordBatch; }\n    public isDictionaryBatch(): this is Message<MessageHeader.DictionaryBatch> { return this.headerType === MessageHeader.DictionaryBatch; }\n\n    constructor(bodyLength: Long | number, version: MetadataVersion, headerType: T, header?: any) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    protected _length: number;\n    protected _nodes: FieldNode[];\n    protected _buffers: BufferRegion[];\n    public get nodes() { return this._nodes; }\n    public get length() { return this._length; }\n    public get buffers() { return this._buffers; }\n    constructor(length: Long | number, nodes: FieldNode[], buffers: BufferRegion[]) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n\n    protected _id: number;\n    protected _isDelta: boolean;\n    protected _data: RecordBatch;\n    public get id() { return this._id; }\n    public get data() { return this._data; }\n    public get isDelta() { return this._isDelta; }\n    public get length(): number { return this.data.length; }\n    public get nodes(): FieldNode[] { return this.data.nodes; }\n    public get buffers(): BufferRegion[] { return this.data.buffers; }\n\n    constructor(data: RecordBatch, id: Long | number, isDelta: boolean = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    public offset: number;\n    public length: number;\n    constructor(offset: Long | number, length: Long | number) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    public length: number;\n    public nullCount: number;\n    constructor(length: Long | number, nullCount: Long | number) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n\n/** @ignore */\nfunction messageHeaderFromJSON(message: any, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\n/** @ignore */\nfunction decodeMessageHeader(message: _Message, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema())!);\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch())!, message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch())!, message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\n\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\n\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\n\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\n\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\n\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n\ndeclare module '../../schema' {\n    namespace Field {\n        export { encodeField as encode };\n        export { decodeField as decode };\n        export { fieldFromJSON as fromJSON };\n    }\n    namespace Schema {\n        export { encodeSchema as encode };\n        export { decodeSchema as decode };\n        export { schemaFromJSON as fromJSON };\n    }\n}\n\ndeclare module './message' {\n    namespace RecordBatch {\n        export { encodeRecordBatch as encode };\n        export { decodeRecordBatch as decode };\n        export { recordBatchFromJSON as fromJSON };\n    }\n    namespace DictionaryBatch {\n        export { encodeDictionaryBatch as encode };\n        export { decodeDictionaryBatch as decode };\n        export { dictionaryBatchFromJSON as fromJSON };\n    }\n    namespace FieldNode {\n        export { encodeFieldNode as encode };\n        export { decodeFieldNode as decode };\n    }\n    namespace BufferRegion {\n        export { encodeBufferRegion as encode };\n        export { decodeBufferRegion as decode };\n    }\n}\n\n/** @ignore */\nfunction decodeSchema(_schema: _Schema, dictionaries: Map<number, DataType> = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n\n/** @ignore */\nfunction decodeRecordBatch(batch: _RecordBatch, version = MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n\n/** @ignore */\nfunction decodeDictionaryBatch(batch: _DictionaryBatch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data()!, version), batch.id(), batch.isDelta());\n}\n\n/** @ignore */\nfunction decodeBufferRegion(b: _Buffer) {\n    return new BufferRegion(b.offset(), b.length());\n}\n\n/** @ignore */\nfunction decodeFieldNode(f: _FieldNode) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n\n/** @ignore */\nfunction decodeFieldNodes(batch: _RecordBatch) {\n    const nodes = [] as FieldNode[];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n\n/** @ignore */\nfunction decodeBuffers(batch: _RecordBatch, version: MetadataVersion) {\n    const bufferRegions = [] as BufferRegion[];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n        // If this Arrow buffer was written before version 4,\n        // advance the buffer's bb_pos 8 bytes to skip past\n        // the now-removed page_id field\n        if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n\n/** @ignore */\nfunction decodeSchemaFields(schema: _Schema, dictionaries?: Map<number, DataType>) {\n    const fields = [] as Field[];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n\n/** @ignore */\nfunction decodeFieldChildren(field: _Field, dictionaries?: Map<number, DataType>): Field[] {\n    const children = [] as Field[];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n\n/** @ignore */\nfunction decodeField(f: _Field, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let field: Field | void;\n    let type: DataType<any>;\n    let keys: _Int | TKeys | null;\n    let dictType: Dictionary;\n    let dictMeta: _DictionaryEncoding | null;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name()!, type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction decodeCustomMetadata(parent?: _Schema | _Field | null) {\n    const data = new Map<string, string>();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value()!);\n            }\n        }\n    }\n    return data;\n}\n\n/** @ignore */\nfunction decodeIndexType(_type: _Int) {\n    return new Int(_type.isSigned(), _type.bitWidth() as IntBitWidth);\n}\n\n/** @ignore */\nfunction decodeFieldType(f: _Field, children?: Field[]): DataType<any> {\n\n    const typeId = f.typeType();\n\n    switch (typeId) {\n        case Type.NONE:    return new Null();\n        case Type.Null:    return new Null();\n        case Type.Binary:  return new Binary();\n        case Type.Utf8:    return new Utf8();\n        case Type.Bool:    return new Bool();\n        case Type.List:    return new List((children || [])[0]);\n        case Type.Struct_: return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int())!;\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint())!;\n            return new Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal())!;\n            return new Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date())!;\n            return new Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time())!;\n            return new Time(t.unit(), t.bitWidth() as TimeBitWidth);\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp())!;\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval())!;\n            return new Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union())!;\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary())!;\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList())!;\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map())!;\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n\n/** @ignore */\nfunction encodeSchema(b: Builder, schema: Schema) {\n\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n\n    if (metadataOffset !== -1) { _Schema.addCustomMetadata(b, metadataOffset); }\n\n    return _Schema.endSchema(b);\n}\n\n/** @ignore */\nfunction encodeField(b: Builder, field: Field) {\n\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n\n    let type = field.type;\n    let typeId: Type = <any> field.typeId;\n\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b)!;\n    } else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b)!;\n        typeOffset = typeAssembler.visit(type.dictionary, b)!;\n    }\n\n    const childOffsets = (type.children || []).map((f: Field) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n\n    if (nameOffset !== -1) { _Field.addName(b, nameOffset); }\n    if (dictionaryOffset !== -1) { _Field.addDictionary(b, dictionaryOffset); }\n    if (metadataOffset !== -1) { _Field.addCustomMetadata(b, metadataOffset); }\n\n    return _Field.endField(b);\n}\n\n/** @ignore */\nfunction encodeRecordBatch(b: Builder, recordBatch: RecordBatch) {\n\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n\n    const nodesVectorOffset = b.endVector();\n\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n\n    const buffersVectorOffset = b.endVector();\n\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n\n/** @ignore */\nfunction encodeDictionaryBatch(b: Builder, dictionaryBatch: DictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n\n/** @ignore */\nfunction encodeFieldNode(b: Builder, node: FieldNode) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n\n/** @ignore */\nfunction encodeBufferRegion(b: Builder, node: BufferRegion) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n\n/** @ignore */\nconst platformIsLittleEndian = (function() {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n/** @ignore */\ntype MessageHeaderDecoder = <T extends MessageHeader>() => T extends MessageHeader.Schema ? Schema\n                                                         : T extends MessageHeader.RecordBatch ? RecordBatch\n                                                         : T extends MessageHeader.DictionaryBatch ? DictionaryBatch : never;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MessageHeader } from '../enum';\nimport { flatbuffers } from 'flatbuffers';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { Message } from './metadata/message';\nimport { isFileHandle } from '../util/compat';\nimport { AsyncRandomAccessFile } from '../io/file';\nimport { toUint8Array, ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, ReadableSource, AsyncByteStream } from '../io/stream';\nimport { ArrowJSON, ArrowJSONLike, ITERATOR_DONE, FileHandle } from '../io/interfaces';\n\n/** @ignore */ const invalidMessageType       = (type: MessageHeader) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage              = (type: MessageHeader) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata   = (expected: number, actual: number) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected: number, actual: number) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n\n/** @ignore */\nexport class MessageReader implements IterableIterator<Message> {\n    protected source: ByteStream;\n    constructor(source: ByteStream | ArrayBufferViewInput | Iterable<ArrayBufferViewInput>) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    public [Symbol.iterator](): IterableIterator<Message> { return this as IterableIterator<Message>; }\n    public next(): IteratorResult<Message> {\n        let r;\n        if ((r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readMessageBody(bodyLength: number): Uint8Array {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected readMetadataLength(): IteratorResult<number> {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected readMetadata(metadataLength: number): IteratorResult<Message> {\n        const buf = this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class AsyncMessageReader implements AsyncIterableIterator<Message> {\n    protected source: AsyncByteStream;\n    constructor(source: ReadableSource<Uint8Array>);\n    constructor(source: FileHandle, byteLength?: number);\n    constructor(source: any, byteLength?: number) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n            ? new AsyncRandomAccessFile(source, byteLength!)\n            : new AsyncByteStream(source);\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<Message> { return this as AsyncIterableIterator<Message>; }\n    public async next(): Promise<IteratorResult<Message>> {\n        let r;\n        if ((r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = await this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public async throw(value?: any) { return await this.source.throw(value); }\n    public async return(value?: any) { return await this.source.return(value); }\n    public async readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = await this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public async readMessageBody(bodyLength: number): Promise<Uint8Array> {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected async readMetadataLength(): Promise<IteratorResult<number>> {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected async readMetadata(metadataLength: number): Promise<IteratorResult<Message>> {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    private _schema = false;\n    private _json: ArrowJSON;\n    private _body: any[] = [];\n    private _batchIndex = 0;\n    private _dictionaryIndex = 0;\n    constructor(source: ArrowJSON | ArrowJSONLike) {\n        super(new Uint8Array(0));\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    public next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    public readMessageBody(_bodyLength?: number) {\n        return flattenDataSources(this._body) as any;\n        function flattenDataSources(xs: any[]): any[][] {\n            return (xs || []).reduce<any[][]>((buffers, column: any) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], [] as any[][]);\n        }\n    }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\n\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n\n/** @ignore */\nexport function checkForMagicArrowString(buffer: Uint8Array, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { Type, UnionMode } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { rebaseValueOffsets } from '../util/buffer';\nimport { packBools, truncateBitmap } from '../util/bit';\nimport { selectVectorChildrenArgs } from '../util/args';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp, Union,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n} from '../type';\n\n/** @ignore */\nexport interface VectorAssembler extends Visitor {\n    visit<T extends Vector>(node: T): this;\n    visitMany<T extends Vector>(nodes: T[]): this[];\n    getVisitFn<T extends Type>(node: T): (vector: V<T>) => this;\n    getVisitFn<T extends DataType>(node: V<T> | Data<T> | T): (vector: V<T>) => this;\n\n    visitBool                 <T extends Bool>            (vector: V<T>): this;\n    visitInt                  <T extends Int>             (vector: V<T>): this;\n    visitFloat                <T extends Float>           (vector: V<T>): this;\n    visitUtf8                 <T extends Utf8>            (vector: V<T>): this;\n    visitBinary               <T extends Binary>          (vector: V<T>): this;\n    visitFixedSizeBinary      <T extends FixedSizeBinary> (vector: V<T>): this;\n    visitDate                 <T extends Date_>           (vector: V<T>): this;\n    visitTimestamp            <T extends Timestamp>       (vector: V<T>): this;\n    visitTime                 <T extends Time>            (vector: V<T>): this;\n    visitDecimal              <T extends Decimal>         (vector: V<T>): this;\n    visitList                 <T extends List>            (vector: V<T>): this;\n    visitStruct               <T extends Struct>          (vector: V<T>): this;\n    visitUnion                <T extends Union>           (vector: V<T>): this;\n    visitInterval             <T extends Interval>        (vector: V<T>): this;\n    visitFixedSizeList        <T extends FixedSizeList>   (vector: V<T>): this;\n    visitMap                  <T extends Map_>            (vector: V<T>): this;\n}\n\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n\n    /** @nocollapse */\n    public static assemble<T extends Vector | RecordBatch>(...args: (T | T[])[]) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = selectVectorChildrenArgs(RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n\n    private constructor() { super(); }\n\n    public visit<T extends Vector>(vector: T): this {\n        if (!DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap)\n                );\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n\n    public visitNull<T extends Null>(_nullV: V<T>) {\n        return this;\n    }\n    public visitDictionary<T extends Dictionary>(vector: V<T>) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n\n    public get nodes() { return this._nodes; }\n    public get buffers() { return this._buffers; }\n    public get byteLength() { return this._byteLength; }\n    public get bufferRegions() { return this._bufferRegions; }\n\n    protected _byteLength = 0;\n    protected _nodes: FieldNode[] = [];\n    protected _buffers: ArrayBufferView[] = [];\n    protected _bufferRegions: BufferRegion[] = [];\n}\n\n/** @ignore */\nfunction addBuffer(this: VectorAssembler, values: ArrayBufferView) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n\n/** @ignore */\nfunction assembleUnion<T extends Union>(this: VectorAssembler, vector: V<T>) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    } else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        } else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child: Vector | null, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n\n/** @ignore */\nfunction assembleBoolVector<T extends Bool>(this: VectorAssembler, vector: V<T>) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values: Uint8Array;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    } else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(vector));\n}\n\n/** @ignore */\nfunction assembleFlatVector<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval>(this: VectorAssembler, vector: V<T>) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n\n/** @ignore */\nfunction assembleFlatListVector<T extends Utf8 | Binary>(this: VectorAssembler, vector: V<T>) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n\n/** @ignore */\nfunction assembleListVector<T extends Map_ | List | FixedSizeList>(this: VectorAssembler, vector: V<T>) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0)!);\n}\n\n/** @ignore */\nfunction assembleNestedVector<T extends Struct | Union>(this: VectorAssembler, vector: V<T>) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)!).filter(Boolean))[0];\n}\n\nVectorAssembler.prototype.visitBool            =     assembleBoolVector;\nVectorAssembler.prototype.visitInt             =     assembleFlatVector;\nVectorAssembler.prototype.visitFloat           =     assembleFlatVector;\nVectorAssembler.prototype.visitUtf8            = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary          = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary =     assembleFlatVector;\nVectorAssembler.prototype.visitDate            =     assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp       =     assembleFlatVector;\nVectorAssembler.prototype.visitTime            =     assembleFlatVector;\nVectorAssembler.prototype.visitDecimal         =     assembleFlatVector;\nVectorAssembler.prototype.visitList            =     assembleListVector;\nVectorAssembler.prototype.visitStruct          =   assembleNestedVector;\nVectorAssembler.prototype.visitUnion           =          assembleUnion;\nVectorAssembler.prototype.visitInterval        =     assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList   =     assembleListVector;\nVectorAssembler.prototype.visitMap             =     assembleListVector;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { MAGIC } from './message';\nimport { Vector } from '../vector';\nimport { Column } from '../column';\nimport { DataType } from '../type';\nimport { Schema, Field } from '../schema';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { FileBlock, Footer } from './metadata/file';\nimport { MessageHeader, MetadataVersion } from '../enum';\nimport { WritableSink, AsyncByteQueue } from '../io/stream';\nimport { VectorAssembler } from '../visitor/vectorassembler';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { Writable, ReadableInterop, ReadableDOMStreamOptions } from '../io/interfaces';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat';\n\nexport interface RecordBatchStreamWriterOptions {\n    /**\n     *\n     */\n    autoDestroy?: boolean;\n    /**\n     * A flag indicating whether the RecordBatchWriter should construct pre-0.15.0\n     * encapsulated IPC Messages, which reserves  4 bytes for the Message metadata\n     * length instead of 8.\n     * @see https://issues.apache.org/jira/browse/ARROW-6313\n     */\n    writeLegacyIpcFormat?: boolean;\n}\n\nexport class RecordBatchWriter<T extends { [key: string]: DataType } = any> extends ReadableInterop<Uint8Array> implements Writable<RecordBatch<T>> {\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n        // @ts-ignore\n        readableStrategy?: { highWaterMark?: number, size?: any }\n    ): { writable: WritableStream<Table<T> | RecordBatch<T>>, readable: ReadableStream<Uint8Array> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    constructor(options?: RecordBatchStreamWriterOptions) {\n        super();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n\n    protected _position = 0;\n    protected _started = false;\n    protected _autoDestroy: boolean;\n    protected _writeLegacyIpcFormat: boolean;\n    // @ts-ignore\n    protected _sink = new AsyncByteQueue();\n    protected _schema: Schema | null = null;\n    protected _dictionaryBlocks: FileBlock[] = [];\n    protected _recordBatchBlocks: FileBlock[] = [];\n    protected _dictionaryDeltaOffsets = new Map<number, number>();\n\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync: any = false) {\n        return this._sink.toString(sync) as Promise<string> | string;\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync: any = false) {\n        return this._sink.toUint8Array(sync) as Promise<Uint8Array> | Uint8Array;\n    }\n\n    public writeAll(input: Table<T> | Iterable<RecordBatch<T>>): this;\n    public writeAll(input: AsyncIterable<RecordBatch<T>>): Promise<this>;\n    public writeAll(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<any> | Table<T> | Iterable<RecordBatch<T>> | AsyncIterable<RecordBatch<T>>) {\n        if (isPromise<any>(input)) {\n            return input.then((x) => this.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, <any> input);\n    }\n\n    public get closed() { return this._sink.closed; }\n    public [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    public toDOMStream(options?: ReadableDOMStreamOptions) { return this._sink.toDOMStream(options); }\n    public toNodeStream(options?: import('stream').ReadableOptions) { return this._sink.toNodeStream(options); }\n\n    public close() {\n        return this.reset()._sink.close();\n    }\n    public abort(reason?: any) {\n        return this.reset()._sink.abort(reason);\n    }\n    public finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    public reset(sink: WritableSink<ArrayBufferViewInput> = this._sink, schema: Schema<T> | null = null) {\n\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink as AsyncByteQueue;\n        } else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            } else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            } else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n\n        return this;\n    }\n\n    public write(payload?: Table<T> | RecordBatch<T> | Iterable<RecordBatch<T>> | null) {\n\n        let schema: Schema<T> | null = null;\n\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        } else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        } else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        } else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        } else if (payload instanceof Table) {\n            this.writeAll(payload.chunks);\n        } else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n\n    protected _writeMessage<T extends MessageHeader>(message: Message<T>, alignment = 8) {\n\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        } else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) { this._write(buffer); }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n\n    protected _write(chunk: ArrayBufferViewInput) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMessage(Message.from(schema));\n    }\n\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n\n    protected _writeMagic() {\n        return this._write(MAGIC);\n    }\n\n    protected _writePadding(nBytes: number) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeBodyBuffers(buffers: ArrayBufferView[]) {\n        let buffer: ArrayBufferView;\n        let size: number, padding: number;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? (dictionary as any).chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n\n/** @ignore */\nexport class RecordBatchStreamWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): RecordBatchStreamWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any, options?: RecordBatchStreamWriterOptions) {\n        const writer = new RecordBatchStreamWriter<T>(options);\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n\n/** @ignore */\nexport class RecordBatchFileWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchFileWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any) {\n        const writer = new RecordBatchFileWriter<T>();\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n\n    // @ts-ignore\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMagic()._writePadding(2);\n    }\n\n    protected _writeFooter(schema: Schema<T>) {\n        const buffer = Footer.encode(new Footer(\n            schema, MetadataVersion.V4,\n            this._recordBatchBlocks, this._dictionaryBlocks\n        ));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n\n/** @ignore */\nexport class RecordBatchJSONWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchJSONWriter<T>;\n    // @ts-ignore\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: any) {\n        return new RecordBatchJSONWriter<T>().writeAll(input as any);\n    }\n\n    private _recordBatches: RecordBatch[];\n    private _dictionaries: RecordBatch[];\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n\n    protected _writeMessage() { return this; }\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) { return this; }\n    protected _writeSchema(schema: Schema<T>) {\n        return this._write(`{\\n  \"schema\": ${\n            JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)\n        }`);\n    }\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    public close() {\n\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n\n        this._dictionaries = [];\n        this._recordBatches = [];\n\n        return super.close();\n    }\n}\n\n/** @ignore */\nfunction writeAll<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, input: Table<T> | Iterable<RecordBatch<T>>) {\n    let chunks = input as Iterable<RecordBatch<T>>;\n    if (input instanceof Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nasync function writeAllAsync<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, batches: AsyncIterable<RecordBatch<T>>) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }: Field): object {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary: Vector, id: number, isDelta = false) {\n    const field = new Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = JSONVectorAssembler.assemble(new Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n\n/** @ignore */\nfunction recordBatchToJSON(records: RecordBatch) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Data, Buffers } from '../data';\nimport { Schema, Field } from '../schema';\nimport { Chunked } from '../vector/chunked';\nimport { RecordBatch } from '../recordbatch';\n\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength: number) => <unknown> [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n] as Buffers<any>;\n\n/** @ignore */\nexport function ensureSameLengthData<T extends { [key: string]: DataType } = any>(\n    schema: Schema<T>,\n    chunks: Data<T[keyof T]>[],\n    batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)\n) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [] as Data<T[keyof T]>[];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        } else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }) as Field<T[keyof T]>);\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return [new Schema<T>(fields), batchLength, batchData] as [Schema<T>, number, Data<T[keyof T]>[]];\n}\n\n/** @ignore */\nexport function distributeColumnsIntoRecordBatches<T extends { [key: string]: DataType } = any>(columns: Column<T[keyof T]>[]): [Schema<T>, RecordBatch<T>[]] {\n    return distributeVectorsIntoRecordBatches<T>(new Schema<T>(columns.map(({ field }) => field)), columns);\n}\n\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, vecs: (Vector<T[keyof T]> | Chunked<T[keyof T]>)[]): [Schema<T>, RecordBatch<T>[]] {\n    return uniformlyDistributeChunksAcrossRecordBatches<T>(schema, vecs.map((v) => v instanceof Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\n\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, columns: Data<T[keyof T]>[][]): [Schema<T>, RecordBatch<T>[]] {\n\n    const fields = [...schema.fields];\n    const batchArgs = [] as [number, Data<T[keyof T]>[]][];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n\n    let numBatches = 0, batchLength = 0;\n    let i: number = -1, numColumns = columns.length;\n    let child: Data<T[keyof T]>, childData: Data<T[keyof T]>[] = [];\n\n    while (memo.numBatches-- > 0) {\n\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift()!;\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new Schema<T>(fields, schema.metadata),\n        batchArgs.map((xs) => new RecordBatch(schema, ...xs))\n    ];\n}\n\n/** @ignore */\nfunction distributeChildData<T extends { [key: string]: DataType } = any>(fields: Field<T[keyof T]>[], batchLength: number, childData: Data<T[keyof T]>[], columns: Data<T[keyof T]>[][], memo: { numBatches: number }) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            } else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        } else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }) as Field<T[keyof T]>);\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return childData;\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { VectorType as V } from '../interfaces';\nimport { AbstractVector, Vector, Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\nexport interface BaseVector<T extends DataType = any> extends Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n    slice(begin?: number, end?: number): V<T>;\n    concat(...others: Vector<T>[]): Chunked<T>;\n    clone<R extends DataType = T>(data: Data<R>, children?: Vector<R>[]): V<R>;\n}\n\n/** @ignore */\nexport abstract class BaseVector<T extends DataType = any> extends AbstractVector<T>\n    implements Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n\n    protected _children?: Vector[];\n\n    constructor(data: Data<T>, children?: Vector[]) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n\n    public readonly data: Data<T>;\n    public readonly numChildren: number;\n\n    public get type() { return this.data.type; }\n    public get typeId() { return this.data.typeId; }\n    public get length() { return this.data.length; }\n    public get offset() { return this.data.offset; }\n    public get stride() { return this.data.stride; }\n    public get nullCount() { return this.data.nullCount; }\n    public get byteLength() { return this.data.byteLength; }\n    public get VectorName() { return `${Type[this.typeId]}Vector`; }\n\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n\n    public get values() { return this.data.values; }\n    public get typeIds() { return this.data.typeIds; }\n    public get nullBitmap() { return this.data.nullBitmap; }\n    public get valueOffsets() { return this.data.valueOffsets; }\n\n    public get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n\n    public clone<R extends DataType = T>(data: Data<R>, children = this._children) {\n        return Vector.new<R>(data, children) as any;\n    }\n\n    public concat(...others: Vector<T>[]) {\n        return Chunked.concat<T>(this, ...others);\n    }\n\n    public slice(begin?: number, end?: number) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public isValid(index: number): boolean {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Vector<R> | null {\n        return index < 0 || index >= this.numChildren ? null : (\n            (this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new<R>(this.data.childData[index] as Data<R>))\n        ) as Vector<R>;\n    }\n\n    public toJSON(): any { return [...this]; }\n\n    protected _sliceInternal(self: this, begin: number, end: number) {\n        return self.clone(self.data.slice(begin, end - begin), null!);\n    }\n\n    // @ts-ignore\n    protected _bindDataAccessors(data: Data<T>) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\n\n(BaseVector.prototype as any)[Symbol.isConcatSpreadable] = true;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\n\n/** @ignore */\nexport class BinaryVector extends BaseVector<Binary> {\n    public asUtf8() {\n        return Vector.new(this.data.clone(new Utf8()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class BoolVector extends BaseVector<Bool> {\n    public static from<TNull = any>(input: Iterable<boolean | TNull>): BoolVector;\n    public static from<TNull = any>(input: AsyncIterable<boolean | TNull>): Promise<BoolVector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Bool, TNull>): Chunked<Bool>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Bool, TNull>): Promise<Chunked<Bool>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<boolean | TNull> | AsyncIterable<boolean | TNull> | VectorBuilderOptions<Bool, TNull> | VectorBuilderOptionsAsync<Bool, TNull>) {\n        return vectorFromValuesWithType(() => new Bool(), input);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DateUnit } from '../enum';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Date_, DateDay, DateMillisecond  } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends Date_> = [Iterable<Date>, T['unit']];\n\n/** @ignore */\nexport class DateVector<T extends Date_ = Date_> extends BaseVector<T> {\n    public static from<T extends DateUnit.DAY>(...args: FromArgs<DateDay>): V<DateDay>;\n    public static from<T extends DateUnit.MILLISECOND>(...args: FromArgs<DateMillisecond>): V<DateMillisecond>;\n    public static from<T extends Date_, TNull = any>(input: Iterable<Date | TNull>): V<T>;\n    public static from<T extends Date_, TNull = any>(input: AsyncIterable<Date | TNull>): Promise<V<T>>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Date_, TNull = any>(...args: FromArgs<T> | [Iterable<Date | TNull> | AsyncIterable<Date | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>]) {\n        if (args.length === 2) {\n            return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new DateDay() : new DateMillisecond() as T, args[0]);\n        }\n        return vectorFromValuesWithType(() => new DateMillisecond() as T, args[0]);\n    }\n}\n\n/** @ignore */\nexport class DateDayVector extends DateVector<DateDay> {}\n\n/** @ignore */\nexport class DateMillisecondVector extends DateVector<DateMillisecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class DecimalVector extends BaseVector<Decimal> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { DataType, Dictionary, TKeys } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends DataType = any, TKey extends TKeys = TKeys> = [Vector<T>, TKey, ArrayLike<number> | TKey['TArray']];\n\n/** @ignore */\nexport class DictionaryVector<T extends DataType = any, TKey extends TKeys = TKeys> extends BaseVector<Dictionary<T, TKey>> {\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: FromArgs<T, TKey>): V<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptions<Dictionary<T, TKey>>): Vector<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptionsAsync<Dictionary<T, TKey>>): Promise<Vector<Dictionary<T, TKey>>>;\n    /** @nocollapse */\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: any[]) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args as FromArgs<T, TKey>;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n\n    constructor(data: Data<Dictionary<T, TKey>>) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n\n    public readonly indices: V<TKey>;\n\n    public get dictionary() { return <Vector<T>> this.data.dictionary; }\n    public reverseLookup(value: T) { return this.dictionary.indexOf(value); }\n    public getKey(idx: number): TKey['TValue'] | null { return this.indices.get(idx); }\n    public getValue(key: number): T['TValue'] | null { return this.dictionary.get(key); }\n    public setKey(idx: number, key: TKey['TValue'] | null) { return this.indices.set(idx, key); }\n    public setValue(key: number, value: T['TValue'] | null) { return this.dictionary.set(key, value); }\n}\n\n(DictionaryVector.prototype as any).indices = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { FixedSizeBinary } from '../type';\n\n/** @ignore */\nexport class FixedSizeBinaryVector extends BaseVector<FixedSizeBinary> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListVector<T extends DataType = any> extends BaseVector<FixedSizeList<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Float, Float16, Float32, Float64, FloatArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor } from '../interfaces';\n\n/** @ignore */\ntype FloatVectorConstructors =\n    typeof FloatVector   |\n    typeof Float16Vector |\n    typeof Float32Vector |\n    typeof Float64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Float, TNull = any> =\n    FloatArray                          |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FloatArrayCtor = TypedArrayConstructor<FloatArray>;\n\n/** @ignore */\nexport class FloatVector<T extends Float = Float> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof FloatVector, input: Uint16Array): Float16Vector;\n    public static from(this: typeof FloatVector, input: Float32Array): Float32Vector;\n    public static from(this: typeof FloatVector, input: Float64Array): Float64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Float16Vector,  input: FromInput<Float16, TNull>): Float16Vector;\n    public static from<TNull = any>(this: typeof Float32Vector,  input: FromInput<Float32, TNull>): Float32Vector;\n    public static from<TNull = any>(this: typeof Float64Vector,  input: FromInput<Float64, TNull>): Float64Vector;\n\n    // Not zero-copy\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Float, TNull = any>(this: FloatVectorConstructors, input: FromInput<T, TNull>) {\n\n        let ArrowType = vectorTypeToDataType(this);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as FloatArrayCtor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return Vector.new(Data.Float(type, 0, length, 0, null, input as FloatArray));\n                }\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\n\n/** @ignore */\nexport class Float16Vector extends FloatVector<Float16> {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    public toFloat32Array() { return new Float32Array(this as Iterable<number>); }\n    public toFloat64Array() { return new Float64Array(this as Iterable<number>); }\n}\n\n/** @ignore */\nexport class Float32Vector extends FloatVector<Float32> {}\n/** @ignore */\nexport class Float64Vector extends FloatVector<Float64> {}\n\nconst convertTo16Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Float16) && (dataCtor !== Uint16Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: FloatArrayCtor) => {\n    switch (ctor) {\n        case Uint16Array:    return Float16;\n        case Float32Array:   return Float32;\n        case Float64Array:   return Float64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: FloatVectorConstructors) => {\n    switch (ctor) {\n        case Float16Vector: return Float16;\n        case Float32Vector: return Float32;\n        case Float64Vector: return Float64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalVector<T extends Interval = Interval> extends BaseVector<T> {}\n/** @ignore */\nexport class IntervalDayTimeVector extends IntervalVector<IntervalDayTime> {}\n/** @ignore */\nexport class IntervalYearMonthVector extends IntervalVector<IntervalYearMonth> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { BigInt64Array, BigUint64Array } from '../util/compat';\nimport { toBigInt64Array, toBigUint64Array } from '../util/buffer';\nimport { Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64, IntArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor, BigIntArrayConstructor, BigIntArray } from '../interfaces';\n\n/** @ignore */\ntype IntVectorConstructors =\n    typeof IntVector    |\n    typeof Int8Vector   |\n    typeof Int16Vector  |\n    typeof Int32Vector  |\n    typeof Uint8Vector  |\n    typeof Uint16Vector |\n    typeof Uint32Vector |\n    typeof Int64Vector  |\n    typeof Uint64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Int, TNull = any> =\n    IntArray | BigIntArray              |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FromArgs<T extends Int, TNull = any> = [FromInput<T, TNull>, boolean?];\n\n/** @ignore */\ntype IntArrayCtor = TypedArrayConstructor<IntArray> | BigIntArrayConstructor<BigIntArray>;\n\n/** @ignore */\nexport class IntVector<T extends Int = Int> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof IntVector, input: Int8Array): Int8Vector;\n    public static from(this: typeof IntVector, input: Int16Array): Int16Vector;\n    public static from(this: typeof IntVector, input: Int32Array): Int32Vector;\n    public static from(this: typeof IntVector, input: BigInt64Array): Int64Vector;\n    public static from(this: typeof IntVector, input: Int32Array, is64bit: true): Int64Vector;\n    public static from(this: typeof IntVector, input: Uint8Array): Uint8Vector;\n    public static from(this: typeof IntVector, input: Uint16Array): Uint16Vector;\n    public static from(this: typeof IntVector, input: Uint32Array): Uint32Vector;\n    public static from(this: typeof IntVector, input: BigUint64Array): Uint64Vector;\n    public static from(this: typeof IntVector, input: Uint32Array, is64bit: true): Uint64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Int8Vector,   input: FromInput<Int8, TNull>): Int8Vector;\n    public static from<TNull = any>(this: typeof Int16Vector,  input: FromInput<Int16, TNull>): Int16Vector;\n    public static from<TNull = any>(this: typeof Int32Vector,  input: FromInput<Int32, TNull>): Int32Vector;\n    public static from<TNull = any>(this: typeof Int64Vector,  input: FromInput<Int64, TNull>): Int64Vector;\n    public static from<TNull = any>(this: typeof Uint8Vector,  input: FromInput<Uint8, TNull>): Uint8Vector;\n    public static from<TNull = any>(this: typeof Uint16Vector, input: FromInput<Uint16, TNull>): Uint16Vector;\n    public static from<TNull = any>(this: typeof Uint32Vector, input: FromInput<Uint32, TNull>): Uint32Vector;\n    public static from<TNull = any>(this: typeof Uint64Vector, input: FromInput<Uint64, TNull>): Uint64Vector;\n\n    // Not zero-copy\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Int, TNull = any>(this: IntVectorConstructors, ...args: FromArgs<T, TNull>) {\n\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as IntArrayCtor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return Vector.new(Data.Int(type, 0, length, 0, null, input as IntArray));\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\n\n/** @ignore */\nexport class Int8Vector extends IntVector<Int8> {}\n/** @ignore */\nexport class Int16Vector extends IntVector<Int16> {}\n/** @ignore */\nexport class Int32Vector extends IntVector<Int32> {}\n/** @ignore */\nexport class Int64Vector extends IntVector<Int64> {\n    public toBigInt64Array() {\n        return toBigInt64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigInt64Array;\n    public get values64(): BigInt64Array {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\n\n/** @ignore */\nexport class Uint8Vector extends IntVector<Uint8> {}\n/** @ignore */\nexport class Uint16Vector extends IntVector<Uint16> {}\n/** @ignore */\nexport class Uint32Vector extends IntVector<Uint32> {}\n/** @ignore */\nexport class Uint64Vector extends IntVector<Uint64> {\n    public toBigUint64Array() {\n        return toBigUint64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigUint64Array;\n    public get values64(): BigUint64Array {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\n\nconst convert32To64Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Int64 || typeCtor === Uint64) &&\n           (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: IntArrayCtor, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Array:      return Int8;\n        case Int16Array:     return Int16;\n        case Int32Array:     return is64bit ? Int64 : Int32;\n        case BigInt64Array:  return Int64;\n        case Uint8Array:     return Uint8;\n        case Uint16Array:    return Uint16;\n        case Uint32Array:    return is64bit ? Uint64 : Uint32;\n        case BigUint64Array: return Uint64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: IntVectorConstructors, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Vector:   return Int8;\n        case Int16Vector:  return Int16;\n        case Int32Vector:  return is64bit ? Int64 : Int32;\n        case Int64Vector:  return Int64;\n        case Uint8Vector:  return Uint8;\n        case Uint16Vector: return Uint16;\n        case Uint32Vector: return is64bit ? Uint64 : Uint32;\n        case Uint64Vector: return Uint64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, List } from '../type';\n\n/** @ignore */\nexport class ListVector<T extends DataType = any> extends BaseVector<List<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MapRow } from './row';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { DataType, Map_, Struct, List } from '../type';\n\n/** @ignore */\nexport class MapVector<K extends DataType = any, V extends DataType = any> extends BaseVector<Map_<K, V>> {\n    public asList() {\n        const child = this.type.children[0] as Field<Struct<{ key: K, value: V }>>;\n        return Vector.new(this.data.clone(new List<Struct<{ key: K, value: V }>>(child)));\n    }\n    public bind(index: number): Map_<K, V>['TValue'] {\n        const child = this.getChildAt<Struct<{ key: K, value: V }>>(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child!.slice(begin, end));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class NullVector extends BaseVector<Null> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { StructRow } from './row';\nimport { BaseVector } from './base';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nexport class StructVector<T extends { [key: string]: DataType } = any> extends BaseVector<Struct<T>> {\n    // @ts-ignore\n    private _row: StructRow<T>;\n    public bind(index: number): Struct<T>['TValue'] {\n        const proto = this._row || (this._row = new StructRow<T>(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampVector<T extends Timestamp = Timestamp> extends BaseVector<T> {}\n/** @ignore */\nexport class TimestampSecondVector extends TimestampVector<TimestampSecond> {}\n/** @ignore */\nexport class TimestampMillisecondVector extends TimestampVector<TimestampMillisecond> {}\n/** @ignore */\nexport class TimestampMicrosecondVector extends TimestampVector<TimestampMicrosecond> {}\n/** @ignore */\nexport class TimestampNanosecondVector extends TimestampVector<TimestampNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeVector<T extends Time = Time> extends BaseVector<T> {}\n/** @ignore */\nexport class TimeSecondVector extends TimeVector<TimeSecond> {}\n/** @ignore */\nexport class TimeMillisecondVector extends TimeVector<TimeMillisecond> {}\n/** @ignore */\nexport class TimeMicrosecondVector extends TimeVector<TimeMicrosecond> {}\n/** @ignore */\nexport class TimeNanosecondVector extends TimeVector<TimeNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Union, DenseUnion, SparseUnion} from '../type';\n\n/** @ignore */\nexport class UnionVector<T extends Union = Union> extends BaseVector<T> {\n    public get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n\n/** @ignore */\nexport class DenseUnionVector extends UnionVector<DenseUnion> {\n    public get valueOffsets() { return this.data.valueOffsets!; }\n}\n\n/** @ignore */\nexport class SparseUnionVector extends UnionVector<SparseUnion> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class Utf8Vector extends BaseVector<Utf8> {\n    public static from<TNull = any>(input: Iterable<string | TNull>): Utf8Vector;\n    public static from<TNull = any>(input: AsyncIterable<string | TNull>): Promise<Utf8Vector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Utf8, TNull>): Chunked<Utf8>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Utf8, TNull>): Promise<Chunked<Utf8>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<string | TNull> | AsyncIterable<string | TNull> | VectorBuilderOptions<Utf8, TNull> | VectorBuilderOptionsAsync<Utf8, TNull>) {\n        return vectorFromValuesWithType(() => new Utf8(), input);\n    }\n    public asBinary() {\n        return Vector.new(this.data.clone(new Binary()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function partial0<T>(visit: (node: T) => any) {\n    return function(this: T) { return visit(this); };\n}\n\n/** @ignore */\nexport function partial1<T>(visit: (node: T, a: any) => any) {\n    return function(this: T, a: any) { return visit(this, a); };\n}\n\n/** @ignore */\nexport function partial2<T>(visit: (node: T, a: any, b: any) => any) {\n    return function(this: T, a: any, b: any) { return visit(this, a, b); };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { BN } from '../util/bn';\nimport { Visitor } from '../visitor';\nimport { decodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { uint16ToFloat64 } from '../util/math';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface GetVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, index: number): T['TValue'];\n    visitMany<T extends VectorType>  (nodes: T[], indices: number[]): T['TValue'][];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    visitNull                 <T extends Null>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt                  <T extends Int>                  (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt16                <T extends Int16>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt32                <T extends Int32>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt64                <T extends Int64>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat                <T extends Float>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBinary               <T extends Binary>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitDate                 <T extends Date_>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>, index: number): T['TValue'];\n    visitTime                 <T extends Time>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>, index: number): T['TValue'];\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitList                 <T extends List>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitStruct               <T extends Struct>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUnion                <T extends Union>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>, index: number): T['TValue'];\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitInterval             <T extends Interval>             (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>, index: number): T['TValue'];\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>, index: number): T['TValue'];\n}\n\n/** @ignore */\nexport class GetVisitor extends Visitor {}\n\n/** @ignore */const epochDaysToMs = (data: Int32Array, index: number) => 86400000 * data[index];\n/** @ignore */const epochMillisecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */const epochMicrosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */const epochNanosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n\n/** @ignore */const epochMillisecondsToDate = (epochMs: number) => new Date(epochMs);\n/** @ignore */const epochDaysToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */const epochMillisecondsLongToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n\n/** @ignore */\nconst getNull = <T extends Null>(_vector: VectorType<T>, _index: number): T['TValue'] => null;\n/** @ignore */\nconst getVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null as any;\n};\n\n/** @ignore */\nconst getBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number): T['TValue'] => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n\n/** @ignore */\ntype Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */\ntype Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst getDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number): T['TValue'] => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number): T['TValue'] => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts         = <T extends Numeric2X>({ stride, values, type }: VectorType<T>, index: number): T['TValue'] => <any> BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number): T['TValue'] => values.subarray(stride * index, stride * (index + 1));\n\n/** @ignore */\nconst getBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null as any;\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = <T extends Int>(vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.bitWidth < 64\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getBigInts(vector as VectorType<Numeric2X>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = <T extends Float> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.precision !== Precision.HALF\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getFloat16(vector as VectorType<Float16>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = <T extends Date_> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.unit === DateUnit.DAY\n        ? getDateDay(vector as VectorType<DateDay>, index)\n        : getDateMillisecond(vector as VectorType<DateMillisecond>, index)\n);\n\n/** @ignore */\nconst getTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number): T['TValue'] => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number): T['TValue'] => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimestampSecond(vector as VectorType<TimestampSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime            = <T extends Time>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimeSecond(vector as VectorType<TimeSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(vector as VectorType<TimeMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimeNanosecond(vector as VectorType<TimeNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number): T['TValue'] => BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n\n/** @ignore */\nconst getList = <T extends List>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]) as T['TValue'];\n};\n\n/** @ignore */\nconst getMap = <T extends Map_>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/** @ignore */\nconst getStruct = <T extends Struct>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number): V['TValue'] => {\n    return vector.type.mode === UnionMode.Dense ?\n        getDenseUnion(vector as VectorType<DenseUnion>, index) :\n        getSparseUnion(vector as VectorType<SparseUnion>, index);\n};\n\n/** @ignore */\nconst getDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n\n/** @ignore */\nconst getSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n\n/** @ignore */\nconst getDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.getValue(vector.getKey(index)!);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = <T extends Interval>(vector: VectorType<T>, index: number): T['TValue'] =>\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? getIntervalDayTime(vector as VectorType<IntervalDayTime>, index)\n        : getIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index);\n\n/** @ignore */\nconst getIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number): T['TValue'] => values.subarray(2 * index, 2 * (index + 1));\n\n/** @ignore */\nconst getIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number): T['TValue'] => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n\n/** @ignore */\nconst getFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride) as T['TValue'];\n};\n\nGetVisitor.prototype.visitNull                 =                 getNull;\nGetVisitor.prototype.visitBool                 =                 getBool;\nGetVisitor.prototype.visitInt                  =                  getInt;\nGetVisitor.prototype.visitInt8                 =              getNumeric;\nGetVisitor.prototype.visitInt16                =              getNumeric;\nGetVisitor.prototype.visitInt32                =              getNumeric;\nGetVisitor.prototype.visitInt64                =              getBigInts;\nGetVisitor.prototype.visitUint8                =              getNumeric;\nGetVisitor.prototype.visitUint16               =              getNumeric;\nGetVisitor.prototype.visitUint32               =              getNumeric;\nGetVisitor.prototype.visitUint64               =              getBigInts;\nGetVisitor.prototype.visitFloat                =                getFloat;\nGetVisitor.prototype.visitFloat16              =              getFloat16;\nGetVisitor.prototype.visitFloat32              =              getNumeric;\nGetVisitor.prototype.visitFloat64              =              getNumeric;\nGetVisitor.prototype.visitUtf8                 =                 getUtf8;\nGetVisitor.prototype.visitBinary               =               getBinary;\nGetVisitor.prototype.visitFixedSizeBinary      =      getFixedSizeBinary;\nGetVisitor.prototype.visitDate                 =                 getDate;\nGetVisitor.prototype.visitDateDay              =              getDateDay;\nGetVisitor.prototype.visitDateMillisecond      =      getDateMillisecond;\nGetVisitor.prototype.visitTimestamp            =            getTimestamp;\nGetVisitor.prototype.visitTimestampSecond      =      getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond  =  getTimestampNanosecond;\nGetVisitor.prototype.visitTime                 =                 getTime;\nGetVisitor.prototype.visitTimeSecond           =           getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond      =      getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond      =      getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond       =       getTimeNanosecond;\nGetVisitor.prototype.visitDecimal              =              getDecimal;\nGetVisitor.prototype.visitList                 =                 getList;\nGetVisitor.prototype.visitStruct               =               getStruct;\nGetVisitor.prototype.visitUnion                =                getUnion;\nGetVisitor.prototype.visitDenseUnion           =           getDenseUnion;\nGetVisitor.prototype.visitSparseUnion          =          getSparseUnion;\nGetVisitor.prototype.visitDictionary           =           getDictionary;\nGetVisitor.prototype.visitInterval             =             getInterval;\nGetVisitor.prototype.visitIntervalDayTime      =      getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth    =    getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList        =        getFixedSizeList;\nGetVisitor.prototype.visitMap                  =                  getMap;\n\n/** @ignore */\nexport const instance = new GetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { getBool, iterateBits } from '../util/bit';\nimport { createElementComparator } from '../util/vector';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IndexOfVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, value: T['TValue'] | null, index?: number): number;\n    visitMany <T extends VectorType>  (nodes: T[], values: (T['TValue'] | null)[], indices: (number | undefined)[]): number[];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, value: VectorType<T>['TValue'] | null, index?: number) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, value:         T['TValue'] | null, index?: number) => number;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitList                 <T extends List>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n}\n\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullIndexOf(vector: VectorType<Null>, searchElement?: null) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n\n/** @ignore */\nfunction indexOfNull<T extends DataType>(vector: VectorType<T>, fromIndex?: number): number {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n        if (!isValid) { return i; }\n        ++i;\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfValue<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    if (searchElement === undefined) { return -1; }\n    if (searchElement === null) { return indexOfNull(vector, fromIndex); }\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfUnion<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nIndexOfVisitor.prototype.visitNull                 =  nullIndexOf;\nIndexOfVisitor.prototype.visitBool                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt                  = indexOfValue;\nIndexOfVisitor.prototype.visitInt8                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16                = indexOfValue;\nIndexOfVisitor.prototype.visitInt32                = indexOfValue;\nIndexOfVisitor.prototype.visitInt64                = indexOfValue;\nIndexOfVisitor.prototype.visitUint8                = indexOfValue;\nIndexOfVisitor.prototype.visitUint16               = indexOfValue;\nIndexOfVisitor.prototype.visitUint32               = indexOfValue;\nIndexOfVisitor.prototype.visitUint64               = indexOfValue;\nIndexOfVisitor.prototype.visitFloat                = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64              = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8                 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary               = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary      = indexOfValue;\nIndexOfVisitor.prototype.visitDate                 = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay              = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp            = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond  = indexOfValue;\nIndexOfVisitor.prototype.visitTime                 = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond           = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond       = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal              = indexOfValue;\nIndexOfVisitor.prototype.visitList                 = indexOfValue;\nIndexOfVisitor.prototype.visitStruct               = indexOfValue;\nIndexOfVisitor.prototype.visitUnion                = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion           = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion          = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary           = indexOfValue;\nIndexOfVisitor.prototype.visitInterval             = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime      = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth    = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList        = indexOfValue;\nIndexOfVisitor.prototype.visitMap                  = indexOfValue;\n\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { iterateBits } from '../util/bit';\nimport { instance as getVisitor } from './get';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IteratorVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): IterableIterator<T['TValue'] | null>;\n    visitMany <T extends VectorType>(nodes: T[]): IterableIterator<T['TValue'] | null>[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    visitNull                 <T extends Null>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt                  <T extends Int>                  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt16                <T extends Int16>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt32                <T extends Int32>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt64                <T extends Int64>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat                <T extends Float>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBinary               <T extends Binary>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDate                 <T extends Date_>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTime                 <T extends Time>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitList                 <T extends List>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitStruct               <T extends Struct>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUnion                <T extends Union>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInterval             <T extends Interval>             (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n}\n\n/** @ignore */\nexport class IteratorVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullableIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n    const getFn = getVisitor.getVisitFn(vector);\n    return iterateBits<T['TValue'] | null>(\n        vector.nullBitmap, vector.offset, vector.length, vector,\n        (vec: VectorType<T>, idx: number, nullByte: number, nullBit: number) =>\n            ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null\n    );\n}\n\n/** @ignore */\nfunction vectorIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator<T>(vector);\n    }\n\n    const { type, typeId, length } = vector;\n\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && (\n        (typeId === Type.Timestamp) ||\n        (typeId === Type.Int && (type as Int).bitWidth !== 64) ||\n        (typeId === Type.Time && (type as Time).bitWidth !== 64) ||\n        (typeId === Type.Float && (type as Float).precision > 0 /* Precision.HALF */)\n    )) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(getVisitor.getVisitFn(vector));\n}\n\nIteratorVisitor.prototype.visitNull                 = vectorIterator;\nIteratorVisitor.prototype.visitBool                 = vectorIterator;\nIteratorVisitor.prototype.visitInt                  = vectorIterator;\nIteratorVisitor.prototype.visitInt8                 = vectorIterator;\nIteratorVisitor.prototype.visitInt16                = vectorIterator;\nIteratorVisitor.prototype.visitInt32                = vectorIterator;\nIteratorVisitor.prototype.visitInt64                = vectorIterator;\nIteratorVisitor.prototype.visitUint8                = vectorIterator;\nIteratorVisitor.prototype.visitUint16               = vectorIterator;\nIteratorVisitor.prototype.visitUint32               = vectorIterator;\nIteratorVisitor.prototype.visitUint64               = vectorIterator;\nIteratorVisitor.prototype.visitFloat                = vectorIterator;\nIteratorVisitor.prototype.visitFloat16              = vectorIterator;\nIteratorVisitor.prototype.visitFloat32              = vectorIterator;\nIteratorVisitor.prototype.visitFloat64              = vectorIterator;\nIteratorVisitor.prototype.visitUtf8                 = vectorIterator;\nIteratorVisitor.prototype.visitBinary               = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary      = vectorIterator;\nIteratorVisitor.prototype.visitDate                 = vectorIterator;\nIteratorVisitor.prototype.visitDateDay              = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp            = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond  = vectorIterator;\nIteratorVisitor.prototype.visitTime                 = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond           = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond       = vectorIterator;\nIteratorVisitor.prototype.visitDecimal              = vectorIterator;\nIteratorVisitor.prototype.visitList                 = vectorIterator;\nIteratorVisitor.prototype.visitStruct               = vectorIterator;\nIteratorVisitor.prototype.visitUnion                = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion           = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion          = vectorIterator;\nIteratorVisitor.prototype.visitDictionary           = vectorIterator;\nIteratorVisitor.prototype.visitInterval             = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime      = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth    = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList        = vectorIterator;\nIteratorVisitor.prototype.visitMap                  = vectorIterator;\n\n/** @ignore */\nexport const instance = new IteratorVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { instance as iteratorVisitor } from './iterator';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface ToArrayVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): T['TArray'];\n    visitMany<T extends VectorType>(nodes: T[]): T['TArray'][];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    visitNull                                    <T extends Null>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBool                                    <T extends Bool>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt                                     <T extends Int>                 (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt8                                    <T extends Int8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt16                                   <T extends Int16>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt32                                   <T extends Int32>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt64                                   <T extends Int64>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint8                                   <T extends Uint8>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint16                                  <T extends Uint16>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint32                                  <T extends Uint32>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint64                                  <T extends Uint64>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat                                   <T extends Float>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat16                                 <T extends Float16>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat32                                 <T extends Float32>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat64                                 <T extends Float64>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUtf8                                    <T extends Utf8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBinary                                  <T extends Binary>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeBinary                         <T extends FixedSizeBinary>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDate                                    <T extends Date_>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateDay                                 <T extends DateDay>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateMillisecond                         <T extends DateMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestamp                               <T extends Timestamp>           (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampSecond                         <T extends TimestampSecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMillisecond                    <T extends TimestampMillisecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMicrosecond                    <T extends TimestampMicrosecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampNanosecond                     <T extends TimestampNanosecond> (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTime                                    <T extends Time>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeSecond                              <T extends TimeSecond>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMillisecond                         <T extends TimeMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMicrosecond                         <T extends TimeMicrosecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeNanosecond                          <T extends TimeNanosecond>      (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDecimal                                 <T extends Decimal>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitList                <R extends DataType, T extends List<R>>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitStruct                                  <T extends Struct>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUnion                                   <T extends Union>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDenseUnion                              <T extends DenseUnion>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitSparseUnion                             <T extends SparseUnion>         (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDictionary          <R extends DataType, T extends Dictionary<R>>       (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInterval                                <T extends Interval>            (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalDayTime                         <T extends IntervalDayTime>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalYearMonth                       <T extends IntervalYearMonth>   (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeList       <R extends DataType, T extends FixedSizeList<R>>    (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitMap                                     <T extends Map_>                (vector: VectorType<T>): VectorType<T>['TArray'];\n}\n\n/** @ignore */\nexport class ToArrayVisitor extends Visitor {}\n\n/** @ignore */\nfunction arrayOfVector<T extends DataType>(vector: VectorType<T>): T['TArray'] {\n\n    const { type, length, stride } = vector;\n\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case Type.Int:\n        case Type.Float: case Type.Decimal:\n        case Type.Time: case Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n\n    // Otherwise if not primitive, slow copy\n    return [...iteratorVisitor.visit(vector)] as T['TArray'];\n}\n\nToArrayVisitor.prototype.visitNull                 = arrayOfVector;\nToArrayVisitor.prototype.visitBool                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt                  = arrayOfVector;\nToArrayVisitor.prototype.visitInt8                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16                = arrayOfVector;\nToArrayVisitor.prototype.visitInt32                = arrayOfVector;\nToArrayVisitor.prototype.visitInt64                = arrayOfVector;\nToArrayVisitor.prototype.visitUint8                = arrayOfVector;\nToArrayVisitor.prototype.visitUint16               = arrayOfVector;\nToArrayVisitor.prototype.visitUint32               = arrayOfVector;\nToArrayVisitor.prototype.visitUint64               = arrayOfVector;\nToArrayVisitor.prototype.visitFloat                = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64              = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8                 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary               = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary      = arrayOfVector;\nToArrayVisitor.prototype.visitDate                 = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay              = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp            = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond  = arrayOfVector;\nToArrayVisitor.prototype.visitTime                 = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond           = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond       = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal              = arrayOfVector;\nToArrayVisitor.prototype.visitList                 = arrayOfVector;\nToArrayVisitor.prototype.visitStruct               = arrayOfVector;\nToArrayVisitor.prototype.visitUnion                = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion           = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion          = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary           = arrayOfVector;\nToArrayVisitor.prototype.visitInterval             = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime      = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth    = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList        = arrayOfVector;\nToArrayVisitor.prototype.visitMap                  = arrayOfVector;\n\n/** @ignore */\nexport const instance = new ToArrayVisitor();\n","/* istanbul ignore file */\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Type, TimeUnit } from '../enum';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n} from '../type';\n\n/** @ignore */ const sum = (x: number, y: number) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type: DataType) => `Cannot compute the byte width of variable-width column ${type}`;\n\n/** @ignore */\nexport interface ByteWidthVisitor extends Visitor {\n    visit<T extends DataType>(node: T): number;\n    visitMany<T extends DataType>(nodes: T[]): number[];\n    getVisitFn<T extends Type>    (node: T): (type: DataType<T>) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (type: T) => number;\n}\n\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    public visitNull            (____: Null            ) { return 0; }\n    public visitInt             (type: Int             ) { return type.bitWidth / 8; }\n    public visitFloat           (type: Float           ) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    public visitBinary          (type: Binary          ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitUtf8            (type: Utf8            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitBool            (____: Bool            ) { return 1 / 8; }\n    public visitDecimal         (____: Decimal         ) { return 16; }\n    public visitDate            (type: Date_           ) { return (type.unit + 1) * 4; }\n    public visitTime            (type: Time            ) { return type.bitWidth / 8; }\n    public visitTimestamp       (type: Timestamp       ) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    public visitInterval        (type: Interval        ) { return (type.unit + 1) * 4; }\n    public visitList            (type: List            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitStruct          (type: Struct          ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitUnion           (type: Union           ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitFixedSizeBinary (type: FixedSizeBinary ) { return type.byteWidth; }\n    public visitFixedSizeList   (type: FixedSizeList   ) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    public visitMap             (type: Map_            ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitDictionary      (type: Dictionary      ) { return this.visit(type.indices); }\n    public visitFields          (fields: Field[]       ) { return (fields || []).map((field) => this.visit(field.type)); }\n    public visitSchema          (schema: Schema        ) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, VectorCtor } from '../interfaces';\n\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n\n/** @ignore */\nexport interface GetVectorConstructor extends Visitor {\n    visit<T extends Type>(node: T): VectorCtor<T>;\n    visitMany <T extends Type>(nodes: T[]): VectorCtor<T>[];\n    getVisitFn<T extends Type>(node: T): () => VectorCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => VectorCtor<T>;\n}\n\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    public visitNull                 () { return NullVector; }\n    public visitBool                 () { return BoolVector; }\n    public visitInt                  () { return IntVector; }\n    public visitInt8                 () { return Int8Vector; }\n    public visitInt16                () { return Int16Vector; }\n    public visitInt32                () { return Int32Vector; }\n    public visitInt64                () { return Int64Vector; }\n    public visitUint8                () { return Uint8Vector; }\n    public visitUint16               () { return Uint16Vector; }\n    public visitUint32               () { return Uint32Vector; }\n    public visitUint64               () { return Uint64Vector; }\n    public visitFloat                () { return FloatVector; }\n    public visitFloat16              () { return Float16Vector; }\n    public visitFloat32              () { return Float32Vector; }\n    public visitFloat64              () { return Float64Vector; }\n    public visitUtf8                 () { return Utf8Vector; }\n    public visitBinary               () { return BinaryVector; }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryVector; }\n    public visitDate                 () { return DateVector; }\n    public visitDateDay              () { return DateDayVector; }\n    public visitDateMillisecond      () { return DateMillisecondVector; }\n    public visitTimestamp            () { return TimestampVector; }\n    public visitTimestampSecond      () { return TimestampSecondVector; }\n    public visitTimestampMillisecond () { return TimestampMillisecondVector; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondVector; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondVector; }\n    public visitTime                 () { return TimeVector; }\n    public visitTimeSecond           () { return TimeSecondVector; }\n    public visitTimeMillisecond      () { return TimeMillisecondVector; }\n    public visitTimeMicrosecond      () { return TimeMicrosecondVector; }\n    public visitTimeNanosecond       () { return TimeNanosecondVector; }\n    public visitDecimal              () { return DecimalVector; }\n    public visitList                 () { return ListVector; }\n    public visitStruct               () { return StructVector; }\n    public visitUnion                () { return UnionVector; }\n    public visitDenseUnion           () { return DenseUnionVector; }\n    public visitSparseUnion          () { return SparseUnionVector; }\n    public visitDictionary           () { return DictionaryVector; }\n    public visitInterval             () { return IntervalVector; }\n    public visitIntervalDayTime      () { return IntervalDayTimeVector; }\n    public visitIntervalYearMonth    () { return IntervalYearMonthVector; }\n    public visitFixedSizeList        () { return FixedSizeListVector; }\n    public visitMap                  () { return MapVector; }\n}\n\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\n\nimport * as fn from '../util/fn';\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder, IterableBuilderOptions } from '../builder';\nimport { VectorType as V, VectorCtorArgs } from '../interfaces';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n\ndeclare module '../vector' {\n    namespace Vector {\n        export { newVector as new };\n        export { vectorFrom as from };\n    }\n}\n\ndeclare module './base' {\n    namespace BaseVector {\n        export { vectorFrom as from };\n    }\n    interface BaseVector<T extends DataType> {\n        get(index: number): T['TValue'] | null;\n        set(index: number, value: T['TValue'] | null): void;\n        indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n        toArray(): T['TArray'];\n        getByteWidth(): number;\n        [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n    }\n}\n\n/** @nocollapse */\nVector.new = newVector;\n\n/** @nocollapse */\nVector.from = vectorFrom;\n\n/** @ignore */\nfunction newVector<T extends DataType>(data: Data<T>, ...args: VectorCtorArgs<V<T>>): V<T> {\n    return new (getVectorConstructor.getVisitFn<T>(data)())(data, ...args) as V<T>;\n}\n\n/** @ignore */\nexport interface VectorBuilderOptions<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: Iterable<T['TValue'] | TNull>; }\n/** @ignore */\nexport interface VectorBuilderOptionsAsync<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: AsyncIterable<T['TValue'] | TNull>; }\n\n/** @ignore */\nexport function vectorFromValuesWithType<T extends DataType, TNull = any>(newDataType: () => T, input: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as V<T>;\n    } else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as Promise<V<T>>;\n    }\n    const {\n        'values': values = [],\n        'type': type = newDataType(),\n        'nullValues': nullValues = [null, undefined],\n    } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type } as VectorBuilderOptions<T, TNull>)\n        : Vector.from({ nullValues, ...input, type } as VectorBuilderOptionsAsync<T, TNull>);\n}\n\n/** @ignore */\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull>): Vector<T>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Vector<T>>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input } as VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>;\n    if (isIterable<T['TValue'] | TNull>(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    }\n    return (async (chunks: V<T>[]) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    })([]);\n}\n\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\n\nBaseVector.prototype.get = function baseVectorGet<T extends DataType>(this: BaseVector<T>, index: number): T['TValue'] | null {\n    return getVisitor.visit(this, index);\n};\n\nBaseVector.prototype.set = function baseVectorSet<T extends DataType>(this: BaseVector<T>, index: number, value: T['TValue'] | null): void {\n    return setVisitor.visit(this, index, value);\n};\n\nBaseVector.prototype.indexOf = function baseVectorIndexOf<T extends DataType>(this: BaseVector<T>, value: T['TValue'] | null, fromIndex?: number): number {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\n\nBaseVector.prototype.toArray = function baseVectorToArray<T extends DataType>(this: BaseVector<T>): T['TArray'] {\n    return toArrayVisitor.visit(this);\n};\n\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth<T extends DataType>(this: BaseVector<T>): number {\n    return byteWidthVisitor.visit(this.type);\n};\n\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator<T extends DataType>(this: BaseVector<T>): IterableIterator<T['TValue'] | null> {\n    return iteratorVisitor.visit(this);\n};\n\n(BaseVector.prototype as any)._bindDataAccessors = bindBaseVectorDataAccessors;\n\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n        const VectorCtor = getVectorConstructor.visit(typeId);\n        VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n        VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n    });\n\n/** @ignore */\nfunction partialType0<T extends Vector>(visit: (node: T['type']) => any) {\n    return function(this: T) { return visit(this.type); };\n}\n\n/** @ignore */\nfunction wrapNullableGet<T extends DataType, V extends Vector<T>, F extends (i: number) => any>(fn: F): (...args: Parameters<F>) => ReturnType<F> {\n    return function(this: V, i: number) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n\n/** @ignore */\nfunction wrapNullableSet<T extends DataType, V extends BaseVector<T>, F extends (i: number, a: any) => void>(fn: F): (...args: Parameters<F>) => void {\n    return function(this: V, i: number, a: any) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n\n/** @ignore */\nfunction bindBaseVectorDataAccessors<T extends DataType>(this: BaseVector<T>) {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Column } from './column';\nimport { Schema, Field } from './schema';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch';\nimport { DataFrame } from './compute/dataframe';\nimport { RecordBatchReader } from './ipc/reader';\nimport { DataType, RowLike, Struct } from './type';\nimport { selectColumnArgs, selectArgs } from './util/args';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { isPromise, isIterable, isAsyncIterable } from './util/compat';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './ipc/writer';\nimport { distributeColumnsIntoRecordBatches, distributeVectorsIntoRecordBatches } from './util/recordbatch';\nimport { Vector, Chunked, StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = Data<T[keyof T]>[] | Vector<T[keyof T]>[];\ntype Columns<T extends { [key: string]: DataType }> = Column<T[keyof T]>[] | Column<T[keyof T]>[][];\n\nexport interface Table<T extends { [key: string]: DataType } = any> {\n\n    get(index: number): Struct<T>['TValue'];\n    [Symbol.iterator](): IterableIterator<RowLike<T>>;\n\n    slice(begin?: number, end?: number): Table<T>;\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    clone(chunks?: RecordBatch<T>[], offsets?: Uint32Array): Table<T>;\n\n    scan(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    scanReverse(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    countBy(name: import('./compute/predicate').Col | string): import('./compute/dataframe').CountByResult;\n    filter(predicate: import('./compute/predicate').Predicate): import('./compute/dataframe').FilteredDataFrame<T>;\n}\n\nexport class Table<T extends { [key: string]: DataType } = any>\n    extends Chunked<Struct<T>>\n    implements DataFrame<T>,\n               Clonable<Table<T>>,\n               Sliceable<Table<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    /** @nocollapse */\n    public static empty<T extends { [key: string]: DataType } = {}>(schema = new Schema<T>([])) { return new Table<T>(schema, []); }\n\n    public static from(): Table<{}>;\n    public static from<T extends { [key: string]: DataType } = any>(source: RecordBatchReader<T>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg0): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg2): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg1): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg3): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg4): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg5): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: PromiseLike<RecordBatchReader<T>>): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(input?: any) {\n\n        if (!input) { return Table.empty(); }\n\n        if (typeof input === 'object') {\n            let table = isIterable(input['values']) ? tableFromIterable<T, TNull>(input)\n                 : isAsyncIterable(input['values']) ? tableFromAsyncIterable<T, TNull>(input)\n                                                    : null;\n            if (table !== null) { return table; }\n        }\n\n        let reader = RecordBatchReader.from<T>(input) as RecordBatchReader<T> | Promise<RecordBatchReader<T>>;\n\n        if (isPromise<RecordBatchReader<T>>(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table<T>(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches: RecordBatch[] = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table<T>(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n\n    /** @nocollapse */\n    public static async fromAsync<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArgs): Promise<Table<T>> {\n        return await Table.from<T>(source as any);\n    }\n\n    /** @nocollapse */\n    public static fromStruct<T extends { [key: string]: DataType } = any>(vector: Vector<Struct<T>>) {\n        return Table.new<T>(vector.data.childData as Data<T[keyof T]>[], vector.type.children);\n    }\n\n    /**\n     * @summary Create a new Table from a collection of Columns or Vectors,\n     * with an optional list of names or Fields.\n     *\n     *\n     * `Table.new` accepts an Object of\n     * Columns or Vectors, where the keys will be used as the field names\n     * for the Schema:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new({ i32: i32s, f32: f32s });\n     * assert(table.schema.fields[0].name === 'i32');\n     * ```\n     *\n     * It also accepts a a list of Vectors with an optional list of names or\n     * Fields for the resulting Schema. If the list is omitted or a name is\n     * missing, the numeric index of each Vector will be used as the name:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new([i32s, f32s], ['i32']);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === '1');\n     * ```\n     *\n     * If the supplied arguments are Columns, `Table.new` will infer the Schema\n     * from the Columns:\n     * ```ts\n     * const i32s = Column.new('i32', Int32Vector.from([1, 2, 3]));\n     * const f32s = Column.new('f32', Float32Vector.from([.1, .2, .3]));\n     * const table = Table.new(i32s, f32s);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === 'f32');\n     * ```\n     *\n     * If the supplied Vector or Column lengths are unequal, `Table.new` will\n     * extend the lengths of the shorter Columns, allocating additional bytes\n     * to represent the additional null slots. The memory required to allocate\n     * these additional bitmaps can be computed as:\n     * ```ts\n     * let additionalBytes = 0;\n     * for (let vec in shorter_vectors) {\n     *     additionalBytes += (((longestLength - vec.length) + 63) & ~63) >> 3;\n     * }\n     * ```\n     *\n     * For example, an additional null bitmap for one million null values would require\n     * 125,000 bytes (`((1e6 + 63) & ~63) >> 3`), or approx. `0.11MiB`\n     */\n    public static new<T extends { [key: string]: DataType } = any>(...columns: Columns<T>): Table<T>;\n    public static new<T extends VectorMap = any>(children: T): Table<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Table<T>;\n    /** @nocollapse */\n    public static new(...cols: any[]) {\n        return new Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n    }\n\n    constructor(batches: RecordBatch<T>[]);\n    constructor(...batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, ...batches: RecordBatch<T>[]);\n    constructor(...args: any[]) {\n\n        let schema: Schema<T> = null!;\n\n        if (args[0] instanceof Schema) { schema = args.shift(); }\n\n        let chunks = selectArgs<RecordBatch<T>>(RecordBatch, args);\n\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n\n        chunks[0] || (chunks[0] = new _InternalEmptyPlaceholderRecordBatch(schema));\n\n        super(new Struct(schema.fields), chunks);\n\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n\n    protected _schema: Schema<T>;\n    // List of inner RecordBatches\n    protected _chunks: RecordBatch<T>[];\n    protected _children?: Column<T[keyof T]>[];\n\n    public get schema() { return this._schema; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get numCols() { return this._numChildren; }\n\n    public clone(chunks = this._chunks) {\n        return new Table<T>(this._schema, chunks);\n    }\n\n    public getColumn<R extends keyof T>(name: R): Column<T[R]> {\n        return this.getColumnAt(this.getColumnIndex(name)) as Column<T[R]>;\n    }\n    public getColumnAt<R extends DataType = any>(index: number): Column<R> | null {\n        return this.getChildAt(index);\n    }\n    public getColumnIndex<R extends keyof T>(name: R) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n        if (index < 0 || index >= this.numChildren) { return null; }\n        let field: Field<R>, child: Column<R>;\n        const fields = (this._schema as Schema<any>).fields;\n        const columns = this._children || (this._children = []) as Column[];\n        if (child = columns[index]) { return child as Column<R>; }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n        return null;\n    }\n\n    // @ts-ignore\n    public serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? RecordBatchFileWriter\n            : RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    public count(): number {\n        return this._length;\n    }\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt<K>(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    public assign<R extends { [key: string]: DataType } = any>(other: Table<R>) {\n\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []] as number[][]);\n\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) =>\n                (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))!),\n            ...indices.map((i) => other.getColumnAt(i)!)\n        ].filter(Boolean) as Column<(T & R)[keyof T | keyof R]>[];\n\n        return new Table<T & R>(...distributeVectorsIntoRecordBatches<any>(schema, columns));\n    }\n}\n\nfunction tableFromIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptions<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return Table.fromStruct(StructVector.from(input as VectorBuilderOptions<Struct<T>, TNull>));\n    }\n    return null;\n}\n\nfunction tableFromAsyncIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return StructVector.from(input as VectorBuilderOptionsAsync<Struct<T>, TNull>).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema, Field } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct, Dictionary } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = (Data<T[keyof T]> | Vector<T[keyof T]>)[];\n\nexport interface RecordBatch<T extends { [key: string]: DataType } = any> {\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    slice(begin?: number, end?: number): RecordBatch<T>;\n    clone(data: Data<Struct<T>>, children?: Vector[]): RecordBatch<T>;\n}\n\nexport class RecordBatch<T extends { [key: string]: DataType } = any>\n    extends StructVector<T>\n    implements Clonable<RecordBatch<T>>,\n               Sliceable<RecordBatch<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull> | VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n        if (isIterable<(Struct<T>)['TValue'] | TNull>(options['values'])) {\n            return Table.from(options as VectorBuilderOptions<Struct<T>, TNull>);\n        }\n        return Table.from(options as VectorBuilderOptionsAsync<Struct<T>, TNull>);\n    }\n\n    public static new<T extends VectorMap = any>(children: T): RecordBatch<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): RecordBatch<T>;\n    /** @nocollapse */\n    public static new<T extends { [key: string]: DataType } = any>(...args: any[]) {\n        const [fs, xs] = selectFieldArgs<T>(args);\n        const vs = xs.filter((x): x is Vector<T[keyof T]> => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema<T>(fs), vs.map((x) => x.data)));\n    }\n\n    protected _schema: Schema;\n    protected _dictionaries?: Map<number, Vector>;\n\n    constructor(schema: Schema<T>, length: number, children: (Data | Vector)[]);\n    constructor(schema: Schema<T>, data: Data<Struct<T>>, children?: Vector[]);\n    constructor(...args: any[]) {\n        let data: Data<Struct<T>>;\n        let schema = args[0] as Schema<T>;\n        let children: Vector[] | undefined;\n        if (args[1] instanceof Data) {\n            [, data, children] = (args as [any, Data<Struct<T>>, Vector<T[keyof T]>[]?]);\n        } else {\n            const fields = schema.fields as Field<T[keyof T]>[];\n            const [, length, childData] = args as [any, number, Data<T[keyof T]>[]];\n            data = Data.Struct(new Struct<T>(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n\n    public clone(data: Data<Struct<T>>, children = this._children) {\n        return new RecordBatch<T>(this._schema, data, children);\n    }\n\n    public concat(...others: Vector<Struct<T>>[]): Table<T> {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n\n    public get schema() { return this._schema; }\n    public get numCols() { return this._schema.fields.length; }\n    public get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch<{ [key: string]: K }>(schema, this.length, childData);\n    }\n}\n\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch<T extends { [key: string]: DataType } = any> extends RecordBatch<T> {\n    constructor(schema: Schema<T>) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    public dictionaries = new Map<number, Vector>();\n    public static collect<T extends RecordBatch>(batch: T) {\n        return new DictionaryCollector().visit(\n            batch.data, new Struct(batch.schema.fields)\n        ).dictionaries;\n    }\n    public visit(data: Data, type: DataType) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        } else {\n            data.childData.forEach((child, i) =>\n                this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    public visitDictionary(data: Data, type: Dictionary) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { MessageHeader } from '../enum';\nimport { Footer } from './metadata/file';\nimport { Schema, Field } from '../schema';\nimport streamAdapters from '../io/adapters';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport {\n    FileHandle,\n    ArrowJSONLike,\n    ITERATOR_DONE,\n    ReadableInterop,\n} from '../io/interfaces';\nimport {\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding\n} from './message';\nimport {\n    isPromise,\n    isIterable, isAsyncIterable,\n    isIteratorResult, isArrowJSON,\n    isFileHandle, isFetchResponse,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */ export type FromArg0 = ArrowJSONLike;\n/** @ignore */ export type FromArg1 = PromiseLike<ArrowJSONLike>;\n/** @ignore */ export type FromArg2 = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n/** @ignore */ export type FromArg3 = PromiseLike<Iterable<ArrayBufferViewInput> | ArrayBufferViewInput>;\n/** @ignore */ export type FromArg4 = Response | NodeJS.ReadableStream | ReadableStream<ArrayBufferViewInput> | AsyncIterable<ArrayBufferViewInput>;\n/** @ignore */ export type FromArg5 = FileHandle | PromiseLike<FileHandle> | PromiseLike<FromArg4>;\n/** @ignore */ export type FromArgs = FromArg0 | FromArg1 | FromArg2 | FromArg3 | FromArg4 | FromArg5;\n\n/** @ignore */ type OpenOptions = { autoDestroy?: boolean; };\n/** @ignore */ type RecordBatchReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n/** @ignore */ type AsyncRecordBatchReaders<T extends { [key: string]: DataType } = any> = AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>;\n/** @ignore */ type RecordBatchFileReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | AsyncRecordBatchFileReader<T>;\n/** @ignore */ type RecordBatchStreamReaders<T extends { [key: string]: DataType } = any> = RecordBatchStreamReader<T> | AsyncRecordBatchStreamReader<T>;\n\nexport class RecordBatchReader<T extends { [key: string]: DataType } = any> extends ReadableInterop<RecordBatch<T>> {\n\n    protected _impl: RecordBatchReaderImpls<T>;\n    protected constructor(impl: RecordBatchReaderImpls<T>) {\n        super();\n        this._impl = impl;\n    }\n\n    public get closed() { return this._impl.closed; }\n    public get schema() { return this._impl.schema; }\n    public get autoDestroy() { return this._impl.autoDestroy; }\n    public get dictionaries() { return this._impl.dictionaries; }\n    public get numDictionaries() { return this._impl.numDictionaries; }\n    public get numRecordBatches() { return this._impl.numRecordBatches; }\n    public get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n\n    public isSync(): this is RecordBatchReaders<T> { return this._impl.isSync(); }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return this._impl.isAsync(); }\n    public isFile(): this is RecordBatchFileReaders<T> { return this._impl.isFile(); }\n    public isStream(): this is RecordBatchStreamReaders<T> { return this._impl.isStream(); }\n\n    public next() {\n        return this._impl.next();\n    }\n    public throw(value?: any) {\n        return this._impl.throw(value);\n    }\n    public return(value?: any) {\n        return this._impl.return(value);\n    }\n    public cancel() {\n        return this._impl.cancel();\n    }\n    public reset(schema?: Schema<T> | null): this {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    public open(options?: OpenOptions) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    public readRecordBatch(index: number): RecordBatch<T> | null | Promise<RecordBatch<T> | null> {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return (<IterableIterator<RecordBatch<T>>> this._impl)[Symbol.iterator]();\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return (<AsyncIterableIterator<RecordBatch<T>>> this._impl)[Symbol.asyncIterator]();\n    }\n    public toDOMStream() {\n        return streamAdapters.toDOMStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>));\n    }\n    public toNodeStream() {\n        return streamAdapters.toNodeStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>),\n            { objectMode: true });\n    }\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: ByteLengthQueuingStrategy,\n        // @ts-ignore\n        readableStrategy?: { autoDestroy: boolean }\n    ): { writable: WritableStream<Uint8Array>, readable: ReadableStream<RecordBatch<T>> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    public static from<T extends RecordBatchReader>(source: T): T;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg0): RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg1): Promise<RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg2): RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg3): Promise<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg4): Promise<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg5): Promise<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        } else if (isArrowJSON(source)) {\n            return fromArrowJSON<T>(source);\n        } else if (isFileHandle(source)) {\n            return fromFileHandle<T>(source);\n        } else if (isPromise<any>(source)) {\n            return (async () => await RecordBatchReader.from<any>(await source))();\n        } else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream<T>(new AsyncByteStream(source));\n        }\n        return fromByteStream<T>(new ByteStream(source));\n    }\n\n    public static readAll<T extends RecordBatchReader>(source: T): T extends RecordBatchReaders ? IterableIterator<T> : AsyncIterableIterator<T>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg0): IterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg1): AsyncIterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg2): IterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg3): AsyncIterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg4): AsyncIterableIterator<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg5): AsyncIterableIterator<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static readAll<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source as AsyncRecordBatchReaders<T>);\n        } else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable<ArrayBufferViewInput>(source) || isIteratorResult(source)) {\n            return readAllSync<T>(source) as IterableIterator<RecordBatchReaders<T>>;\n        }\n        return readAllAsync<T>(source) as AsyncIterableIterator<RecordBatchReaders<T> | AsyncRecordBatchReaders<T>>;\n    }\n}\n\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n\n/** @ignore */\nexport class RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: RecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator]() { return (this._impl as IterableIterator<RecordBatch<T>>)[Symbol.iterator](); }\n    public async *[Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: AsyncRecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    public [Symbol.asyncIterator]() { return (this._impl as AsyncIterableIterator<RecordBatch<T>>)[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    constructor(protected _impl: RecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    constructor(protected _impl: AsyncRecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n\n//\n// Now override the return types for each sync/async RecordBatchReader variant\n//\n\n/** @ignore */\nexport interface RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): this;\n    cancel(): void;\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): Promise<this>;\n    cancel(): Promise<void>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n}\n\n/** @ignore */\nexport interface RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\ntype RecordBatchReaderImpls<T extends { [key: string]: DataType } = any> =\n     RecordBatchJSONReaderImpl<T> |\n     RecordBatchFileReaderImpl<T> |\n     RecordBatchStreamReaderImpl<T> |\n     AsyncRecordBatchFileReaderImpl<T> |\n     AsyncRecordBatchStreamReaderImpl<T>;\n\n/** @ignore */\ninterface RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> {\n\n    closed: boolean;\n    schema: Schema<T>;\n    autoDestroy: boolean;\n    dictionaries: Map<number, Vector>;\n\n    isFile(): this is RecordBatchFileReaders<T>;\n    isStream(): this is RecordBatchStreamReaders<T>;\n    isSync(): this is RecordBatchReaders<T>;\n    isAsync(): this is AsyncRecordBatchReaders<T>;\n\n    reset(schema?: Schema<T> | null): this;\n}\n\n/** @ignore */\ninterface RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): this;\n    cancel(): void;\n\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n\n    [Symbol.iterator](): IterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): Promise<this>;\n    cancel(): Promise<void>;\n\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n\n    [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\nabstract class RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> implements RecordBatchReaderImpl<T> {\n\n    // @ts-ignore\n    public schema: Schema;\n    public closed = false;\n    public autoDestroy = true;\n    public dictionaries: Map<number, Vector>;\n\n    protected _dictionaryIndex = 0;\n    protected _recordBatchIndex = 0;\n    public get numDictionaries() { return this._dictionaryIndex; }\n    public get numRecordBatches() { return this._recordBatchIndex; }\n\n    constructor(dictionaries = new Map<number, Vector>()) {\n        this.dictionaries = dictionaries;\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return false; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return false; }\n    public isFile(): this is RecordBatchFileReaders<T> { return false; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return false; }\n\n    public reset(schema?: Schema<T> | null) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = <any> schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n\n    protected _loadRecordBatch(header: metadata.RecordBatch, body: any) {\n        return new RecordBatch<T>(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    protected _loadDictionaryBatch(header: metadata.DictionaryBatch, body: any) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id)!;\n            return (dictionary && isDelta ? dictionary.concat(\n                Vector.new(this._loadVectors(data, body, [type])[0])) :\n                Vector.new(this._loadVectors(data, body, [type])[0])) as Vector;\n        }\n        return dictionary;\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n/** @ignore */\nclass RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements IterableIterator<RecordBatch<T>> {\n\n    protected _reader: MessageReader;\n    protected _handle: ByteStream | ArrowJSONLike;\n\n    constructor(source: ByteStream | ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return this as IterableIterator<RecordBatch<T>>;\n    }\n    public cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()!))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    public throw(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public return(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public next(): IteratorResult<RecordBatch<T>> {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return this.return();\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements AsyncIterableIterator<RecordBatch<T>> {\n\n    protected _handle: AsyncByteStream;\n    protected _reader: AsyncMessageReader;\n\n    constructor(source: AsyncByteStream, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return this as AsyncIterableIterator<RecordBatch<T>>;\n    }\n    public async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public async open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())!))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    public async throw(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async return(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async next() {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return await this.return();\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return await this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n\n    // @ts-ignore\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: RandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: RandomAccessFile | ArrayBufferViewInput, dictionaries?: Map<number, Vector>) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    public readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Message<T> | null {\n        if (!this._footer) { this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T>\n    implements AsyncRecordBatchFileReaderImpl<T> {\n\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: AsyncRandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: FileHandle, byteLength?: number, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, ...rest: any[]) {\n        const byteLength = typeof rest[0] !== 'number' ? <number> rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? <Map<number, Vector>> rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public async open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    public async readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { await this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected async _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Promise<Message<T> | null> {\n        if (!this._footer) { await this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass RecordBatchJSONReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    constructor(source: ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(source, dictionaries);\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n\n/** @ignore */\nfunction shouldAutoDestroy(self: { autoDestroy: boolean }, options?: OpenOptions) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n\n/** @ignore */\nfunction* readAllSync<T extends { [key: string]: DataType } = any>(source: RecordBatchReaders<T> | FromArg0 | FromArg2) {\n    const reader = RecordBatchReader.from<T>(<any> source) as RecordBatchReaders<T>;\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do { yield reader; } while (!(reader.reset().open()).closed);\n        }\n    } finally { reader.cancel(); }\n}\n\n/** @ignore */\nasync function* readAllAsync<T extends { [key: string]: DataType } = any>(source: AsyncRecordBatchReaders<T> | FromArg1 | FromArg3 | FromArg4 | FromArg5) {\n    const reader = await RecordBatchReader.from<T>(<any> source) as RecordBatchReader<T>;\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do { yield reader; } while (!(await reader.reset().open()).closed);\n        }\n    } finally { await reader.cancel(); }\n}\n\n/** @ignore */\nfunction fromArrowJSON<T extends { [key: string]: DataType }>(source: ArrowJSONLike) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl<T>(source));\n}\n\n/** @ignore */\nfunction fromByteStream<T extends { [key: string]: DataType }>(source: ByteStream) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromAsyncByteStream<T extends { [key: string]: DataType }>(source: AsyncByteStream) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(async function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromFileHandle<T extends { [key: string]: DataType }>(source: FileHandle) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding) {\n        if (checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl<T>(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(file));\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { Vector } from '../../vector';\nimport { VectorType as V } from '../../interfaces';\nimport { Builder, BuilderOptions } from '../../builder/index';\n\n/** @ignore */\nexport interface BuilderTransformOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    readableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    writableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport function builderThroughDOMStream<T extends DataType = any, TNull = any>(options: BuilderTransformOptions<T, TNull>) {\n    return new BuilderTransform(options);\n}\n\n/** @ignore */\nexport class BuilderTransform<T extends DataType = any, TNull = any> {\n\n    public readable: ReadableStream<V<T>>;\n    public writable: WritableStream<T['TValue'] | TNull>;\n    public _controller: ReadableStreamDefaultController<V<T>> | null;\n\n    private _numChunks = 0;\n    private _finished = false;\n    private _bufferedSize = 0;\n    private _builder: Builder<T, TNull>;\n    private _getSize: (builder: Builder<T, TNull>) => number;\n\n    constructor(options: BuilderTransformOptions<T, TNull>) {\n\n        // Access properties by string indexers to defeat closure compiler\n\n        const {\n            ['readableStrategy']: readableStrategy,\n            ['writableStrategy']: writableStrategy,\n            ['queueingStrategy']: queueingStrategy = 'count',\n            ...builderOptions\n        } = options;\n\n        this._controller = null;\n        this._builder = Builder.new<T, TNull>(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n\n        this['readable'] = new ReadableStream<V<T>>({\n            ['cancel']: ()  => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value: T['TValue'] | TNull) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n\n    private _writeValueAndReturnChunkSize(value: T['TValue'] | TNull) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n\n    private _maybeFlush(builder: Builder<T, TNull>, controller: ReadableStreamDefaultController<V<T>> | null) {\n        if (controller === null) { return; }\n        if (this._bufferedSize >= controller.desiredSize!) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n\n    private _enqueue(controller: ReadableStreamDefaultController<V<T>>, chunk: V<T> | null) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n\n/** @ignore */ const chunkLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.length;\n/** @ignore */ const chunkByteLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.byteLength;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { RecordBatch } from '../recordbatch';\nimport { DictionaryVector } from '../vector/dictionary';\n\n/** @ignore */\nexport type ValueFunc<T> = (idx: number, cols: RecordBatch) => T | null;\n/** @ignore */\nexport type PredicateFunc = (idx: number, cols: RecordBatch) => boolean;\n\n/** @ignore */\nexport abstract class Value<T> {\n    eq(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new Equals(this, other);\n    }\n    le(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new LTeq(this, other);\n    }\n    ge(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new GTeq(this, other);\n    }\n    lt(other: Value<T> | T): Predicate {\n        return new Not(this.ge(other));\n    }\n    gt(other: Value<T> | T): Predicate {\n        return new Not(this.le(other));\n    }\n    ne(other: Value<T> | T): Predicate {\n        return new Not(this.eq(other));\n    }\n}\n\n/** @ignore */\nexport class Literal<T= any> extends Value<T> {\n    constructor(public v: T) { super(); }\n}\n\n/** @ignore */\nexport class Col<T= any> extends Value<T> {\n    // @ts-ignore\n    public vector: Vector;\n    // @ts-ignore\n    public colidx: number;\n\n    constructor(public name: string) { super(); }\n    bind(batch: RecordBatch): (idx: number, batch?: RecordBatch) => any {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) { throw new Error(`Failed to bind Col \"${this.name}\"`); }\n        }\n\n        const vec = this.vector = batch.getChildAt(this.colidx)!;\n        return (idx: number) => vec.get(idx);\n    }\n}\n\n/** @ignore */\nexport abstract class Predicate {\n    abstract bind(batch: RecordBatch): PredicateFunc;\n    and(...expr: Predicate[]): And { return new And(this, ...expr); }\n    or(...expr: Predicate[]): Or { return new Or(this, ...expr); }\n    not(): Predicate { return new Not(this); }\n}\n\n/** @ignore */\nexport abstract class ComparisonPredicate<T= any> extends Predicate {\n    constructor(public readonly left: Value<T>, public readonly right: Value<T>) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            } else { // right is a Col\n\n                return this._bindLitCol(batch, this.left, this.right as Col);\n            }\n        } else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left as Col, this.right);\n            } else { // right is a Col\n                return this._bindColCol(batch, this.left as Col, this.right as Col);\n            }\n        }\n    }\n\n    protected abstract _bindLitLit(batch: RecordBatch, left: Literal, right: Literal): PredicateFunc;\n    protected abstract _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc;\n    protected abstract _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc;\n    protected abstract _bindLitCol(batch: RecordBatch, lit: Literal, col: Col): PredicateFunc;\n}\n\n/** @ignore */\nexport abstract class CombinationPredicate extends Predicate {\n    readonly children: Predicate[];\n    constructor(...children: Predicate[]) {\n        super();\n        this.children = children;\n    }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\n(<any> CombinationPredicate.prototype).children = Object.freeze([]); // freeze for safety\n\n/** @ignore */\nexport class And extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ands\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.every((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Or extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ors\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.some((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Equals extends ComparisonPredicate {\n    // Helpers used to cache dictionary reverse lookups between calls to bind\n    private lastDictionary: Vector|undefined;\n    private lastKey: number|undefined;\n\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v == right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, batch: RecordBatch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof DictionaryVector) {\n            let key: any;\n            const vector = col.vector as DictionaryVector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            } else {\n                key = this.lastKey;\n            }\n\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            } else {\n                return (idx: number) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        } else {\n            return (idx: number, cols: RecordBatch) => col_func(idx, cols) == lit.v;\n        }\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        // Equals is commutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\n\n/** @ignore */\nexport class LTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v <= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) <= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v <= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class GTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v >= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) >= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v >= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class Not extends Predicate {\n    constructor(public readonly child: Predicate) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        const func = this.child.bind(batch);\n        return (idx: number, batch: RecordBatch) => !func(idx, batch);\n    }\n}\n\n/** @ignore */\nexport class CustomPredicate extends Predicate {\n    constructor(private next: PredicateFunc, private bind_: (batch: RecordBatch) => void) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\n\nexport function lit(v: any): Value<any> { return new Literal(v); }\nexport function col(n: string): Col<any> { return new Col(n); }\nexport function and(...p: Predicate[]): And { return new And(...p); }\nexport function or(...p: Predicate[]): Or { return new Or(...p); }\nexport function custom(next: PredicateFunc, bind: (batch: RecordBatch) => void) {\n    return new CustomPredicate(next, bind);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { Vector } from '../vector';\nimport { IntVector } from '../vector/int';\nimport { Field, Schema } from '../schema';\nimport { Predicate, Col } from './predicate';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { DataType, Int, Struct, Dictionary } from '../type';\n\n/** @ignore */\nexport type BindFunc = (batch: RecordBatch) => void;\n/** @ignore */\nexport type NextFunc = (idx: number, batch: RecordBatch) => void;\n\nTable.prototype.countBy = function(this: Table, name: Col | string) { return new DataFrame(this.chunks).countBy(name); };\nTable.prototype.scan = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scan(next, bind); };\nTable.prototype.scanReverse = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scanReverse(next, bind); };\nTable.prototype.filter = function(this: Table, predicate: Predicate): FilteredDataFrame { return new DataFrame(this.chunks).filter(predicate); };\n\nexport class DataFrame<T extends { [key: string]: DataType } = any> extends Table<T> {\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(this.chunks, predicate);\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    public countBy(name: Col | string) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n\n/** @ignore */\nexport class CountByResult<T extends DataType = any, TCount extends Int = Int> extends Table<{ values: T,  counts: TCount }> {\n    constructor(values: Vector<T>, counts: V<TCount>) {\n        type R = { values: T, counts: TCount };\n        const schema = new Schema<R>([\n            new Field('values', values.type),\n            new Field('counts', counts.type)\n        ]);\n        super(new RecordBatch<R>(schema, counts.length, [values, counts]));\n    }\n    public toJSON(): Object {\n        const values = this.getColumnAt(0)!;\n        const counts = this.getColumnAt(1)!;\n        const result = {} as { [k: string]: number | null };\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\n\n/** @ignore */\nexport class FilteredDataFrame<T extends { [key: string]: DataType } = any> extends DataFrame<T> {\n    private _predicate: Predicate;\n    constructor (batches: RecordBatch<T>[], predicate: Predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public count(): number {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { ++sum; }\n            }\n        }\n        return sum;\n    }\n    public *[Symbol.iterator](): IterableIterator<Struct<T>['TValue']> {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { yield batch.get(index) as any; }\n            }\n        }\n    }\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(\n            this._chunks,\n            this._predicate.and(predicate)\n        );\n    }\n    public countBy(name: Col | string) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType } from './enum';\nexport { Data } from './data';\nexport {\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n} from './type';\n\nexport { Table } from './table';\nexport { Column } from './column';\nexport { Visitor } from './visitor';\nexport { Schema, Field } from './schema';\nexport {\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n} from './vector/index';\n\nexport {\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './builder/index';\n\nexport { ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink } from './io/stream';\nexport { RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader } from './ipc/reader';\nexport { RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter } from './ipc/writer';\nexport { MessageReader, AsyncMessageReader, JSONMessageReader } from './ipc/message';\nexport { Message } from './ipc/metadata/message';\nexport { RecordBatch } from './recordbatch';\nexport { ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions } from './io/interfaces';\nexport { DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc } from './compute/dataframe';\n\nimport * as util_bn_ from './util/bn';\nimport * as util_int_ from './util/int';\nimport * as util_bit_ from './util/bit';\nimport * as util_math_ from './util/math';\nimport * as util_buffer_ from './util/buffer';\nimport * as util_vector_ from './util/vector';\nimport * as predicate from './compute/predicate';\n\nexport { predicate };\n/** @ignore */\nexport const util = {\n    ...util_bn_,\n    ...util_int_,\n    ...util_bit_,\n    ...util_math_,\n    ...util_buffer_,\n    ...util_vector_\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './io/adapters';\nimport { Builder } from './builder/index';\nimport { RecordBatchReader } from './ipc/reader';\nimport { RecordBatchWriter } from './ipc/writer';\nimport { toDOMStream } from './io/whatwg/iterable';\nimport { builderThroughDOMStream } from './io/whatwg/builder';\nimport { recordBatchReaderThroughDOMStream } from './io/whatwg/reader';\nimport { recordBatchWriterThroughDOMStream } from './io/whatwg/writer';\n\nstreamAdapters.toDOMStream = toDOMStream;\nBuilder['throughDOM'] = builderThroughDOMStream;\nRecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nRecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\n\nexport {\n    ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType,\n    Data,\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n    Table,\n    Column,\n    Schema, Field,\n    Visitor,\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n    ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink,\n    RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader,\n    RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter,\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    Message,\n    RecordBatch,\n    ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions,\n    DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc,\n    predicate,\n    util,\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './Arrow';\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from '../../util/buffer';\nimport { ReadableDOMStreamOptions } from '../../io/interfaces';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n\n/** @ignore */\nexport function toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n    if (isAsyncIterable<T>(source)) { return asyncIterableAsReadableDOMStream(source, options); }\n    if (isIterable<T>(source)) { return iterableAsReadableDOMStream(source, options); }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n\n/** @ignore */\nfunction iterableAsReadableDOMStream<T>(source: Iterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: Iterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    function next(controller: ReadableStreamDefaultController<T>, it: Iterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream<T>(source: AsyncIterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: AsyncIterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    async function next(controller: ReadableStreamDefaultController<T>, it: AsyncIterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream<T extends { [key: string]: DataType } = any>(writableStrategy?: ByteLengthQueuingStrategy, readableStrategy?: { autoDestroy: boolean }) {\n\n    const queue = new AsyncByteQueue();\n    let reader: RecordBatchReader<T> | null = null;\n\n    const readable = new ReadableStream<RecordBatch<T>>({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n\n    async function open() {\n        return await (await RecordBatchReader.from<T>(queue)).open(readableStrategy);\n    }\n\n    async function next(controller: ReadableStreamDefaultController<RecordBatch<T>>, reader: RecordBatchReader<T>) {\n        let size = controller.desiredSize;\n        let r: IteratorResult<RecordBatch<T>> | null = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteStream } from '../../io/stream';\nimport { RecordBatchWriter } from '../../ipc/writer';\n\n/** @ignore */\nexport function recordBatchWriterThroughDOMStream<T extends { [key: string]: DataType } = any>(\n    this: typeof RecordBatchWriter,\n    writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n    readableStrategy?: { highWaterMark?: number, size?: any }\n) {\n\n    const writer = new this<T>(writableStrategy);\n    const reader = new AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n\n    async function next(controller: ReadableStreamDefaultController<Uint8Array>) {\n        let buf: Uint8Array | null = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Table, Type } from \"apache-arrow\";\nvar ArrowTable = /** @class */ (function () {\n    function ArrowTable(dataBuffer, indexBuffer, columnsBuffer, styler) {\n        var _this = this;\n        this.getCell = function (rowIndex, columnIndex) {\n            var isBlankCell = rowIndex < _this.headerRows && columnIndex < _this.headerColumns;\n            var isIndexCell = rowIndex >= _this.headerRows && columnIndex < _this.headerColumns;\n            var isColumnsCell = rowIndex < _this.headerRows && columnIndex >= _this.headerColumns;\n            if (isBlankCell) {\n                var classNames = [\"blank\"];\n                if (columnIndex > 0) {\n                    classNames.push(\"level\" + rowIndex);\n                }\n                return {\n                    type: \"blank\",\n                    classNames: classNames.join(\" \"),\n                    content: \"\"\n                };\n            }\n            else if (isColumnsCell) {\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"col_heading\",\n                    \"level\" + rowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                return {\n                    type: \"columns\",\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.columnsTable, dataColumnIndex, rowIndex)\n                };\n            }\n            else if (isIndexCell) {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var classNames = [\n                    \"row_heading\",\n                    \"level\" + columnIndex,\n                    \"row\" + dataRowIndex\n                ];\n                return {\n                    type: \"index\",\n                    id: \"T_\" + _this.uuid + \"level\" + columnIndex + \"_row\" + dataRowIndex,\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.indexTable, dataRowIndex, columnIndex)\n                };\n            }\n            else {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"data\",\n                    \"row\" + dataRowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                var content = _this.styler\n                    ? _this.getContent(_this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\n                    : _this.getContent(_this.dataTable, dataRowIndex, dataColumnIndex);\n                return {\n                    type: \"data\",\n                    id: \"T_\" + _this.uuid + \"row\" + dataRowIndex + \"_col\" + dataColumnIndex,\n                    classNames: classNames.join(\" \"),\n                    content: content\n                };\n            }\n        };\n        this.getContent = function (table, rowIndex, columnIndex) {\n            var column = table.getColumnAt(columnIndex);\n            if (column === null) {\n                return \"\";\n            }\n            var columnTypeId = _this.getColumnTypeId(table, columnIndex);\n            switch (columnTypeId) {\n                case Type.Timestamp: {\n                    return _this.nanosToDate(column.get(rowIndex));\n                }\n                default: {\n                    return column.get(rowIndex);\n                }\n            }\n        };\n        this.dataTable = Table.from(dataBuffer);\n        this.indexTable = Table.from(indexBuffer);\n        this.columnsTable = Table.from(columnsBuffer);\n        this.styler = styler\n            ? {\n                caption: styler.caption,\n                displayValuesTable: Table.from(styler.displayValues),\n                styles: styler.styles,\n                uuid: styler.uuid\n            }\n            : undefined;\n    }\n    Object.defineProperty(ArrowTable.prototype, \"rows\", {\n        get: function () {\n            return this.indexTable.length + this.columnsTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columns\", {\n        get: function () {\n            return this.indexTable.numCols + this.columnsTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerRows\", {\n        get: function () {\n            return this.rows - this.dataRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerColumns\", {\n        get: function () {\n            return this.columns - this.dataColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataRows\", {\n        get: function () {\n            return this.dataTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataColumns\", {\n        get: function () {\n            return this.dataTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"uuid\", {\n        get: function () {\n            return this.styler && this.styler.uuid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"caption\", {\n        get: function () {\n            return this.styler && this.styler.caption;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"styles\", {\n        get: function () {\n            return this.styler && this.styler.styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"table\", {\n        get: function () {\n            return this.dataTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"index\", {\n        get: function () {\n            return this.indexTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columnTable\", {\n        get: function () {\n            return this.columnsTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Serialize arrow table.\n     */\n    ArrowTable.prototype.serialize = function () {\n        return {\n            data: this.dataTable.serialize(),\n            index: this.indexTable.serialize(),\n            columns: this.columnsTable.serialize()\n        };\n    };\n    /**\n     * Returns apache-arrow specific typeId of column.\n     */\n    ArrowTable.prototype.getColumnTypeId = function (table, columnIndex) {\n        return table.schema.fields[columnIndex].type.typeId;\n    };\n    ArrowTable.prototype.nanosToDate = function (nanos) {\n        return new Date(nanos / 1e6);\n    };\n    return ArrowTable;\n}());\nexport { ArrowTable };\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Safari doesn't support the EventTarget class, so we use a shim.\nimport { EventTarget } from \"event-target-shim\";\nimport { ArrowTable } from \"./ArrowTable\";\n/** Messages from Component -> Streamlit */\nvar ComponentMessageType;\n(function (ComponentMessageType) {\n    // A component sends this message when it's ready to receive messages\n    // from Streamlit. Streamlit won't send any messages until it gets this.\n    // Data: { apiVersion: number }\n    ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\n    // The component has a new widget value. Send it back to Streamlit, which\n    // will then re-run the app.\n    // Data: { value: any }\n    ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\n    // The component has a new height for its iframe.\n    // Data: { height: number }\n    ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\n})(ComponentMessageType || (ComponentMessageType = {}));\n/**\n * Streamlit communication API.\n *\n * Components can send data to Streamlit via the functions defined here,\n * and receive data from Streamlit via the `events` property.\n */\nvar Streamlit = /** @class */ (function () {\n    function Streamlit() {\n    }\n    /**\n     * The Streamlit component API version we're targetting.\n     * There's currently only 1!\n     */\n    Streamlit.API_VERSION = 1;\n    Streamlit.RENDER_EVENT = \"streamlit:render\";\n    /** Dispatches events received from Streamlit. */\n    Streamlit.events = new EventTarget();\n    Streamlit.registeredMessageListener = false;\n    /**\n     * Tell Streamlit that the component is ready to start receiving data.\n     * Streamlit will defer emitting RENDER events until it receives the\n     * COMPONENT_READY message.\n     */\n    Streamlit.setComponentReady = function () {\n        if (!Streamlit.registeredMessageListener) {\n            // Register for message events if we haven't already\n            window.addEventListener(\"message\", Streamlit.onMessageEvent);\n            Streamlit.registeredMessageListener = true;\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\n            apiVersion: Streamlit.API_VERSION\n        });\n    };\n    /**\n     * Report the component's height to Streamlit.\n     * This should be called every time the component changes its DOM - that is,\n     * when it's first loaded, and any time it updates.\n     */\n    Streamlit.setFrameHeight = function (height) {\n        if (height === undefined) {\n            // `height` is optional. If undefined, it defaults to scrollHeight,\n            // which is the entire height of the element minus its border,\n            // scrollbar, and margin.\n            height = document.body.scrollHeight;\n        }\n        if (height === Streamlit.lastFrameHeight) {\n            // Don't bother updating if our height hasn't changed.\n            return;\n        }\n        Streamlit.lastFrameHeight = height;\n        Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, { height: height });\n    };\n    /**\n     * Set the component's value. This value will be returned to the Python\n     * script, and the script will be re-run.\n     *\n     * For example:\n     *\n     * JavaScript:\n     * Streamlit.setComponentValue(\"ahoy!\")\n     *\n     * Python:\n     * value = st.my_component(...)\n     * st.write(value) # -> \"ahoy!\"\n     *\n     * The value must be an ArrowTable, a typed array, an ArrayBuffer, or be\n     * serializable to JSON.\n     */\n    Streamlit.setComponentValue = function (value) {\n        var dataType;\n        if (value instanceof ArrowTable) {\n            dataType = \"dataframe\";\n            value = value.serialize();\n        }\n        else if (isTypedArray(value)) {\n            // All typed arrays get sent as Uint8Array, because that's what our\n            // protobuf library uses for the \"bytes\" field type.\n            dataType = \"bytes\";\n            value = new Uint8Array(value.buffer);\n        }\n        else if (value instanceof ArrayBuffer) {\n            dataType = \"bytes\";\n            value = new Uint8Array(value);\n        }\n        else {\n            dataType = \"json\";\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, {\n            value: value,\n            dataType: dataType\n        });\n    };\n    /** Receive a ForwardMsg from the Streamlit app */\n    Streamlit.onMessageEvent = function (event) {\n        var type = event.data[\"type\"];\n        switch (type) {\n            case Streamlit.RENDER_EVENT:\n                Streamlit.onRenderMessage(event.data);\n                break;\n        }\n    };\n    /**\n     * Handle an untyped Streamlit render event and redispatch it as a\n     * StreamlitRenderEvent.\n     */\n    Streamlit.onRenderMessage = function (data) {\n        var args = data[\"args\"];\n        if (args == null) {\n            console.error(\"Got null args in onRenderMessage. This should never happen\");\n            args = {};\n        }\n        // Parse our dataframe arguments with arrow, and merge them into our args dict\n        var dataframeArgs = data[\"dfs\"] && data[\"dfs\"].length > 0\n            ? Streamlit.argsDataframeToObject(data[\"dfs\"])\n            : {};\n        args = __assign(__assign({}, args), dataframeArgs);\n        var disabled = Boolean(data[\"disabled\"]);\n        var theme = data[\"theme\"];\n        if (theme) {\n            _injectTheme(theme);\n        }\n        // Dispatch a render event!\n        var eventData = { disabled: disabled, args: args, theme: theme };\n        var event = new CustomEvent(Streamlit.RENDER_EVENT, {\n            detail: eventData\n        });\n        Streamlit.events.dispatchEvent(event);\n    };\n    Streamlit.argsDataframeToObject = function (argsDataframe) {\n        var argsDataframeArrow = argsDataframe.map(function (_a) {\n            var key = _a.key, value = _a.value;\n            return [key, Streamlit.toArrowTable(value)];\n        });\n        return Object.fromEntries(argsDataframeArrow);\n    };\n    Streamlit.toArrowTable = function (df) {\n        var _a = df.data, data = _a.data, index = _a.index, columns = _a.columns, styler = _a.styler;\n        return new ArrowTable(data, index, columns, styler);\n    };\n    /** Post a message to the Streamlit app. */\n    Streamlit.sendBackMsg = function (type, data) {\n        window.parent.postMessage(__assign({ isStreamlitMessage: true, type: type }, data), \"*\");\n    };\n    return Streamlit;\n}());\nexport { Streamlit };\nvar _injectTheme = function (theme) {\n    var style = document.createElement(\"style\");\n    document.head.appendChild(style);\n    style.innerHTML = \"\\n    :root {\\n      --primary-color: \" + theme.primaryColor + \";\\n      --background-color: \" + theme.backgroundColor + \";\\n      --secondary-background-color: \" + theme.secondaryBackgroundColor + \";\\n      --text-color: \" + theme.textColor + \";\\n      --font: \" + theme.font + \";\\n    }\\n\\n    body {\\n      background-color: var(--background-color);\\n      color: var(--text-color);\\n    }\\n  \";\n};\n/** True if the value is a TypedArray. */\nfunction isTypedArray(value) {\n    var isBigIntArray = false;\n    try {\n        isBigIntArray =\n            value instanceof BigInt64Array || value instanceof BigUint64Array;\n    }\n    catch (e) {\n        // Ignore cause Safari does not support this\n        // https://caniuse.com/mdn-javascript_builtins_bigint64array\n    }\n    return (value instanceof Int8Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint8ClampedArray ||\n        value instanceof Int16Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        isBigIntArray);\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitComponentBase = /** @class */ (function (_super) {\n    __extends(StreamlitComponentBase, _super);\n    function StreamlitComponentBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StreamlitComponentBase.prototype.componentDidMount = function () {\n        // After we're rendered for the first time, tell Streamlit that our height\n        // has changed.\n        Streamlit.setFrameHeight();\n    };\n    StreamlitComponentBase.prototype.componentDidUpdate = function () {\n        // After we're updated, tell Streamlit that our height may have changed.\n        Streamlit.setFrameHeight();\n    };\n    return StreamlitComponentBase;\n}(React.PureComponent));\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nexport function withStreamlitConnection(WrappedComponent) {\n    var ComponentWrapper = /** @class */ (function (_super) {\n        __extends(ComponentWrapper, _super);\n        function ComponentWrapper(props) {\n            var _this = _super.call(this, props) || this;\n            _this.componentDidMount = function () {\n                // Set up event listeners, and signal to Streamlit that we're ready.\n                // We won't render the component until we receive the first RENDER_EVENT.\n                Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n                Streamlit.setComponentReady();\n            };\n            _this.componentDidUpdate = function () {\n                // If our child threw an error, we display it in render(). In this\n                // case, the child won't be mounted and therefore won't call\n                // `setFrameHeight` on its own. We do it here so that the rendered\n                // error will be visible.\n                if (_this.state.componentError != null) {\n                    Streamlit.setFrameHeight();\n                }\n            };\n            _this.componentWillUnmount = function () {\n                Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n            };\n            /**\n             * Streamlit is telling this component to redraw.\n             * We save the render data in State, so that it can be passed to the\n             * component in our own render() function.\n             */\n            _this.onRenderEvent = function (event) {\n                // Update our state with the newest render data\n                var renderEvent = event;\n                _this.setState({ renderData: renderEvent.detail });\n            };\n            _this.render = function () {\n                // If our wrapped component threw an error, display it.\n                if (_this.state.componentError != null) {\n                    return (React.createElement(\"div\", null,\n                        React.createElement(\"h1\", null, \"Component Error\"),\n                        React.createElement(\"span\", null, _this.state.componentError.message)));\n                }\n                // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n                if (_this.state.renderData == null) {\n                    return null;\n                }\n                return (React.createElement(WrappedComponent, { width: window.innerWidth, disabled: _this.state.renderData.disabled, args: _this.state.renderData.args, theme: _this.state.renderData.theme }));\n            };\n            _this.state = {\n                renderData: undefined,\n                componentError: undefined\n            };\n            return _this;\n        }\n        /**\n         * Error boundary function. This will be called if our wrapped\n         * component throws an error. We store the caught error in our state,\n         * and display it in the next render().\n         */\n        ComponentWrapper.getDerivedStateFromError = function (error) {\n            return { componentError: error };\n        };\n        return ComponentWrapper;\n    }(React.PureComponent));\n    return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}\n","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","// Some functions take a variable number of arguments, or a few expected\n// arguments at the beginning and then a variable number of values to operate\n// on. This helper accumulates all remaining arguments past the function’s\n// argument length (or an explicit `startIndex`), into an array that becomes\n// the last argument. Similar to ES6’s \"rest parameter\".\nexport default function restArguments(func, startIndex) {\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\n  return function() {\n    var length = Math.max(arguments.length - startIndex, 0),\n        rest = Array(length),\n        index = 0;\n    for (; index < length; index++) {\n      rest[index] = arguments[index + startIndex];\n    }\n    switch (startIndex) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, arguments[0], rest);\n      case 2: return func.call(this, arguments[0], arguments[1], rest);\n    }\n    var args = Array(startIndex + 1);\n    for (index = 0; index < startIndex; index++) {\n      args[index] = arguments[index];\n    }\n    args[startIndex] = rest;\n    return func.apply(this, args);\n  };\n}\n","// Is a given variable an object?\nexport default function isObject(obj) {\n  var type = typeof obj;\n  return type === 'function' || (type === 'object' && !!obj);\n}\n","// Is a given value equal to null?\nexport default function isNull(obj) {\n  return obj === null;\n}\n","// Is a given variable undefined?\nexport default function isUndefined(obj) {\n  return obj === void 0;\n}\n","import { toString } from './_setup.js';\n\n// Is a given value a boolean?\nexport default function isBoolean(obj) {\n  return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n}\n","// Is a given value a DOM element?\nexport default function isElement(obj) {\n  return !!(obj && obj.nodeType === 1);\n}\n","import { toString } from './_setup.js';\n\n// Internal function for creating a `toString`-based type tester.\nexport default function tagTester(name) {\n  var tag = '[object ' + name + ']';\n  return function(obj) {\n    return toString.call(obj) === tag;\n  };\n}\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('String');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Number');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Date');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('RegExp');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Error');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Symbol');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('ArrayBuffer');\n","import tagTester from './_tagTester.js';\nimport { root } from './_setup.js';\n\nvar isFunction = tagTester('Function');\n\n// Optimize `isFunction` if appropriate. Work around some `typeof` bugs in old\n// v8, IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\nvar nodelist = root.document && root.document.childNodes;\nif (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n  isFunction = function(obj) {\n    return typeof obj == 'function' || false;\n  };\n}\n\nexport default isFunction;\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Object');\n","import { supportsDataView } from './_setup.js';\nimport hasObjectTag from './_hasObjectTag.js';\n\n// In IE 10 - Edge 13, `DataView` has string tag `'[object Object]'`.\n// In IE 11, the most common among them, this problem also applies to\n// `Map`, `WeakMap` and `Set`.\nexport var hasStringTagBug = (\n      supportsDataView && hasObjectTag(new DataView(new ArrayBuffer(8)))\n    ),\n    isIE11 = (typeof Map !== 'undefined' && hasObjectTag(new Map));\n","import tagTester from './_tagTester.js';\nimport isFunction from './isFunction.js';\nimport isArrayBuffer from './isArrayBuffer.js';\nimport { hasStringTagBug } from './_stringTagBug.js';\n\nvar isDataView = tagTester('DataView');\n\n// In IE 10 - Edge 13, we need a different heuristic\n// to determine whether an object is a `DataView`.\nfunction ie10IsDataView(obj) {\n  return obj != null && isFunction(obj.getInt8) && isArrayBuffer(obj.buffer);\n}\n\nexport default (hasStringTagBug ? ie10IsDataView : isDataView);\n","import { nativeIsArray } from './_setup.js';\nimport tagTester from './_tagTester.js';\n\n// Is a given value an array?\n// Delegates to ECMA5's native `Array.isArray`.\nexport default nativeIsArray || tagTester('Array');\n","import { hasOwnProperty } from './_setup.js';\n\n// Internal function to check whether `key` is an own property name of `obj`.\nexport default function has(obj, key) {\n  return obj != null && hasOwnProperty.call(obj, key);\n}\n","import tagTester from './_tagTester.js';\nimport has from './_has.js';\n\nvar isArguments = tagTester('Arguments');\n\n// Define a fallback version of the method in browsers (ahem, IE < 9), where\n// there isn't any inspectable \"Arguments\" type.\n(function() {\n  if (!isArguments(arguments)) {\n    isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n}());\n\nexport default isArguments;\n","import { _isFinite } from './_setup.js';\nimport isSymbol from './isSymbol.js';\n\n// Is a given object a finite number?\nexport default function isFinite(obj) {\n  return !isSymbol(obj) && _isFinite(obj) && !isNaN(parseFloat(obj));\n}\n","import { _isNaN } from './_setup.js';\nimport isNumber from './isNumber.js';\n\n// Is the given value `NaN`?\nexport default function isNaN(obj) {\n  return isNumber(obj) && _isNaN(obj);\n}\n","// Predicate-generating function. Often useful outside of Underscore.\nexport default function constant(value) {\n  return function() {\n    return value;\n  };\n}\n","import { MAX_ARRAY_INDEX } from './_setup.js';\n\n// Common internal logic for `isArrayLike` and `isBufferLike`.\nexport default function createSizePropertyCheck(getSizeProperty) {\n  return function(collection) {\n    var sizeProperty = getSizeProperty(collection);\n    return typeof sizeProperty == 'number' && sizeProperty >= 0 && sizeProperty <= MAX_ARRAY_INDEX;\n  }\n}\n","// Internal helper to generate a function to obtain property `key` from `obj`.\nexport default function shallowProperty(key) {\n  return function(obj) {\n    return obj == null ? void 0 : obj[key];\n  };\n}\n","import shallowProperty from './_shallowProperty.js';\n\n// Internal helper to obtain the `byteLength` property of an object.\nexport default shallowProperty('byteLength');\n","import createSizePropertyCheck from './_createSizePropertyCheck.js';\nimport getByteLength from './_getByteLength.js';\n\n// Internal helper to determine whether we should spend extensive checks against\n// `ArrayBuffer` et al.\nexport default createSizePropertyCheck(getByteLength);\n","import { supportsArrayBuffer, nativeIsView, toString } from './_setup.js';\nimport isDataView from './isDataView.js';\nimport constant from './constant.js';\nimport isBufferLike from './_isBufferLike.js';\n\n// Is a given value a typed array?\nvar typedArrayPattern = /\\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\\]/;\nfunction isTypedArray(obj) {\n  // `ArrayBuffer.isView` is the most future-proof, so use it when available.\n  // Otherwise, fall back on the above regular expression.\n  return nativeIsView ? (nativeIsView(obj) && !isDataView(obj)) :\n                isBufferLike(obj) && typedArrayPattern.test(toString.call(obj));\n}\n\nexport default supportsArrayBuffer ? isTypedArray : constant(false);\n","import shallowProperty from './_shallowProperty.js';\n\n// Internal helper to obtain the `length` property of an object.\nexport default shallowProperty('length');\n","import { nonEnumerableProps, ObjProto } from './_setup.js';\nimport isFunction from './isFunction.js';\nimport has from './_has.js';\n\n// Internal helper to create a simple lookup structure.\n// `collectNonEnumProps` used to depend on `_.contains`, but this led to\n// circular imports. `emulatedSet` is a one-off solution that only works for\n// arrays of strings.\nfunction emulatedSet(keys) {\n  var hash = {};\n  for (var l = keys.length, i = 0; i < l; ++i) hash[keys[i]] = true;\n  return {\n    contains: function(key) { return hash[key] === true; },\n    push: function(key) {\n      hash[key] = true;\n      return keys.push(key);\n    }\n  };\n}\n\n// Internal helper. Checks `keys` for the presence of keys in IE < 9 that won't\n// be iterated by `for key in ...` and thus missed. Extends `keys` in place if\n// needed.\nexport default function collectNonEnumProps(obj, keys) {\n  keys = emulatedSet(keys);\n  var nonEnumIdx = nonEnumerableProps.length;\n  var constructor = obj.constructor;\n  var proto = (isFunction(constructor) && constructor.prototype) || ObjProto;\n\n  // Constructor is a special case.\n  var prop = 'constructor';\n  if (has(obj, prop) && !keys.contains(prop)) keys.push(prop);\n\n  while (nonEnumIdx--) {\n    prop = nonEnumerableProps[nonEnumIdx];\n    if (prop in obj && obj[prop] !== proto[prop] && !keys.contains(prop)) {\n      keys.push(prop);\n    }\n  }\n}\n","import isObject from './isObject.js';\nimport { nativeKeys, hasEnumBug } from './_setup.js';\nimport has from './_has.js';\nimport collectNonEnumProps from './_collectNonEnumProps.js';\n\n// Retrieve the names of an object's own properties.\n// Delegates to **ECMAScript 5**'s native `Object.keys`.\nexport default function keys(obj) {\n  if (!isObject(obj)) return [];\n  if (nativeKeys) return nativeKeys(obj);\n  var keys = [];\n  for (var key in obj) if (has(obj, key)) keys.push(key);\n  // Ahem, IE < 9.\n  if (hasEnumBug) collectNonEnumProps(obj, keys);\n  return keys;\n}\n","import getLength from './_getLength.js';\nimport isArray from './isArray.js';\nimport isString from './isString.js';\nimport isArguments from './isArguments.js';\nimport keys from './keys.js';\n\n// Is a given array, string, or object empty?\n// An \"empty\" object has no enumerable own-properties.\nexport default function isEmpty(obj) {\n  if (obj == null) return true;\n  // Skip the more expensive `toString`-based type checks if `obj` has no\n  // `.length`.\n  var length = getLength(obj);\n  if (typeof length == 'number' && (\n    isArray(obj) || isString(obj) || isArguments(obj)\n  )) return length === 0;\n  return getLength(keys(obj)) === 0;\n}\n","import keys from './keys.js';\n\n// Returns whether an object has a given set of `key:value` pairs.\nexport default function isMatch(object, attrs) {\n  var _keys = keys(attrs), length = _keys.length;\n  if (object == null) return !length;\n  var obj = Object(object);\n  for (var i = 0; i < length; i++) {\n    var key = _keys[i];\n    if (attrs[key] !== obj[key] || !(key in obj)) return false;\n  }\n  return true;\n}\n","import { VERSION } from './_setup.js';\n\n// If Underscore is called as a function, it returns a wrapped object that can\n// be used OO-style. This wrapper holds altered versions of all functions added\n// through `_.mixin`. Wrapped objects may be chained.\nexport default function _(obj) {\n  if (obj instanceof _) return obj;\n  if (!(this instanceof _)) return new _(obj);\n  this._wrapped = obj;\n}\n\n_.VERSION = VERSION;\n\n// Extracts the result from a wrapped and chained object.\n_.prototype.value = function() {\n  return this._wrapped;\n};\n\n// Provide unwrapping proxies for some methods used in engine operations\n// such as arithmetic and JSON stringification.\n_.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n_.prototype.toString = function() {\n  return String(this._wrapped);\n};\n","import getByteLength from './_getByteLength.js';\n\n// Internal function to wrap or shallow-copy an ArrayBuffer,\n// typed array or DataView to a new view, reusing the buffer.\nexport default function toBufferView(bufferSource) {\n  return new Uint8Array(\n    bufferSource.buffer || bufferSource,\n    bufferSource.byteOffset || 0,\n    getByteLength(bufferSource)\n  );\n}\n","import _ from './underscore.js';\nimport { toString, SymbolProto } from './_setup.js';\nimport getByteLength from './_getByteLength.js';\nimport isTypedArray from './isTypedArray.js';\nimport isFunction from './isFunction.js';\nimport { hasStringTagBug }  from './_stringTagBug.js';\nimport isDataView from './isDataView.js';\nimport keys from './keys.js';\nimport has from './_has.js';\nimport toBufferView from './_toBufferView.js';\n\n// We use this string twice, so give it a name for minification.\nvar tagDataView = '[object DataView]';\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction eq(a, b, aStack, bStack) {\n  // Identical objects are equal. `0 === -0`, but they aren't identical.\n  // See the [Harmony `egal` proposal](https://wiki.ecmascript.org/doku.php?id=harmony:egal).\n  if (a === b) return a !== 0 || 1 / a === 1 / b;\n  // `null` or `undefined` only equal to itself (strict comparison).\n  if (a == null || b == null) return false;\n  // `NaN`s are equivalent, but non-reflexive.\n  if (a !== a) return b !== b;\n  // Exhaust primitive checks\n  var type = typeof a;\n  if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n  return deepEq(a, b, aStack, bStack);\n}\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction deepEq(a, b, aStack, bStack) {\n  // Unwrap any wrapped objects.\n  if (a instanceof _) a = a._wrapped;\n  if (b instanceof _) b = b._wrapped;\n  // Compare `[[Class]]` names.\n  var className = toString.call(a);\n  if (className !== toString.call(b)) return false;\n  // Work around a bug in IE 10 - Edge 13.\n  if (hasStringTagBug && className == '[object Object]' && isDataView(a)) {\n    if (!isDataView(b)) return false;\n    className = tagDataView;\n  }\n  switch (className) {\n    // These types are compared by value.\n    case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n    case '[object String]':\n      // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n      // equivalent to `new String(\"5\")`.\n      return '' + a === '' + b;\n    case '[object Number]':\n      // `NaN`s are equivalent, but non-reflexive.\n      // Object(NaN) is equivalent to NaN.\n      if (+a !== +a) return +b !== +b;\n      // An `egal` comparison is performed for other numeric values.\n      return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n    case '[object Date]':\n    case '[object Boolean]':\n      // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n      // millisecond representations. Note that invalid dates with millisecond representations\n      // of `NaN` are not equivalent.\n      return +a === +b;\n    case '[object Symbol]':\n      return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    case '[object ArrayBuffer]':\n    case tagDataView:\n      // Coerce to typed array so we can fall through.\n      return deepEq(toBufferView(a), toBufferView(b), aStack, bStack);\n  }\n\n  var areArrays = className === '[object Array]';\n  if (!areArrays && isTypedArray(a)) {\n      var byteLength = getByteLength(a);\n      if (byteLength !== getByteLength(b)) return false;\n      if (a.buffer === b.buffer && a.byteOffset === b.byteOffset) return true;\n      areArrays = true;\n  }\n  if (!areArrays) {\n    if (typeof a != 'object' || typeof b != 'object') return false;\n\n    // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n    // from different frames are.\n    var aCtor = a.constructor, bCtor = b.constructor;\n    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\n                             isFunction(bCtor) && bCtor instanceof bCtor)\n                        && ('constructor' in a && 'constructor' in b)) {\n      return false;\n    }\n  }\n  // Assume equality for cyclic structures. The algorithm for detecting cyclic\n  // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n  // Initializing stack of traversed objects.\n  // It's done here since we only need them for objects and arrays comparison.\n  aStack = aStack || [];\n  bStack = bStack || [];\n  var length = aStack.length;\n  while (length--) {\n    // Linear search. Performance is inversely proportional to the number of\n    // unique nested structures.\n    if (aStack[length] === a) return bStack[length] === b;\n  }\n\n  // Add the first object to the stack of traversed objects.\n  aStack.push(a);\n  bStack.push(b);\n\n  // Recursively compare objects and arrays.\n  if (areArrays) {\n    // Compare array lengths to determine if a deep comparison is necessary.\n    length = a.length;\n    if (length !== b.length) return false;\n    // Deep compare the contents, ignoring non-numeric properties.\n    while (length--) {\n      if (!eq(a[length], b[length], aStack, bStack)) return false;\n    }\n  } else {\n    // Deep compare objects.\n    var _keys = keys(a), key;\n    length = _keys.length;\n    // Ensure that both objects contain the same number of properties before comparing deep equality.\n    if (keys(b).length !== length) return false;\n    while (length--) {\n      // Deep compare each member\n      key = _keys[length];\n      if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n    }\n  }\n  // Remove the first object from the stack of traversed objects.\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\n// Perform a deep comparison to check if two objects are equal.\nexport default function isEqual(a, b) {\n  return eq(a, b);\n}\n","import isObject from './isObject.js';\nimport { hasEnumBug } from './_setup.js';\nimport collectNonEnumProps from './_collectNonEnumProps.js';\n\n// Retrieve all the enumerable property names of an object.\nexport default function allKeys(obj) {\n  if (!isObject(obj)) return [];\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  // Ahem, IE < 9.\n  if (hasEnumBug) collectNonEnumProps(obj, keys);\n  return keys;\n}\n","import getLength from './_getLength.js';\nimport isFunction from './isFunction.js';\nimport allKeys from './allKeys.js';\n\n// Since the regular `Object.prototype.toString` type tests don't work for\n// some types in IE 11, we use a fingerprinting heuristic instead, based\n// on the methods. It's not great, but it's the best we got.\n// The fingerprint method lists are defined below.\nexport function ie11fingerprint(methods) {\n  var length = getLength(methods);\n  return function(obj) {\n    if (obj == null) return false;\n    // `Map`, `WeakMap` and `Set` have no enumerable keys.\n    var keys = allKeys(obj);\n    if (getLength(keys)) return false;\n    for (var i = 0; i < length; i++) {\n      if (!isFunction(obj[methods[i]])) return false;\n    }\n    // If we are testing against `WeakMap`, we need to ensure that\n    // `obj` doesn't have a `forEach` method in order to distinguish\n    // it from a regular `Map`.\n    return methods !== weakMapMethods || !isFunction(obj[forEachName]);\n  };\n}\n\n// In the interest of compact minification, we write\n// each string in the fingerprints only once.\nvar forEachName = 'forEach',\n    hasName = 'has',\n    commonInit = ['clear', 'delete'],\n    mapTail = ['get', hasName, 'set'];\n\n// `Map`, `WeakMap` and `Set` each have slightly different\n// combinations of the above sublists.\nexport var mapMethods = commonInit.concat(forEachName, mapTail),\n    weakMapMethods = commonInit.concat(mapTail),\n    setMethods = ['add'].concat(commonInit, forEachName, hasName);\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, mapMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(mapMethods) : tagTester('Map');\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, weakMapMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(weakMapMethods) : tagTester('WeakMap');\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, setMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(setMethods) : tagTester('Set');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('WeakSet');\n","import keys from './keys.js';\n\n// Retrieve the values of an object's properties.\nexport default function values(obj) {\n  var _keys = keys(obj);\n  var length = _keys.length;\n  var values = Array(length);\n  for (var i = 0; i < length; i++) {\n    values[i] = obj[_keys[i]];\n  }\n  return values;\n}\n","import keys from './keys.js';\n\n// Convert an object into a list of `[key, value]` pairs.\n// The opposite of `_.object` with one argument.\nexport default function pairs(obj) {\n  var _keys = keys(obj);\n  var length = _keys.length;\n  var pairs = Array(length);\n  for (var i = 0; i < length; i++) {\n    pairs[i] = [_keys[i], obj[_keys[i]]];\n  }\n  return pairs;\n}\n","import keys from './keys.js';\n\n// Invert the keys and values of an object. The values must be serializable.\nexport default function invert(obj) {\n  var result = {};\n  var _keys = keys(obj);\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    result[obj[_keys[i]]] = _keys[i];\n  }\n  return result;\n}\n","import isFunction from './isFunction.js';\n\n// Return a sorted list of the function names available on the object.\nexport default function functions(obj) {\n  var names = [];\n  for (var key in obj) {\n    if (isFunction(obj[key])) names.push(key);\n  }\n  return names.sort();\n}\n","// An internal function for creating assigner functions.\nexport default function createAssigner(keysFunc, defaults) {\n  return function(obj) {\n    var length = arguments.length;\n    if (defaults) obj = Object(obj);\n    if (length < 2 || obj == null) return obj;\n    for (var index = 1; index < length; index++) {\n      var source = arguments[index],\n          keys = keysFunc(source),\n          l = keys.length;\n      for (var i = 0; i < l; i++) {\n        var key = keys[i];\n        if (!defaults || obj[key] === void 0) obj[key] = source[key];\n      }\n    }\n    return obj;\n  };\n}\n","import createAssigner from './_createAssigner.js';\nimport allKeys from './allKeys.js';\n\n// Extend a given object with all the properties in passed-in object(s).\nexport default createAssigner(allKeys);\n","import createAssigner from './_createAssigner.js';\nimport keys from './keys.js';\n\n// Assigns a given object with all the own properties in the passed-in\n// object(s).\n// (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\nexport default createAssigner(keys);\n","import createAssigner from './_createAssigner.js';\nimport allKeys from './allKeys.js';\n\n// Fill in a given object with default properties.\nexport default createAssigner(allKeys, true);\n","import isObject from './isObject.js';\nimport { nativeCreate } from './_setup.js';\n\n// Create a naked function reference for surrogate-prototype-swapping.\nfunction ctor() {\n  return function(){};\n}\n\n// An internal function for creating a new object that inherits from another.\nexport default function baseCreate(prototype) {\n  if (!isObject(prototype)) return {};\n  if (nativeCreate) return nativeCreate(prototype);\n  var Ctor = ctor();\n  Ctor.prototype = prototype;\n  var result = new Ctor;\n  Ctor.prototype = null;\n  return result;\n}\n","import baseCreate from './_baseCreate.js';\nimport extendOwn from './extendOwn.js';\n\n// Creates an object that inherits from the given prototype object.\n// If additional properties are provided then they will be added to the\n// created object.\nexport default function create(prototype, props) {\n  var result = baseCreate(prototype);\n  if (props) extendOwn(result, props);\n  return result;\n}\n","import isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport extend from './extend.js';\n\n// Create a (shallow-cloned) duplicate of an object.\nexport default function clone(obj) {\n  if (!isObject(obj)) return obj;\n  return isArray(obj) ? obj.slice() : extend({}, obj);\n}\n","// Invokes `interceptor` with the `obj` and then returns `obj`.\n// The primary purpose of this method is to \"tap into\" a method chain, in\n// order to perform operations on intermediate results within the chain.\nexport default function tap(obj, interceptor) {\n  interceptor(obj);\n  return obj;\n}\n","import _ from './underscore.js';\nimport isArray from './isArray.js';\n\n// Normalize a (deep) property `path` to array.\n// Like `_.iteratee`, this function can be customized.\nexport default function toPath(path) {\n  return isArray(path) ? path : [path];\n}\n_.toPath = toPath;\n","import _ from './underscore.js';\nimport './toPath.js';\n\n// Internal wrapper for `_.toPath` to enable minification.\n// Similar to `cb` for `_.iteratee`.\nexport default function toPath(path) {\n  return _.toPath(path);\n}\n","// Internal function to obtain a nested property in `obj` along `path`.\nexport default function deepGet(obj, path) {\n  var length = path.length;\n  for (var i = 0; i < length; i++) {\n    if (obj == null) return void 0;\n    obj = obj[path[i]];\n  }\n  return length ? obj : void 0;\n}\n","import toPath from './_toPath.js';\nimport deepGet from './_deepGet.js';\nimport isUndefined from './isUndefined.js';\n\n// Get the value of the (deep) property on `path` from `object`.\n// If any property in `path` does not exist or if the value is\n// `undefined`, return `defaultValue` instead.\n// The `path` is normalized through `_.toPath`.\nexport default function get(object, path, defaultValue) {\n  var value = deepGet(object, toPath(path));\n  return isUndefined(value) ? defaultValue : value;\n}\n","import _has from './_has.js';\nimport toPath from './_toPath.js';\n\n// Shortcut function for checking if an object has a given property directly on\n// itself (in other words, not on a prototype). Unlike the internal `has`\n// function, this public version can also traverse nested properties.\nexport default function has(obj, path) {\n  path = toPath(path);\n  var length = path.length;\n  for (var i = 0; i < length; i++) {\n    var key = path[i];\n    if (!_has(obj, key)) return false;\n    obj = obj[key];\n  }\n  return !!length;\n}\n","// Keep the identity function around for default iteratees.\nexport default function identity(value) {\n  return value;\n}\n","import extendOwn from './extendOwn.js';\nimport isMatch from './isMatch.js';\n\n// Returns a predicate for checking whether an object has a given set of\n// `key:value` pairs.\nexport default function matcher(attrs) {\n  attrs = extendOwn({}, attrs);\n  return function(obj) {\n    return isMatch(obj, attrs);\n  };\n}\n","import deepGet from './_deepGet.js';\nimport toPath from './_toPath.js';\n\n// Creates a function that, when passed an object, will traverse that object’s\n// properties down the given `path`, specified as an array of keys or indices.\nexport default function property(path) {\n  path = toPath(path);\n  return function(obj) {\n    return deepGet(obj, path);\n  };\n}\n","// Internal function that returns an efficient (for current engines) version\n// of the passed-in callback, to be repeatedly applied in other Underscore\n// functions.\nexport default function optimizeCb(func, context, argCount) {\n  if (context === void 0) return func;\n  switch (argCount == null ? 3 : argCount) {\n    case 1: return function(value) {\n      return func.call(context, value);\n    };\n    // The 2-argument case is omitted because we’re not using it.\n    case 3: return function(value, index, collection) {\n      return func.call(context, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(context, accumulator, value, index, collection);\n    };\n  }\n  return function() {\n    return func.apply(context, arguments);\n  };\n}\n","import identity from './identity.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport matcher from './matcher.js';\nimport property from './property.js';\nimport optimizeCb from './_optimizeCb.js';\n\n// An internal function to generate callbacks that can be applied to each\n// element in a collection, returning the desired result — either `_.identity`,\n// an arbitrary callback, a property matcher, or a property accessor.\nexport default function baseIteratee(value, context, argCount) {\n  if (value == null) return identity;\n  if (isFunction(value)) return optimizeCb(value, context, argCount);\n  if (isObject(value) && !isArray(value)) return matcher(value);\n  return property(value);\n}\n","import _ from './underscore.js';\nimport baseIteratee from './_baseIteratee.js';\n\n// External wrapper for our callback generator. Users may customize\n// `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n// This abstraction hides the internal-only `argCount` argument.\nexport default function iteratee(value, context) {\n  return baseIteratee(value, context, Infinity);\n}\n_.iteratee = iteratee;\n","import _ from './underscore.js';\nimport baseIteratee from './_baseIteratee.js';\nimport iteratee from './iteratee.js';\n\n// The function we call internally to generate a callback. It invokes\n// `_.iteratee` if overridden, otherwise `baseIteratee`.\nexport default function cb(value, context, argCount) {\n  if (_.iteratee !== iteratee) return _.iteratee(value, context);\n  return baseIteratee(value, context, argCount);\n}\n","import cb from './_cb.js';\nimport keys from './keys.js';\n\n// Returns the results of applying the `iteratee` to each element of `obj`.\n// In contrast to `_.map` it returns an object.\nexport default function mapObject(obj, iteratee, context) {\n  iteratee = cb(iteratee, context);\n  var _keys = keys(obj),\n      length = _keys.length,\n      results = {};\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys[index];\n    results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n  }\n  return results;\n}\n","// Predicate-generating function. Often useful outside of Underscore.\nexport default function noop(){}\n","import noop from './noop.js';\nimport get from './get.js';\n\n// Generates a function for a given object that returns a given property.\nexport default function propertyOf(obj) {\n  if (obj == null) return noop;\n  return function(path) {\n    return get(obj, path);\n  };\n}\n","import optimizeCb from './_optimizeCb.js';\n\n// Run a function **n** times.\nexport default function times(n, iteratee, context) {\n  var accum = Array(Math.max(0, n));\n  iteratee = optimizeCb(iteratee, context, 1);\n  for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n  return accum;\n}\n","// Return a random integer between `min` and `max` (inclusive).\nexport default function random(min, max) {\n  if (max == null) {\n    max = min;\n    min = 0;\n  }\n  return min + Math.floor(Math.random() * (max - min + 1));\n}\n","// A (possibly faster) way to get the current timestamp as an integer.\nexport default Date.now || function() {\n  return new Date().getTime();\n};\n","import keys from './keys.js';\n\n// Internal helper to generate functions for escaping and unescaping strings\n// to/from HTML interpolation.\nexport default function createEscaper(map) {\n  var escaper = function(match) {\n    return map[match];\n  };\n  // Regexes for identifying a key that needs to be escaped.\n  var source = '(?:' + keys(map).join('|') + ')';\n  var testRegexp = RegExp(source);\n  var replaceRegexp = RegExp(source, 'g');\n  return function(string) {\n    string = string == null ? '' : '' + string;\n    return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n  };\n}\n","// Internal list of HTML entities for escaping.\nexport default {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\n","import createEscaper from './_createEscaper.js';\nimport escapeMap from './_escapeMap.js';\n\n// Function for escaping strings to HTML interpolation.\nexport default createEscaper(escapeMap);\n","import createEscaper from './_createEscaper.js';\nimport unescapeMap from './_unescapeMap.js';\n\n// Function for unescaping strings from HTML interpolation.\nexport default createEscaper(unescapeMap);\n","import invert from './invert.js';\nimport escapeMap from './_escapeMap.js';\n\n// Internal list of HTML entities for unescaping.\nexport default invert(escapeMap);\n","import _ from './underscore.js';\n\n// By default, Underscore uses ERB-style template delimiters. Change the\n// following template settings to use alternative delimiters.\nexport default _.templateSettings = {\n  evaluate: /<%([\\s\\S]+?)%>/g,\n  interpolate: /<%=([\\s\\S]+?)%>/g,\n  escape: /<%-([\\s\\S]+?)%>/g\n};\n","import defaults from './defaults.js';\nimport _ from './underscore.js';\nimport './templateSettings.js';\n\n// When customizing `_.templateSettings`, if you don't want to define an\n// interpolation, evaluation or escaping regex, we need one that is\n// guaranteed not to match.\nvar noMatch = /(.)^/;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar escapes = {\n  \"'\": \"'\",\n  '\\\\': '\\\\',\n  '\\r': 'r',\n  '\\n': 'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction escapeChar(match) {\n  return '\\\\' + escapes[match];\n}\n\n// In order to prevent third-party code injection through\n// `_.templateSettings.variable`, we test it against the following regular\n// expression. It is intentionally a bit more liberal than just matching valid\n// identifiers, but still prevents possible loopholes through defaults or\n// destructuring assignment.\nvar bareIdentifier = /^\\s*(\\w|\\$)+\\s*$/;\n\n// JavaScript micro-templating, similar to John Resig's implementation.\n// Underscore templating handles arbitrary delimiters, preserves whitespace,\n// and correctly escapes quotes within interpolated code.\n// NB: `oldSettings` only exists for backwards compatibility.\nexport default function template(text, settings, oldSettings) {\n  if (!settings && oldSettings) settings = oldSettings;\n  settings = defaults({}, settings, _.templateSettings);\n\n  // Combine delimiters into one regular expression via alternation.\n  var matcher = RegExp([\n    (settings.escape || noMatch).source,\n    (settings.interpolate || noMatch).source,\n    (settings.evaluate || noMatch).source\n  ].join('|') + '|$', 'g');\n\n  // Compile the template source, escaping string literals appropriately.\n  var index = 0;\n  var source = \"__p+='\";\n  text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n    source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n    index = offset + match.length;\n\n    if (escape) {\n      source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n    } else if (interpolate) {\n      source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n    } else if (evaluate) {\n      source += \"';\\n\" + evaluate + \"\\n__p+='\";\n    }\n\n    // Adobe VMs need the match returned to produce the correct offset.\n    return match;\n  });\n  source += \"';\\n\";\n\n  var argument = settings.variable;\n  if (argument) {\n    // Insure against third-party code injection. (CVE-2021-23358)\n    if (!bareIdentifier.test(argument)) throw new Error(\n      'variable is not a bare identifier: ' + argument\n    );\n  } else {\n    // If a variable is not specified, place data values in local scope.\n    source = 'with(obj||{}){\\n' + source + '}\\n';\n    argument = 'obj';\n  }\n\n  source = \"var __t,__p='',__j=Array.prototype.join,\" +\n    \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n    source + 'return __p;\\n';\n\n  var render;\n  try {\n    render = new Function(argument, '_', source);\n  } catch (e) {\n    e.source = source;\n    throw e;\n  }\n\n  var template = function(data) {\n    return render.call(this, data, _);\n  };\n\n  // Provide the compiled source as a convenience for precompilation.\n  template.source = 'function(' + argument + '){\\n' + source + '}';\n\n  return template;\n}\n","import isFunction from './isFunction.js';\nimport toPath from './_toPath.js';\n\n// Traverses the children of `obj` along `path`. If a child is a function, it\n// is invoked with its parent as context. Returns the value of the final\n// child, or `fallback` if any child is undefined.\nexport default function result(obj, path, fallback) {\n  path = toPath(path);\n  var length = path.length;\n  if (!length) {\n    return isFunction(fallback) ? fallback.call(obj) : fallback;\n  }\n  for (var i = 0; i < length; i++) {\n    var prop = obj == null ? void 0 : obj[path[i]];\n    if (prop === void 0) {\n      prop = fallback;\n      i = length; // Ensure we don't continue iterating.\n    }\n    obj = isFunction(prop) ? prop.call(obj) : prop;\n  }\n  return obj;\n}\n","// Generate a unique integer id (unique within the entire client session).\n// Useful for temporary DOM ids.\nvar idCounter = 0;\nexport default function uniqueId(prefix) {\n  var id = ++idCounter + '';\n  return prefix ? prefix + id : id;\n}\n","import _ from './underscore.js';\n\n// Start chaining a wrapped Underscore object.\nexport default function chain(obj) {\n  var instance = _(obj);\n  instance._chain = true;\n  return instance;\n}\n","import baseCreate from './_baseCreate.js';\nimport isObject from './isObject.js';\n\n// Internal function to execute `sourceFunc` bound to `context` with optional\n// `args`. Determines whether to execute a function as a constructor or as a\n// normal function.\nexport default function executeBound(sourceFunc, boundFunc, context, callingContext, args) {\n  if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n  var self = baseCreate(sourceFunc.prototype);\n  var result = sourceFunc.apply(self, args);\n  if (isObject(result)) return result;\n  return self;\n}\n","import restArguments from './restArguments.js';\nimport executeBound from './_executeBound.js';\nimport _ from './underscore.js';\n\n// Partially apply a function by creating a version that has had some of its\n// arguments pre-filled, without changing its dynamic `this` context. `_` acts\n// as a placeholder by default, allowing any combination of arguments to be\n// pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\nvar partial = restArguments(function(func, boundArgs) {\n  var placeholder = partial.placeholder;\n  var bound = function() {\n    var position = 0, length = boundArgs.length;\n    var args = Array(length);\n    for (var i = 0; i < length; i++) {\n      args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n    }\n    while (position < arguments.length) args.push(arguments[position++]);\n    return executeBound(func, bound, this, this, args);\n  };\n  return bound;\n});\n\npartial.placeholder = _;\nexport default partial;\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport executeBound from './_executeBound.js';\n\n// Create a function bound to a given object (assigning `this`, and arguments,\n// optionally).\nexport default restArguments(function(func, context, args) {\n  if (!isFunction(func)) throw new TypeError('Bind must be called on a function');\n  var bound = restArguments(function(callArgs) {\n    return executeBound(func, bound, context, this, args.concat(callArgs));\n  });\n  return bound;\n});\n","import createSizePropertyCheck from './_createSizePropertyCheck.js';\nimport getLength from './_getLength.js';\n\n// Internal helper for collection methods to determine whether a collection\n// should be iterated as an array or as an object.\n// Related: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n// Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\nexport default createSizePropertyCheck(getLength);\n","import getLength from './_getLength.js';\nimport isArrayLike from './_isArrayLike.js';\nimport isArray from './isArray.js';\nimport isArguments from './isArguments.js';\n\n// Internal implementation of a recursive `flatten` function.\nexport default function flatten(input, depth, strict, output) {\n  output = output || [];\n  if (!depth && depth !== 0) {\n    depth = Infinity;\n  } else if (depth <= 0) {\n    return output.concat(input);\n  }\n  var idx = output.length;\n  for (var i = 0, length = getLength(input); i < length; i++) {\n    var value = input[i];\n    if (isArrayLike(value) && (isArray(value) || isArguments(value))) {\n      // Flatten current level of array or arguments object.\n      if (depth > 1) {\n        flatten(value, depth - 1, strict, output);\n        idx = output.length;\n      } else {\n        var j = 0, len = value.length;\n        while (j < len) output[idx++] = value[j++];\n      }\n    } else if (!strict) {\n      output[idx++] = value;\n    }\n  }\n  return output;\n}\n","import restArguments from './restArguments.js';\nimport flatten from './_flatten.js';\nimport bind from './bind.js';\n\n// Bind a number of an object's methods to that object. Remaining arguments\n// are the method names to be bound. Useful for ensuring that all callbacks\n// defined on an object belong to it.\nexport default restArguments(function(obj, keys) {\n  keys = flatten(keys, false, false);\n  var index = keys.length;\n  if (index < 1) throw new Error('bindAll must be passed function names');\n  while (index--) {\n    var key = keys[index];\n    obj[key] = bind(obj[key], obj);\n  }\n  return obj;\n});\n","import has from './_has.js';\n\n// Memoize an expensive function by storing its results.\nexport default function memoize(func, hasher) {\n  var memoize = function(key) {\n    var cache = memoize.cache;\n    var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n    if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n    return cache[address];\n  };\n  memoize.cache = {};\n  return memoize;\n}\n","import restArguments from './restArguments.js';\n\n// Delays a function for the given number of milliseconds, and then calls\n// it with the arguments supplied.\nexport default restArguments(function(func, wait, args) {\n  return setTimeout(function() {\n    return func.apply(null, args);\n  }, wait);\n});\n","import partial from './partial.js';\nimport delay from './delay.js';\nimport _ from './underscore.js';\n\n// Defers a function, scheduling it to run after the current call stack has\n// cleared.\nexport default partial(delay, _, 1);\n","import now from './now.js';\n\n// Returns a function, that, when invoked, will only be triggered at most once\n// during a given window of time. Normally, the throttled function will run\n// as much as it can, without ever going more than once per `wait` duration;\n// but if you'd like to disable the execution on the leading edge, pass\n// `{leading: false}`. To disable execution on the trailing edge, ditto.\nexport default function throttle(func, wait, options) {\n  var timeout, context, args, result;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function() {\n    var _now = now();\n    if (!previous && options.leading === false) previous = _now;\n    var remaining = wait - (_now - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = _now;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n\n  throttled.cancel = function() {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n","import restArguments from './restArguments.js';\nimport now from './now.js';\n\n// When a sequence of calls of the returned function ends, the argument\n// function is triggered. The end of a sequence is defined by the `wait`\n// parameter. If `immediate` is passed, the argument function will be\n// triggered at the beginning of the sequence instead of at the end.\nexport default function debounce(func, wait, immediate) {\n  var timeout, previous, args, result, context;\n\n  var later = function() {\n    var passed = now() - previous;\n    if (wait > passed) {\n      timeout = setTimeout(later, wait - passed);\n    } else {\n      timeout = null;\n      if (!immediate) result = func.apply(context, args);\n      // This check is needed because `func` can recursively invoke `debounced`.\n      if (!timeout) args = context = null;\n    }\n  };\n\n  var debounced = restArguments(function(_args) {\n    context = this;\n    args = _args;\n    previous = now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n      if (immediate) result = func.apply(context, args);\n    }\n    return result;\n  });\n\n  debounced.cancel = function() {\n    clearTimeout(timeout);\n    timeout = args = context = null;\n  };\n\n  return debounced;\n}\n","import partial from './partial.js';\n\n// Returns the first function passed as an argument to the second,\n// allowing you to adjust arguments, run code before and after, and\n// conditionally execute the original function.\nexport default function wrap(func, wrapper) {\n  return partial(wrapper, func);\n}\n","// Returns a negated version of the passed-in predicate.\nexport default function negate(predicate) {\n  return function() {\n    return !predicate.apply(this, arguments);\n  };\n}\n","// Returns a function that is the composition of a list of functions, each\n// consuming the return value of the function that follows.\nexport default function compose() {\n  var args = arguments;\n  var start = args.length - 1;\n  return function() {\n    var i = start;\n    var result = args[start].apply(this, arguments);\n    while (i--) result = args[i].call(this, result);\n    return result;\n  };\n}\n","// Returns a function that will only be executed on and after the Nth call.\nexport default function after(times, func) {\n  return function() {\n    if (--times < 1) {\n      return func.apply(this, arguments);\n    }\n  };\n}\n","// Returns a function that will only be executed up to (but not including) the\n// Nth call.\nexport default function before(times, func) {\n  var memo;\n  return function() {\n    if (--times > 0) {\n      memo = func.apply(this, arguments);\n    }\n    if (times <= 1) func = null;\n    return memo;\n  };\n}\n","import partial from './partial.js';\nimport before from './before.js';\n\n// Returns a function that will be executed at most one time, no matter how\n// often you call it. Useful for lazy initialization.\nexport default partial(before, 2);\n","import cb from './_cb.js';\nimport keys from './keys.js';\n\n// Returns the first key on an object that passes a truth test.\nexport default function findKey(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = keys(obj), key;\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    key = _keys[i];\n    if (predicate(obj[key], key, obj)) return key;\n  }\n}\n","import cb from './_cb.js';\nimport getLength from './_getLength.js';\n\n// Internal function to generate `_.findIndex` and `_.findLastIndex`.\nexport default function createPredicateIndexFinder(dir) {\n  return function(array, predicate, context) {\n    predicate = cb(predicate, context);\n    var length = getLength(array);\n    var index = dir > 0 ? 0 : length - 1;\n    for (; index >= 0 && index < length; index += dir) {\n      if (predicate(array[index], index, array)) return index;\n    }\n    return -1;\n  };\n}\n","import createPredicateIndexFinder from './_createPredicateIndexFinder.js';\n\n// Returns the first index on an array-like that passes a truth test.\nexport default createPredicateIndexFinder(1);\n","import createPredicateIndexFinder from './_createPredicateIndexFinder.js';\n\n// Returns the last index on an array-like that passes a truth test.\nexport default createPredicateIndexFinder(-1);\n","import cb from './_cb.js';\nimport getLength from './_getLength.js';\n\n// Use a comparator function to figure out the smallest index at which\n// an object should be inserted so as to maintain order. Uses binary search.\nexport default function sortedIndex(array, obj, iteratee, context) {\n  iteratee = cb(iteratee, context, 1);\n  var value = iteratee(obj);\n  var low = 0, high = getLength(array);\n  while (low < high) {\n    var mid = Math.floor((low + high) / 2);\n    if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n  }\n  return low;\n}\n","import getLength from './_getLength.js';\nimport { slice } from './_setup.js';\nimport isNaN from './isNaN.js';\n\n// Internal function to generate the `_.indexOf` and `_.lastIndexOf` functions.\nexport default function createIndexFinder(dir, predicateFind, sortedIndex) {\n  return function(array, item, idx) {\n    var i = 0, length = getLength(array);\n    if (typeof idx == 'number') {\n      if (dir > 0) {\n        i = idx >= 0 ? idx : Math.max(idx + length, i);\n      } else {\n        length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n      }\n    } else if (sortedIndex && idx && length) {\n      idx = sortedIndex(array, item);\n      return array[idx] === item ? idx : -1;\n    }\n    if (item !== item) {\n      idx = predicateFind(slice.call(array, i, length), isNaN);\n      return idx >= 0 ? idx + i : -1;\n    }\n    for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n      if (array[idx] === item) return idx;\n    }\n    return -1;\n  };\n}\n","import sortedIndex from './sortedIndex.js';\nimport findIndex from './findIndex.js';\nimport createIndexFinder from './_createIndexFinder.js';\n\n// Return the position of the first occurrence of an item in an array,\n// or -1 if the item is not included in the array.\n// If the array is large and already in sort order, pass `true`\n// for **isSorted** to use binary search.\nexport default createIndexFinder(1, findIndex, sortedIndex);\n","import findLastIndex from './findLastIndex.js';\nimport createIndexFinder from './_createIndexFinder.js';\n\n// Return the position of the last occurrence of an item in an array,\n// or -1 if the item is not included in the array.\nexport default createIndexFinder(-1, findLastIndex);\n","import isArrayLike from './_isArrayLike.js';\nimport findIndex from './findIndex.js';\nimport findKey from './findKey.js';\n\n// Return the first value which passes a truth test.\nexport default function find(obj, predicate, context) {\n  var keyFinder = isArrayLike(obj) ? findIndex : findKey;\n  var key = keyFinder(obj, predicate, context);\n  if (key !== void 0 && key !== -1) return obj[key];\n}\n","import find from './find.js';\nimport matcher from './matcher.js';\n\n// Convenience version of a common use case of `_.find`: getting the first\n// object containing specific `key:value` pairs.\nexport default function findWhere(obj, attrs) {\n  return find(obj, matcher(attrs));\n}\n","import optimizeCb from './_optimizeCb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// The cornerstone for collection functions, an `each`\n// implementation, aka `forEach`.\n// Handles raw objects in addition to array-likes. Treats all\n// sparse array-likes as if they were dense.\nexport default function each(obj, iteratee, context) {\n  iteratee = optimizeCb(iteratee, context);\n  var i, length;\n  if (isArrayLike(obj)) {\n    for (i = 0, length = obj.length; i < length; i++) {\n      iteratee(obj[i], i, obj);\n    }\n  } else {\n    var _keys = keys(obj);\n    for (i = 0, length = _keys.length; i < length; i++) {\n      iteratee(obj[_keys[i]], _keys[i], obj);\n    }\n  }\n  return obj;\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Return the results of applying the iteratee to each element.\nexport default function map(obj, iteratee, context) {\n  iteratee = cb(iteratee, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length,\n      results = Array(length);\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    results[index] = iteratee(obj[currentKey], currentKey, obj);\n  }\n  return results;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\nimport optimizeCb from './_optimizeCb.js';\n\n// Internal helper to create a reducing function, iterating left or right.\nexport default function createReduce(dir) {\n  // Wrap code that reassigns argument variables in a separate function than\n  // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n  var reducer = function(obj, iteratee, memo, initial) {\n    var _keys = !isArrayLike(obj) && keys(obj),\n        length = (_keys || obj).length,\n        index = dir > 0 ? 0 : length - 1;\n    if (!initial) {\n      memo = obj[_keys ? _keys[index] : index];\n      index += dir;\n    }\n    for (; index >= 0 && index < length; index += dir) {\n      var currentKey = _keys ? _keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  };\n\n  return function(obj, iteratee, memo, context) {\n    var initial = arguments.length >= 3;\n    return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n  };\n}\n","import createReduce from './_createReduce.js';\n\n// **Reduce** builds up a single result from a list of values, aka `inject`,\n// or `foldl`.\nexport default createReduce(1);\n","import createReduce from './_createReduce.js';\n\n// The right-associative version of reduce, also known as `foldr`.\nexport default createReduce(-1);\n","import cb from './_cb.js';\nimport each from './each.js';\n\n// Return all the elements that pass a truth test.\nexport default function filter(obj, predicate, context) {\n  var results = [];\n  predicate = cb(predicate, context);\n  each(obj, function(value, index, list) {\n    if (predicate(value, index, list)) results.push(value);\n  });\n  return results;\n}\n","import filter from './filter.js';\nimport negate from './negate.js';\nimport cb from './_cb.js';\n\n// Return all the elements for which a truth test fails.\nexport default function reject(obj, predicate, context) {\n  return filter(obj, negate(cb(predicate)), context);\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Determine whether all of the elements pass a truth test.\nexport default function every(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length;\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    if (!predicate(obj[currentKey], currentKey, obj)) return false;\n  }\n  return true;\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Determine if at least one element in the object passes a truth test.\nexport default function some(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length;\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    if (predicate(obj[currentKey], currentKey, obj)) return true;\n  }\n  return false;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport indexOf from './indexOf.js';\n\n// Determine if the array or object contains a given item (using `===`).\nexport default function contains(obj, item, fromIndex, guard) {\n  if (!isArrayLike(obj)) obj = values(obj);\n  if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n  return indexOf(obj, item, fromIndex) >= 0;\n}\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport map from './map.js';\nimport deepGet from './_deepGet.js';\nimport toPath from './_toPath.js';\n\n// Invoke a method (with arguments) on every item in a collection.\nexport default restArguments(function(obj, path, args) {\n  var contextPath, func;\n  if (isFunction(path)) {\n    func = path;\n  } else {\n    path = toPath(path);\n    contextPath = path.slice(0, -1);\n    path = path[path.length - 1];\n  }\n  return map(obj, function(context) {\n    var method = func;\n    if (!method) {\n      if (contextPath && contextPath.length) {\n        context = deepGet(context, contextPath);\n      }\n      if (context == null) return void 0;\n      method = context[path];\n    }\n    return method == null ? method : method.apply(context, args);\n  });\n});\n","import map from './map.js';\nimport property from './property.js';\n\n// Convenience version of a common use case of `_.map`: fetching a property.\nexport default function pluck(obj, key) {\n  return map(obj, property(key));\n}\n","import filter from './filter.js';\nimport matcher from './matcher.js';\n\n// Convenience version of a common use case of `_.filter`: selecting only\n// objects containing specific `key:value` pairs.\nexport default function where(obj, attrs) {\n  return filter(obj, matcher(attrs));\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport cb from './_cb.js';\nimport each from './each.js';\n\n// Return the maximum element (or element-based computation).\nexport default function max(obj, iteratee, context) {\n  var result = -Infinity, lastComputed = -Infinity,\n      value, computed;\n  if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\n    obj = isArrayLike(obj) ? obj : values(obj);\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n      if (value != null && value > result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = cb(iteratee, context);\n    each(obj, function(v, index, list) {\n      computed = iteratee(v, index, list);\n      if (computed > lastComputed || (computed === -Infinity && result === -Infinity)) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n  return result;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport cb from './_cb.js';\nimport each from './each.js';\n\n// Return the minimum element (or element-based computation).\nexport default function min(obj, iteratee, context) {\n  var result = Infinity, lastComputed = Infinity,\n      value, computed;\n  if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\n    obj = isArrayLike(obj) ? obj : values(obj);\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n      if (value != null && value < result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = cb(iteratee, context);\n    each(obj, function(v, index, list) {\n      computed = iteratee(v, index, list);\n      if (computed < lastComputed || (computed === Infinity && result === Infinity)) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n  return result;\n}\n","import isArray from './isArray.js';\nimport { slice } from './_setup.js';\nimport isString from './isString.js';\nimport isArrayLike from './_isArrayLike.js';\nimport map from './map.js';\nimport identity from './identity.js';\nimport values from './values.js';\n\n// Safely create a real, live array from anything iterable.\nvar reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\nexport default function toArray(obj) {\n  if (!obj) return [];\n  if (isArray(obj)) return slice.call(obj);\n  if (isString(obj)) {\n    // Keep surrogate pair characters together.\n    return obj.match(reStrSymbol);\n  }\n  if (isArrayLike(obj)) return map(obj, identity);\n  return values(obj);\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport getLength from './_getLength.js';\nimport random from './random.js';\nimport toArray from './toArray.js';\n\n// Sample **n** random values from a collection using the modern version of the\n// [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n// If **n** is not specified, returns a single random element.\n// The internal `guard` argument allows it to work with `_.map`.\nexport default function sample(obj, n, guard) {\n  if (n == null || guard) {\n    if (!isArrayLike(obj)) obj = values(obj);\n    return obj[random(obj.length - 1)];\n  }\n  var sample = toArray(obj);\n  var length = getLength(sample);\n  n = Math.max(Math.min(n, length), 0);\n  var last = length - 1;\n  for (var index = 0; index < n; index++) {\n    var rand = random(index, last);\n    var temp = sample[index];\n    sample[index] = sample[rand];\n    sample[rand] = temp;\n  }\n  return sample.slice(0, n);\n}\n","import sample from './sample.js';\n\n// Shuffle a collection.\nexport default function shuffle(obj) {\n  return sample(obj, Infinity);\n}\n","import cb from './_cb.js';\nimport pluck from './pluck.js';\nimport map from './map.js';\n\n// Sort the object's values by a criterion produced by an iteratee.\nexport default function sortBy(obj, iteratee, context) {\n  var index = 0;\n  iteratee = cb(iteratee, context);\n  return pluck(map(obj, function(value, key, list) {\n    return {\n      value: value,\n      index: index++,\n      criteria: iteratee(value, key, list)\n    };\n  }).sort(function(left, right) {\n    var a = left.criteria;\n    var b = right.criteria;\n    if (a !== b) {\n      if (a > b || a === void 0) return 1;\n      if (a < b || b === void 0) return -1;\n    }\n    return left.index - right.index;\n  }), 'value');\n}\n","import cb from './_cb.js';\nimport each from './each.js';\n\n// An internal function used for aggregate \"group by\" operations.\nexport default function group(behavior, partition) {\n  return function(obj, iteratee, context) {\n    var result = partition ? [[], []] : {};\n    iteratee = cb(iteratee, context);\n    each(obj, function(value, index) {\n      var key = iteratee(value, index, obj);\n      behavior(result, value, key);\n    });\n    return result;\n  };\n}\n","import group from './_group.js';\nimport has from './_has.js';\n\n// Groups the object's values by a criterion. Pass either a string attribute\n// to group by, or a function that returns the criterion.\nexport default group(function(result, value, key) {\n  if (has(result, key)) result[key].push(value); else result[key] = [value];\n});\n","import group from './_group.js';\n\n// Indexes the object's values by a criterion, similar to `_.groupBy`, but for\n// when you know that your index values will be unique.\nexport default group(function(result, value, key) {\n  result[key] = value;\n});\n","import group from './_group.js';\nimport has from './_has.js';\n\n// Counts instances of an object that group by a certain criterion. Pass\n// either a string attribute to count by, or a function that returns the\n// criterion.\nexport default group(function(result, value, key) {\n  if (has(result, key)) result[key]++; else result[key] = 1;\n});\n","import group from './_group.js';\n\n// Split a collection into two arrays: one whose elements all pass the given\n// truth test, and one whose elements all do not pass the truth test.\nexport default group(function(result, value, pass) {\n  result[pass ? 0 : 1].push(value);\n}, true);\n","import isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Return the number of elements in a collection.\nexport default function size(obj) {\n  if (obj == null) return 0;\n  return isArrayLike(obj) ? obj.length : keys(obj).length;\n}\n","// Internal `_.pick` helper function to determine whether `key` is an enumerable\n// property name of `obj`.\nexport default function keyInObj(value, key, obj) {\n  return key in obj;\n}\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport optimizeCb from './_optimizeCb.js';\nimport allKeys from './allKeys.js';\nimport keyInObj from './_keyInObj.js';\nimport flatten from './_flatten.js';\n\n// Return a copy of the object only containing the allowed properties.\nexport default restArguments(function(obj, keys) {\n  var result = {}, iteratee = keys[0];\n  if (obj == null) return result;\n  if (isFunction(iteratee)) {\n    if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n    keys = allKeys(obj);\n  } else {\n    iteratee = keyInObj;\n    keys = flatten(keys, false, false);\n    obj = Object(obj);\n  }\n  for (var i = 0, length = keys.length; i < length; i++) {\n    var key = keys[i];\n    var value = obj[key];\n    if (iteratee(value, key, obj)) result[key] = value;\n  }\n  return result;\n});\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport negate from './negate.js';\nimport map from './map.js';\nimport flatten from './_flatten.js';\nimport contains from './contains.js';\nimport pick from './pick.js';\n\n// Return a copy of the object without the disallowed properties.\nexport default restArguments(function(obj, keys) {\n  var iteratee = keys[0], context;\n  if (isFunction(iteratee)) {\n    iteratee = negate(iteratee);\n    if (keys.length > 1) context = keys[1];\n  } else {\n    keys = map(flatten(keys, false, false), String);\n    iteratee = function(value, key) {\n      return !contains(keys, key);\n    };\n  }\n  return pick(obj, iteratee, context);\n});\n","import { slice } from './_setup.js';\n\n// Returns everything but the last entry of the array. Especially useful on\n// the arguments object. Passing **n** will return all the values in\n// the array, excluding the last N.\nexport default function initial(array, n, guard) {\n  return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n}\n","import initial from './initial.js';\n\n// Get the first element of an array. Passing **n** will return the first N\n// values in the array. The **guard** check allows it to work with `_.map`.\nexport default function first(array, n, guard) {\n  if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\n  if (n == null || guard) return array[0];\n  return initial(array, array.length - n);\n}\n","import { slice } from './_setup.js';\n\n// Returns everything but the first entry of the `array`. Especially useful on\n// the `arguments` object. Passing an **n** will return the rest N values in the\n// `array`.\nexport default function rest(array, n, guard) {\n  return slice.call(array, n == null || guard ? 1 : n);\n}\n","import rest from './rest.js';\n\n// Get the last element of an array. Passing **n** will return the last N\n// values in the array.\nexport default function last(array, n, guard) {\n  if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\n  if (n == null || guard) return array[array.length - 1];\n  return rest(array, Math.max(0, array.length - n));\n}\n","import filter from './filter.js';\n\n// Trim out all falsy values from an array.\nexport default function compact(array) {\n  return filter(array, Boolean);\n}\n","import _flatten from './_flatten.js';\n\n// Flatten out an array, either recursively (by default), or up to `depth`.\n// Passing `true` or `false` as `depth` means `1` or `Infinity`, respectively.\nexport default function flatten(array, depth) {\n  return _flatten(array, depth, false);\n}\n","import restArguments from './restArguments.js';\nimport flatten from './_flatten.js';\nimport filter from './filter.js';\nimport contains from './contains.js';\n\n// Take the difference between one array and a number of other arrays.\n// Only the elements present in just the first array will remain.\nexport default restArguments(function(array, rest) {\n  rest = flatten(rest, true, true);\n  return filter(array, function(value){\n    return !contains(rest, value);\n  });\n});\n","import restArguments from './restArguments.js';\nimport difference from './difference.js';\n\n// Return a version of the array that does not contain the specified value(s).\nexport default restArguments(function(array, otherArrays) {\n  return difference(array, otherArrays);\n});\n","import isBoolean from './isBoolean.js';\nimport cb from './_cb.js';\nimport getLength from './_getLength.js';\nimport contains from './contains.js';\n\n// Produce a duplicate-free version of the array. If the array has already\n// been sorted, you have the option of using a faster algorithm.\n// The faster algorithm will not work with an iteratee if the iteratee\n// is not a one-to-one function, so providing an iteratee will disable\n// the faster algorithm.\nexport default function uniq(array, isSorted, iteratee, context) {\n  if (!isBoolean(isSorted)) {\n    context = iteratee;\n    iteratee = isSorted;\n    isSorted = false;\n  }\n  if (iteratee != null) iteratee = cb(iteratee, context);\n  var result = [];\n  var seen = [];\n  for (var i = 0, length = getLength(array); i < length; i++) {\n    var value = array[i],\n        computed = iteratee ? iteratee(value, i, array) : value;\n    if (isSorted && !iteratee) {\n      if (!i || seen !== computed) result.push(value);\n      seen = computed;\n    } else if (iteratee) {\n      if (!contains(seen, computed)) {\n        seen.push(computed);\n        result.push(value);\n      }\n    } else if (!contains(result, value)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n","import restArguments from './restArguments.js';\nimport uniq from './uniq.js';\nimport flatten from './_flatten.js';\n\n// Produce an array that contains the union: each distinct element from all of\n// the passed-in arrays.\nexport default restArguments(function(arrays) {\n  return uniq(flatten(arrays, true, true));\n});\n","import getLength from './_getLength.js';\nimport contains from './contains.js';\n\n// Produce an array that contains every item shared between all the\n// passed-in arrays.\nexport default function intersection(array) {\n  var result = [];\n  var argsLength = arguments.length;\n  for (var i = 0, length = getLength(array); i < length; i++) {\n    var item = array[i];\n    if (contains(result, item)) continue;\n    var j;\n    for (j = 1; j < argsLength; j++) {\n      if (!contains(arguments[j], item)) break;\n    }\n    if (j === argsLength) result.push(item);\n  }\n  return result;\n}\n","import max from './max.js';\nimport getLength from './_getLength.js';\nimport pluck from './pluck.js';\n\n// Complement of zip. Unzip accepts an array of arrays and groups\n// each array's elements on shared indices.\nexport default function unzip(array) {\n  var length = (array && max(array, getLength).length) || 0;\n  var result = Array(length);\n\n  for (var index = 0; index < length; index++) {\n    result[index] = pluck(array, index);\n  }\n  return result;\n}\n","import restArguments from './restArguments.js';\nimport unzip from './unzip.js';\n\n// Zip together multiple lists into a single array -- elements that share\n// an index go together.\nexport default restArguments(unzip);\n","import getLength  from './_getLength.js';\n\n// Converts lists into objects. Pass either a single array of `[key, value]`\n// pairs, or two parallel arrays of the same length -- one of keys, and one of\n// the corresponding values. Passing by pairs is the reverse of `_.pairs`.\nexport default function object(list, values) {\n  var result = {};\n  for (var i = 0, length = getLength(list); i < length; i++) {\n    if (values) {\n      result[list[i]] = values[i];\n    } else {\n      result[list[i][0]] = list[i][1];\n    }\n  }\n  return result;\n}\n","// Generate an integer Array containing an arithmetic progression. A port of\n// the native Python `range()` function. See\n// [the Python documentation](https://docs.python.org/library/functions.html#range).\nexport default function range(start, stop, step) {\n  if (stop == null) {\n    stop = start || 0;\n    start = 0;\n  }\n  if (!step) {\n    step = stop < start ? -1 : 1;\n  }\n\n  var length = Math.max(Math.ceil((stop - start) / step), 0);\n  var range = Array(length);\n\n  for (var idx = 0; idx < length; idx++, start += step) {\n    range[idx] = start;\n  }\n\n  return range;\n}\n","import { slice } from './_setup.js';\n\n// Chunk a single array into multiple arrays, each containing `count` or fewer\n// items.\nexport default function chunk(array, count) {\n  if (count == null || count < 1) return [];\n  var result = [];\n  var i = 0, length = array.length;\n  while (i < length) {\n    result.push(slice.call(array, i, i += count));\n  }\n  return result;\n}\n","import _ from './underscore.js';\n\n// Helper function to continue chaining intermediate results.\nexport default function chainResult(instance, obj) {\n  return instance._chain ? _(obj).chain() : obj;\n}\n","import _ from './underscore.js';\nimport each from './each.js';\nimport functions from './functions.js';\nimport { push } from './_setup.js';\nimport chainResult from './_chainResult.js';\n\n// Add your own custom functions to the Underscore object.\nexport default function mixin(obj) {\n  each(functions(obj), function(name) {\n    var func = _[name] = obj[name];\n    _.prototype[name] = function() {\n      var args = [this._wrapped];\n      push.apply(args, arguments);\n      return chainResult(this, func.apply(_, args));\n    };\n  });\n  return _;\n}\n","import _ from './underscore.js';\nimport each from './each.js';\nimport { ArrayProto } from './_setup.js';\nimport chainResult from './_chainResult.js';\n\n// Add all mutator `Array` functions to the wrapper.\neach(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n  var method = ArrayProto[name];\n  _.prototype[name] = function() {\n    var obj = this._wrapped;\n    if (obj != null) {\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) {\n        delete obj[0];\n      }\n    }\n    return chainResult(this, obj);\n  };\n});\n\n// Add all accessor `Array` functions to the wrapper.\neach(['concat', 'join', 'slice'], function(name) {\n  var method = ArrayProto[name];\n  _.prototype[name] = function() {\n    var obj = this._wrapped;\n    if (obj != null) obj = method.apply(obj, arguments);\n    return chainResult(this, obj);\n  };\n});\n\nexport default _;\n","// Default Export\n// ==============\n// In this module, we mix our bundled exports into the `_` object and export\n// the result. This is analogous to setting `module.exports = _` in CommonJS.\n// Hence, this module is also the entry point of our UMD bundle and the package\n// entry point for CommonJS and AMD users. In other words, this is (the source\n// of) the module you are interfacing with when you do any of the following:\n//\n// ```js\n// // CommonJS\n// var _ = require('underscore');\n//\n// // AMD\n// define(['underscore'], function(_) {...});\n//\n// // UMD in the browser\n// // _ is available as a global variable\n// ```\nimport * as allExports from './index.js';\nimport { mixin } from './index.js';\n\n// Add all of the Underscore functions to the wrapper object.\nvar _ = mixin(allExports);\n// Legacy Node.js API.\n_._ = _;\n// Export the Underscore API.\nexport default _;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.14.0\";\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}